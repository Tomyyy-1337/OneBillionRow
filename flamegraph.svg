<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1110" onload="init(evt)" viewBox="0 0 1200 1110" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1110" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1093.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1093.00"> </text><svg id="frames" x="10" width="1180" total_samples="594225"><g><title>OBR.exe`core::slice::index::impl$0::index(ref$&lt;slice2$&lt;u8&gt; &gt;, core::ops::range::RangeFrom (199 samples, 0.03%)</title><rect x="0.2080%" y="197" width="0.0335%" height="15" fill="rgb(227,0,7)" fg:x="1236" fg:w="199"/><text x="0.4580%" y="207.50"></text></g><g><title>OBR.exe`core::slice::index::impl$6::index(core::ops::range::RangeFrom&lt;usize&gt;, ref$&lt;slice2$ (199 samples, 0.03%)</title><rect x="0.2080%" y="181" width="0.0335%" height="15" fill="rgb(217,0,24)" fg:x="1236" fg:w="199"/><text x="0.4580%" y="191.50"></text></g><g><title>OBR.exe`core::slice::index::impl$6::get_unchecked(core::ops::range::RangeFrom&lt;usize&gt;, ptr_const$&lt;slice2$ (199 samples, 0.03%)</title><rect x="0.2080%" y="165" width="0.0335%" height="15" fill="rgb(221,193,54)" fg:x="1236" fg:w="199"/><text x="0.4580%" y="175.50"></text></g><g><title>OBR.exe`core::slice::index::impl$4::get_unchecked(core::ops::range::Range&lt;usize&gt;, ptr_const$&lt;slice2$ (199 samples, 0.03%)</title><rect x="0.2080%" y="149" width="0.0335%" height="15" fill="rgb(248,212,6)" fg:x="1236" fg:w="199"/><text x="0.4580%" y="159.50"></text></g><g><title>OBR.exe`core::ptr::const_ptr::impl$0::add (199 samples, 0.03%)</title><rect x="0.2080%" y="133" width="0.0335%" height="15" fill="rgb(208,68,35)" fg:x="1236" fg:w="199"/><text x="0.4580%" y="143.50"></text></g><g><title>OBR.exe`core::slice::iter::impl$16::next::closure$0(core::slice::iter::impl$16::next::closure_env$0 (216 samples, 0.04%)</title><rect x="0.7472%" y="181" width="0.0363%" height="15" fill="rgb(232,128,0)" fg:x="4440" fg:w="216"/><text x="0.9972%" y="191.50"></text></g><g><title>OBR.exe`OBR::main::closure$1::closure$1::closure$0 (216 samples, 0.04%)</title><rect x="0.7472%" y="165" width="0.0363%" height="15" fill="rgb(207,160,47)" fg:x="4440" fg:w="216"/><text x="0.9972%" y="175.50"></text></g><g><title>OBR.exe`core::slice::iter::impl$16::next(core::slice::iter::Split (4,159 samples, 0.70%)</title><rect x="0.2080%" y="213" width="0.6999%" height="15" fill="rgb(228,23,34)" fg:x="1236" fg:w="4159"/><text x="0.4580%" y="223.50"></text></g><g><title>OBR.exe`core::slice::iter::impl$181::position(core::slice::iter::Iter&lt;u8&gt;*, core::slice::iter::impl$16::next::closure_env$0 (3,960 samples, 0.67%)</title><rect x="0.2415%" y="197" width="0.6664%" height="15" fill="rgb(218,30,26)" fg:x="1435" fg:w="3960"/><text x="0.4915%" y="207.50"></text></g><g><title>OBR.exe`core::slice::iter::impl$181::next(core::slice::iter::Iter (739 samples, 0.12%)</title><rect x="0.7835%" y="181" width="0.1244%" height="15" fill="rgb(220,122,19)" fg:x="4656" fg:w="739"/><text x="1.0335%" y="191.50"></text></g><g><title>OBR.exe`core::ptr::non_null::impl$12::eq(core::ptr::non_null::NonNull&lt;u8&gt;*, core::ptr::non_null::NonNull (572 samples, 0.10%)</title><rect x="0.8116%" y="165" width="0.0963%" height="15" fill="rgb(250,228,42)" fg:x="4823" fg:w="572"/><text x="1.0616%" y="175.50"></text></g><g><title>OBR.exe`core::num::dec2flt::float::impl$1::from_u64 (513 samples, 0.09%)</title><rect x="1.1698%" y="149" width="0.0863%" height="15" fill="rgb(240,193,28)" fg:x="6951" fg:w="513"/><text x="1.4198%" y="159.50"></text></g><g><title>OBR.exe`core::num::dec2flt::number::Number::is_fast_path (87 samples, 0.01%)</title><rect x="1.2568%" y="149" width="0.0146%" height="15" fill="rgb(216,20,37)" fg:x="7468" fg:w="87"/><text x="1.5068%" y="159.50"></text></g><g><title>OBR.exe`core::num::dec2flt::number::Number::try_fast_path (2,368 samples, 0.40%)</title><rect x="1.1043%" y="165" width="0.3985%" height="15" fill="rgb(206,188,39)" fg:x="6562" fg:w="2368"/><text x="1.3543%" y="175.50"></text></g><g><title>OBR.exe`core::ops::arith::impl$217::div (1,375 samples, 0.23%)</title><rect x="1.2714%" y="149" width="0.2314%" height="15" fill="rgb(217,207,13)" fg:x="7555" fg:w="1375"/><text x="1.5214%" y="159.50"></text></g><g><title>OBR.exe`core::num::dec2flt::parse::try_parse_digits::closure$0 (132 samples, 0.02%)</title><rect x="1.9604%" y="101" width="0.0222%" height="15" fill="rgb(231,73,38)" fg:x="11649" fg:w="132"/><text x="2.2104%" y="111.50"></text></g><g><title>OBR.exe`core::num::impl$9::wrapping_mul (82 samples, 0.01%)</title><rect x="1.9688%" y="85" width="0.0138%" height="15" fill="rgb(225,20,46)" fg:x="11699" fg:w="82"/><text x="2.2188%" y="95.50"></text></g><g><title>OBR.exe`core::num::dec2flt::parse::try_parse_digits (1,505 samples, 0.25%)</title><rect x="1.7509%" y="133" width="0.2533%" height="15" fill="rgb(210,31,41)" fg:x="10404" fg:w="1505"/><text x="2.0009%" y="143.50"></text></g><g><title>OBR.exe`core::num::dec2flt::common::impl$0::parse_digits (1,339 samples, 0.23%)</title><rect x="1.7788%" y="117" width="0.2253%" height="15" fill="rgb(221,200,47)" fg:x="10570" fg:w="1339"/><text x="2.0288%" y="127.50"></text></g><g><title>OBR.exe`core::num::impl$6::wrapping_sub (128 samples, 0.02%)</title><rect x="1.9826%" y="101" width="0.0215%" height="15" fill="rgb(226,26,5)" fg:x="11781" fg:w="128"/><text x="2.2326%" y="111.50"></text></g><g><title>OBR.exe`core::num::dec2flt::parse::parse_number (3,031 samples, 0.51%)</title><rect x="1.5028%" y="165" width="0.5101%" height="15" fill="rgb(249,33,26)" fg:x="8930" fg:w="3031"/><text x="1.7528%" y="175.50"></text></g><g><title>OBR.exe`core::num::dec2flt::parse::parse_partial_number (2,043 samples, 0.34%)</title><rect x="1.6691%" y="149" width="0.3438%" height="15" fill="rgb(235,183,28)" fg:x="9918" fg:w="2043"/><text x="1.9191%" y="159.50"></text></g><g><title>OBR.exe`enum2$&lt;core::result::Result&lt;f64,core::num::dec2flt::ParseFloatError&gt; &gt;::unwrap(enum2$&lt;core::result::Result (6,555 samples, 1.10%)</title><rect x="0.9099%" y="213" width="1.1031%" height="15" fill="rgb(221,5,38)" fg:x="5407" fg:w="6555"/><text x="1.1599%" y="223.50"></text></g><g><title>OBR.exe`core::num::dec2flt::impl$3::from_str (6,444 samples, 1.08%)</title><rect x="0.9286%" y="197" width="1.0844%" height="15" fill="rgb(247,18,42)" fg:x="5518" fg:w="6444"/><text x="1.1786%" y="207.50"></text></g><g><title>OBR.exe`core::num::dec2flt::dec2flt (5,971 samples, 1.00%)</title><rect x="1.0082%" y="181" width="1.0048%" height="15" fill="rgb(241,131,45)" fg:x="5991" fg:w="5971"/><text x="1.2582%" y="191.50"></text></g><g><title>OBR.exe`OBR::main::closure$1::closure$1(OBR::main::closure$1::closure_env$1*, ref$&lt;slice2$ (14,343 samples, 2.41%)</title><rect x="0.1671%" y="229" width="2.4137%" height="15" fill="rgb(249,31,29)" fg:x="993" fg:w="14343"/><text x="0.4171%" y="239.50">OB..</text></g><g><title>OBR.exe`enum2$&lt;core::result::Result&lt;ref$&lt;str$&gt;,core::str::error::Utf8Error&gt; &gt;::unwrap(enum2$&lt;core::result::Result&lt;ref$ (3,374 samples, 0.57%)</title><rect x="2.0130%" y="213" width="0.5678%" height="15" fill="rgb(225,111,53)" fg:x="11962" fg:w="3374"/><text x="2.2630%" y="223.50"></text></g><g><title>OBR.exe`core::str::converts::from_utf8 (3,062 samples, 0.52%)</title><rect x="2.0655%" y="197" width="0.5153%" height="15" fill="rgb(238,160,17)" fg:x="12274" fg:w="3062"/><text x="2.3155%" y="207.50"></text></g><g><title>OBR.exe`core::str::validations::run_utf8_validation (2,215 samples, 0.37%)</title><rect x="2.2081%" y="181" width="0.3728%" height="15" fill="rgb(214,148,48)" fg:x="13121" fg:w="2215"/><text x="2.4581%" y="191.50"></text></g><g><title>OBR.exe`core::num::impl$11::wrapping_sub (263 samples, 0.04%)</title><rect x="2.5366%" y="165" width="0.0443%" height="15" fill="rgb(232,36,49)" fg:x="15073" fg:w="263"/><text x="2.7866%" y="175.50"></text></g><g><title>OBR.exe`core::f64::impl$0::max (200 samples, 0.03%)</title><rect x="2.6729%" y="197" width="0.0337%" height="15" fill="rgb(209,103,24)" fg:x="15883" fg:w="200"/><text x="2.9229%" y="207.50"></text></g><g><title>OBR.exe`OBR::Station::upate (960 samples, 0.16%)</title><rect x="2.6071%" y="213" width="0.1616%" height="15" fill="rgb(229,88,8)" fg:x="15492" fg:w="960"/><text x="2.8571%" y="223.50"></text></g><g><title>OBR.exe`core::f64::impl$0::min (369 samples, 0.06%)</title><rect x="2.7066%" y="197" width="0.0621%" height="15" fill="rgb(213,181,19)" fg:x="16083" fg:w="369"/><text x="2.9566%" y="207.50"></text></g><g><title>OBR.exe`ahash::fallback_hash::impl$1::finish (318 samples, 0.05%)</title><rect x="2.8030%" y="165" width="0.0535%" height="15" fill="rgb(254,191,54)" fg:x="16656" fg:w="318"/><text x="3.0530%" y="175.50"></text></g><g><title>OBR.exe`ahash::operations::folded_multiply (318 samples, 0.05%)</title><rect x="2.8030%" y="149" width="0.0535%" height="15" fill="rgb(241,83,37)" fg:x="16656" fg:w="318"/><text x="3.0530%" y="159.50"></text></g><g><title>OBR.exe`core::num::impl$10::wrapping_mul (277 samples, 0.05%)</title><rect x="2.8099%" y="133" width="0.0466%" height="15" fill="rgb(233,36,39)" fg:x="16697" fg:w="277"/><text x="3.0599%" y="143.50"></text></g><g><title>OBR.exe`ahash::operations::folded_multiply (81 samples, 0.01%)</title><rect x="2.9055%" y="101" width="0.0136%" height="15" fill="rgb(226,3,54)" fg:x="17265" fg:w="81"/><text x="3.1555%" y="111.50"></text></g><g><title>OBR.exe`ahash::fallback_hash::AHasher::large_update (365 samples, 0.06%)</title><rect x="2.8718%" y="117" width="0.0614%" height="15" fill="rgb(245,192,40)" fg:x="17065" fg:w="365"/><text x="3.1218%" y="127.50"></text></g><g><title>OBR.exe`core::num::impl$9::wrapping_add (84 samples, 0.01%)</title><rect x="2.9191%" y="101" width="0.0141%" height="15" fill="rgb(238,167,29)" fg:x="17346" fg:w="84"/><text x="3.1691%" y="111.50"></text></g><g><title>OBR.exe`hashbrown::map::make_hash(core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;*, ref$&lt;slice2$ (910 samples, 0.15%)</title><rect x="2.8030%" y="181" width="0.1531%" height="15" fill="rgb(232,182,51)" fg:x="16656" fg:w="910"/><text x="3.0530%" y="191.50"></text></g><g><title>OBR.exe`core::hash::impls::impl$4::hash(ref$&lt;slice2$ (592 samples, 0.10%)</title><rect x="2.8565%" y="165" width="0.0996%" height="15" fill="rgb(231,60,39)" fg:x="16974" fg:w="592"/><text x="3.1065%" y="175.50"></text></g><g><title>OBR.exe`core::hash::impls::impl$9::hash_slice(ref$&lt;slice2$ (592 samples, 0.10%)</title><rect x="2.8565%" y="149" width="0.0996%" height="15" fill="rgb(208,69,12)" fg:x="16974" fg:w="592"/><text x="3.1065%" y="159.50"></text></g><g><title>OBR.exe`ahash::fallback_hash::impl$1::write(ahash::fallback_hash::AHasher*, ref$&lt;slice2$ (592 samples, 0.10%)</title><rect x="2.8565%" y="133" width="0.0996%" height="15" fill="rgb(235,93,37)" fg:x="16974" fg:w="592"/><text x="3.1065%" y="143.50"></text></g><g><title>OBR.exe`ahash::operations::read_small(ref$&lt;slice2$ (136 samples, 0.02%)</title><rect x="2.9332%" y="117" width="0.0229%" height="15" fill="rgb(213,116,39)" fg:x="17430" fg:w="136"/><text x="3.1832%" y="127.50"></text></g><g><title>OBR.exe`hashbrown::raw::bitmask::impl$3::next (70 samples, 0.01%)</title><rect x="2.9931%" y="133" width="0.0118%" height="15" fill="rgb(222,207,29)" fg:x="17786" fg:w="70"/><text x="3.2431%" y="143.50"></text></g><g><title>OBR.exe`hashbrown::raw::h2 (522 samples, 0.09%)</title><rect x="3.0049%" y="133" width="0.0878%" height="15" fill="rgb(206,96,30)" fg:x="17856" fg:w="522"/><text x="3.2549%" y="143.50"></text></g><g><title>OBR.exe`memcmp (102 samples, 0.02%)</title><rect x="3.3390%" y="37" width="0.0172%" height="15" fill="rgb(218,138,4)" fg:x="19841" fg:w="102"/><text x="3.5890%" y="47.50"></text></g><g><title>`0x7FFE4E631227 (456 samples, 0.08%)</title><rect x="3.3684%" y="37" width="0.0767%" height="15" fill="rgb(250,191,14)" fg:x="20016" fg:w="456"/><text x="3.6184%" y="47.50"></text></g><g><title>`0x7FFE4E631240 (76 samples, 0.01%)</title><rect x="3.4654%" y="37" width="0.0128%" height="15" fill="rgb(239,60,40)" fg:x="20592" fg:w="76"/><text x="3.7154%" y="47.50"></text></g><g><title>`0x7FFE4E631242 (94 samples, 0.02%)</title><rect x="3.4781%" y="37" width="0.0158%" height="15" fill="rgb(206,27,48)" fg:x="20668" fg:w="94"/><text x="3.7281%" y="47.50"></text></g><g><title>`0x7FFE4E631247 (840 samples, 0.14%)</title><rect x="3.4940%" y="37" width="0.1414%" height="15" fill="rgb(225,35,8)" fg:x="20762" fg:w="840"/><text x="3.7440%" y="47.50"></text></g><g><title>`0x7FFE4E6312A9 (72 samples, 0.01%)</title><rect x="3.6663%" y="37" width="0.0121%" height="15" fill="rgb(250,213,24)" fg:x="21786" fg:w="72"/><text x="3.9163%" y="47.50"></text></g><g><title>OBR.exe`hashbrown::map::equivalent_key::closure$0(hashbrown::map::equivalent_key::closure_env$0&lt;slice2$&lt;u8&gt;,ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station&gt;*, tuple$&lt;ref$&lt;slice2$ (2,223 samples, 0.37%)</title><rect x="3.3073%" y="117" width="0.3741%" height="15" fill="rgb(247,123,22)" fg:x="19653" fg:w="2223"/><text x="3.5573%" y="127.50"></text></g><g><title>OBR.exe`hashbrown::impl$0::equivalent(ref$&lt;slice2$&lt;u8&gt; &gt;, ref$&lt;slice2$ (2,223 samples, 0.37%)</title><rect x="3.3073%" y="101" width="0.3741%" height="15" fill="rgb(231,138,38)" fg:x="19653" fg:w="2223"/><text x="3.5573%" y="111.50"></text></g><g><title>OBR.exe`core::cmp::impls::impl$9::eq(ref$&lt;slice2$&lt;u8&gt; &gt;*, ref$&lt;slice2$ (2,200 samples, 0.37%)</title><rect x="3.3112%" y="85" width="0.3702%" height="15" fill="rgb(231,145,46)" fg:x="19676" fg:w="2200"/><text x="3.5612%" y="95.50"></text></g><g><title>OBR.exe`core::slice::cmp::impl$0::eq(ref$&lt;slice2$&lt;u8&gt; &gt;, ref$&lt;slice2$ (2,200 samples, 0.37%)</title><rect x="3.3112%" y="69" width="0.3702%" height="15" fill="rgb(251,118,11)" fg:x="19676" fg:w="2200"/><text x="3.5612%" y="79.50"></text></g><g><title>OBR.exe`core::slice::cmp::impl$5::equal(ref$&lt;slice2$&lt;u8&gt; &gt;, ref$&lt;slice2$ (2,200 samples, 0.37%)</title><rect x="3.3112%" y="53" width="0.3702%" height="15" fill="rgb(217,147,25)" fg:x="19676" fg:w="2200"/><text x="3.5612%" y="63.50"></text></g><g><title>OBR.exe`hashbrown::raw::Bucket&lt;tuple$&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station&gt; &gt;::as_ptr (257 samples, 0.04%)</title><rect x="3.6814%" y="101" width="0.0432%" height="15" fill="rgb(247,81,37)" fg:x="21876" fg:w="257"/><text x="3.9314%" y="111.50"></text></g><g><title>OBR.exe`core::ptr::mut_ptr::impl$0::sub(tuple$&lt;ref$&lt;slice2$ (257 samples, 0.04%)</title><rect x="3.6814%" y="85" width="0.0432%" height="15" fill="rgb(209,12,38)" fg:x="21876" fg:w="257"/><text x="3.9314%" y="95.50"></text></g><g><title>OBR.exe`core::ptr::mut_ptr::impl$0::offset(tuple$&lt;ref$&lt;slice2$ (257 samples, 0.04%)</title><rect x="3.6814%" y="69" width="0.0432%" height="15" fill="rgb(227,1,9)" fg:x="21876" fg:w="257"/><text x="3.9314%" y="79.50"></text></g><g><title>OBR.exe`hashbrown::raw::impl$8::find::closure$0(hashbrown::raw::impl$8::find::closure_env$0&lt;tuple$&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station&gt;,allocator_api2::stable::alloc::global::Global,hashbrown::map::equivalent_key::closure_env$0&lt;slice2$&lt;u8&gt;,ref$&lt;slice2$ (3,840 samples, 0.65%)</title><rect x="3.0928%" y="133" width="0.6462%" height="15" fill="rgb(248,47,43)" fg:x="18378" fg:w="3840"/><text x="3.3428%" y="143.50"></text></g><g><title>OBR.exe`hashbrown::raw::RawTable&lt;tuple$&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station&gt;,allocator_api2::stable::alloc::global::Global&gt;::bucket (342 samples, 0.06%)</title><rect x="3.6814%" y="117" width="0.0576%" height="15" fill="rgb(221,10,30)" fg:x="21876" fg:w="342"/><text x="3.9314%" y="127.50"></text></g><g><title>OBR.exe`hashbrown::raw::Bucket&lt;tuple$&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station&gt; &gt;::from_base_index(core::ptr::non_null::NonNull&lt;tuple$&lt;ref$&lt;slice2$ (85 samples, 0.01%)</title><rect x="3.7247%" y="101" width="0.0143%" height="15" fill="rgb(210,229,1)" fg:x="22133" fg:w="85"/><text x="3.9747%" y="111.50"></text></g><g><title>OBR.exe`core::ptr::mut_ptr::impl$0::sub(tuple$&lt;ref$&lt;slice2$ (85 samples, 0.01%)</title><rect x="3.7247%" y="85" width="0.0143%" height="15" fill="rgb(222,148,37)" fg:x="22133" fg:w="85"/><text x="3.9747%" y="95.50"></text></g><g><title>OBR.exe`hashbrown::raw::sse2::Group::load (62 samples, 0.01%)</title><rect x="3.7390%" y="133" width="0.0104%" height="15" fill="rgb(234,67,33)" fg:x="22218" fg:w="62"/><text x="3.9890%" y="143.50"></text></g><g><title>OBR.exe`core::core_arch::x86::sse2::_mm_loadu_si128 (62 samples, 0.01%)</title><rect x="3.7390%" y="117" width="0.0104%" height="15" fill="rgb(247,98,35)" fg:x="22218" fg:w="62"/><text x="3.9890%" y="127.50"></text></g><g><title>OBR.exe`core::intrinsics::copy_nonoverlapping (62 samples, 0.01%)</title><rect x="3.7390%" y="101" width="0.0104%" height="15" fill="rgb(247,138,52)" fg:x="22218" fg:w="62"/><text x="3.9890%" y="111.50"></text></g><g><title>OBR.exe`hashbrown::raw::sse2::Group::match_byte (397 samples, 0.07%)</title><rect x="3.7494%" y="133" width="0.0668%" height="15" fill="rgb(213,79,30)" fg:x="22280" fg:w="397"/><text x="3.9994%" y="143.50"></text></g><g><title>OBR.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (397 samples, 0.07%)</title><rect x="3.7494%" y="117" width="0.0668%" height="15" fill="rgb(246,177,23)" fg:x="22280" fg:w="397"/><text x="3.9994%" y="127.50"></text></g><g><title>OBR.exe`core::iter::adapters::map::map_fold::closure$0(core::iter::adapters::map::map_fold::closure_env$0&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,tuple$&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,f64&gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,OBR::main::closure$1::closure_env$1,OBR::main::closure$1::closure_env$2&gt;*, hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;, ref$&lt;slice2$ (22,269 samples, 3.75%)</title><rect x="0.0784%" y="245" width="3.7476%" height="15" fill="rgb(230,62,27)" fg:x="466" fg:w="22269"/><text x="0.3284%" y="255.50">OBR...</text></g><g><title>OBR.exe`OBR::main::closure$1::closure$2(OBR::main::closure$1::closure_env$2*, hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;, tuple$&lt;ref$&lt;slice2$ (7,399 samples, 1.25%)</title><rect x="2.5808%" y="229" width="1.2452%" height="15" fill="rgb(216,154,8)" fg:x="15336" fg:w="7399"/><text x="2.8308%" y="239.50"></text></g><g><title>OBR.exe`hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;::get_mut(ref$&lt;slice2$ (6,283 samples, 1.06%)</title><rect x="2.7686%" y="213" width="1.0573%" height="15" fill="rgb(244,35,45)" fg:x="16452" fg:w="6283"/><text x="3.0186%" y="223.50"></text></g><g><title>OBR.exe`hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;::get_inner_mut(ref$&lt;slice2$ (6,283 samples, 1.06%)</title><rect x="2.7686%" y="197" width="1.0573%" height="15" fill="rgb(251,115,12)" fg:x="16452" fg:w="6283"/><text x="3.0186%" y="207.50"></text></g><g><title>OBR.exe`hashbrown::raw::RawTable&lt;tuple$&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station&gt;,allocator_api2::stable::alloc::global::Global&gt;::get_mut(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;slice2$&lt;u8&gt;,ref$&lt;slice2$ (5,169 samples, 0.87%)</title><rect x="2.9561%" y="181" width="0.8699%" height="15" fill="rgb(240,54,50)" fg:x="17566" fg:w="5169"/><text x="3.2061%" y="191.50"></text></g><g><title>OBR.exe`hashbrown::raw::RawTable&lt;tuple$&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station&gt;,allocator_api2::stable::alloc::global::Global&gt;::find(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;slice2$&lt;u8&gt;,ref$&lt;slice2$ (5,169 samples, 0.87%)</title><rect x="2.9561%" y="165" width="0.8699%" height="15" fill="rgb(233,84,52)" fg:x="17566" fg:w="5169"/><text x="3.2061%" y="175.50"></text></g><g><title>OBR.exe`hashbrown::raw::RawTableInner::find_inner(unsigned long long, ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;usize&gt;,assoc$ (5,169 samples, 0.87%)</title><rect x="2.9561%" y="149" width="0.8699%" height="15" fill="rgb(207,117,47)" fg:x="17566" fg:w="5169"/><text x="3.2061%" y="159.50"></text></g><g><title>OBR.exe`core::slice::index::impl$0::index(ref$&lt;slice2$&lt;u8&gt; &gt;, core::ops::range::RangeFrom (1,004 samples, 0.17%)</title><rect x="3.8415%" y="229" width="0.1690%" height="15" fill="rgb(249,43,39)" fg:x="22827" fg:w="1004"/><text x="4.0915%" y="239.50"></text></g><g><title>OBR.exe`core::slice::index::impl$6::index(core::ops::range::RangeFrom&lt;usize&gt;, ref$&lt;slice2$ (1,004 samples, 0.17%)</title><rect x="3.8415%" y="213" width="0.1690%" height="15" fill="rgb(209,38,44)" fg:x="22827" fg:w="1004"/><text x="4.0915%" y="223.50"></text></g><g><title>OBR.exe`core::slice::index::impl$6::get_unchecked(core::ops::range::RangeFrom&lt;usize&gt;, ptr_const$&lt;slice2$ (1,004 samples, 0.17%)</title><rect x="3.8415%" y="197" width="0.1690%" height="15" fill="rgb(236,212,23)" fg:x="22827" fg:w="1004"/><text x="4.0915%" y="207.50"></text></g><g><title>OBR.exe`core::slice::index::impl$4::get_unchecked(core::ops::range::Range&lt;usize&gt;, ptr_const$&lt;slice2$ (1,004 samples, 0.17%)</title><rect x="3.8415%" y="181" width="0.1690%" height="15" fill="rgb(242,79,21)" fg:x="22827" fg:w="1004"/><text x="4.0915%" y="191.50"></text></g><g><title>OBR.exe`core::ptr::const_ptr::impl$0::add (1,004 samples, 0.17%)</title><rect x="3.8415%" y="165" width="0.1690%" height="15" fill="rgb(211,96,35)" fg:x="22827" fg:w="1004"/><text x="4.0915%" y="175.50"></text></g><g><title>OBR.exe`core::slice::iter::impl$16::next::closure$0(core::slice::iter::impl$16::next::closure_env$0 (2,031 samples, 0.34%)</title><rect x="4.3961%" y="213" width="0.3418%" height="15" fill="rgb(253,215,40)" fg:x="26123" fg:w="2031"/><text x="4.6461%" y="223.50"></text></g><g><title>OBR.exe`OBR::main::closure$1::closure$0 (2,031 samples, 0.34%)</title><rect x="4.3961%" y="197" width="0.3418%" height="15" fill="rgb(211,81,21)" fg:x="26123" fg:w="2031"/><text x="4.6461%" y="207.50"></text></g><g><title>OBR.exe`rayon_core::job::impl$4::execute&lt;rayon_core::latch::LatchRef&lt;rayon_core::latch::LockLatch&gt;,rayon_core::registry::impl$6::in_worker_cold::closure$0::closure_env$0&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;OBR::main::closure_env$3,OBR::main::closure_env$2&gt;,OBR::main::closure_env$1&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;OBR::main::closure_env$3,OBR::main::closure_env$2&gt;,OBR::main::closure_env$1&gt; &gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; &gt;,tuple$&lt;hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; &gt; &gt;,tuple$&lt;hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; &gt; &gt;(tuple$ (28,749 samples, 4.84%)</title><rect x="0.0034%" y="725" width="4.8381%" height="15" fill="rgb(208,190,38)" fg:x="20" fg:w="28749"/><text x="0.2534%" y="735.50">OBR.ex..</text></g><g><title>OBR.exe`enum2$&lt;rayon_core::job::JobResult&lt;tuple$&lt;hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; &gt; &gt; &gt;::call(rayon_core::registry::impl$6::in_worker_cold::closure$0::closure_env$0&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;OBR::main::closure_env$3,OBR::main::closure_env$2&gt;,OBR::main::closure_env$1&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;OBR::main::closure_env$3,OBR::main::closure_env$2&gt;,OBR::main::closure_env$1&gt; &gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; &gt;,tuple$&lt;hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault (28,749 samples, 4.84%)</title><rect x="0.0034%" y="709" width="4.8381%" height="15" fill="rgb(235,213,38)" fg:x="20" fg:w="28749"/><text x="0.2534%" y="719.50">OBR.ex..</text></g><g><title>OBR.exe`std::panicking::try&lt;tuple$&lt;hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; &gt;,core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;tuple$&lt;hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; &gt;,rayon_core::registry::impl$6::in_worker_cold::closure$0::closure_env$0&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;OBR::main::closure_env$3,OBR::main::closure_env$2&gt;,OBR::main::closure_env$1&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;OBR::main::closure_env$3,OBR::main::closure_env$2&gt;,OBR::main::closure_env$1&gt; &gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; &gt;,tuple$&lt;hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; &gt; &gt; &gt; &gt; &gt;(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;tuple$&lt;hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; &gt;,rayon_core::registry::impl$6::in_worker_cold::closure$0::closure_env$0&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;OBR::main::closure_env$3,OBR::main::closure_env$2&gt;,OBR::main::closure_env$1&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;OBR::main::closure_env$3,OBR::main::closure_env$2&gt;,OBR::main::closure_env$1&gt; &gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; &gt;,tuple$&lt;hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault (28,749 samples, 4.84%)</title><rect x="0.0034%" y="693" width="4.8381%" height="15" fill="rgb(237,122,38)" fg:x="20" fg:w="28749"/><text x="0.2534%" y="703.50">OBR.ex..</text></g><g><title>OBR.exe`std::panicking::try::do_call (28,749 samples, 4.84%)</title><rect x="0.0034%" y="677" width="4.8381%" height="15" fill="rgb(244,218,35)" fg:x="20" fg:w="28749"/><text x="0.2534%" y="687.50">OBR.ex..</text></g><g><title>OBR.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;OBR::main::closure_env$3,OBR::main::closure_env$2&gt;,OBR::main::closure_env$1&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;OBR::main::closure_env$3,OBR::main::closure_env$2&gt;,OBR::main::closure_env$1&gt; &gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;OBR::main::closure_env$3,OBR::main::closure_env$2&gt;,OBR::main::closure_env$1&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;OBR::main::closure_env$3,OBR::main::closure_env$2&gt;,OBR::main::closure_env$1&gt; &gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault (28,749 samples, 4.84%)</title><rect x="0.0034%" y="661" width="4.8381%" height="15" fill="rgb(240,68,47)" fg:x="20" fg:w="28749"/><text x="0.2534%" y="671.50">OBR.ex..</text></g><g><title>OBR.exe`std::panicking::try&lt;hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;OBR::main::closure_env$3,OBR::main::closure_env$2&gt;,OBR::main::closure_env$1&gt; &gt; &gt; &gt; &gt;(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer (28,749 samples, 4.84%)</title><rect x="0.0034%" y="645" width="4.8381%" height="15" fill="rgb(210,16,53)" fg:x="20" fg:w="28749"/><text x="0.2534%" y="655.50">OBR.ex..</text></g><g><title>OBR.exe`std::panicking::try::do_call (28,749 samples, 4.84%)</title><rect x="0.0034%" y="629" width="4.8381%" height="15" fill="rgb(235,124,12)" fg:x="20" fg:w="28749"/><text x="0.2534%" y="639.50">OBR.ex..</text></g><g><title>OBR.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;OBR::main::closure_env$3,OBR::main::closure_env$2&gt;,OBR::main::closure_env$1&gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer (28,749 samples, 4.84%)</title><rect x="0.0034%" y="613" width="4.8381%" height="15" fill="rgb(224,169,11)" fg:x="20" fg:w="28749"/><text x="0.2534%" y="623.50">OBR.ex..</text></g><g><title>OBR.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;OBR::main::closure_env$3,OBR::main::closure_env$2&gt;,OBR::main::closure_env$1&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;OBR::main::closure_env$3,OBR::main::closure_env$2&gt;,OBR::main::closure_env$1&gt; &gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; &gt;,tuple$&lt;hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;OBR::main::closure_env$3,OBR::main::closure_env$2&gt;,OBR::main::closure_env$1&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;OBR::main::closure_env$3,OBR::main::closure_env$2&gt;,OBR::main::closure_env$1&gt; &gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault (28,749 samples, 4.84%)</title><rect x="0.0034%" y="597" width="4.8381%" height="15" fill="rgb(250,166,2)" fg:x="20" fg:w="28749"/><text x="0.2534%" y="607.50">OBR.ex..</text></g><g><title>OBR.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;OBR::main::closure_env$3,OBR::main::closure_env$2&gt;,OBR::main::closure_env$1&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;OBR::main::closure_env$3,OBR::main::closure_env$2&gt;,OBR::main::closure_env$1&gt; &gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;OBR::main::closure_env$3,OBR::main::closure_env$2&gt;,OBR::main::closure_env$1&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;OBR::main::closure_env$3,OBR::main::closure_env$2&gt;,OBR::main::closure_env$1&gt; &gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault (28,749 samples, 4.84%)</title><rect x="0.0034%" y="581" width="4.8381%" height="15" fill="rgb(242,216,29)" fg:x="20" fg:w="28749"/><text x="0.2534%" y="591.50">OBR.ex..</text></g><g><title>OBR.exe`std::panicking::try&lt;hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;OBR::main::closure_env$3,OBR::main::closure_env$2&gt;,OBR::main::closure_env$1&gt; &gt; &gt; &gt; &gt;(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer (28,749 samples, 4.84%)</title><rect x="0.0034%" y="565" width="4.8381%" height="15" fill="rgb(230,116,27)" fg:x="20" fg:w="28749"/><text x="0.2534%" y="575.50">OBR.ex..</text></g><g><title>OBR.exe`std::panicking::try::do_call (28,749 samples, 4.84%)</title><rect x="0.0034%" y="549" width="4.8381%" height="15" fill="rgb(228,99,48)" fg:x="20" fg:w="28749"/><text x="0.2534%" y="559.50">OBR.ex..</text></g><g><title>OBR.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;OBR::main::closure_env$3,OBR::main::closure_env$2&gt;,OBR::main::closure_env$1&gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer (28,749 samples, 4.84%)</title><rect x="0.0034%" y="533" width="4.8381%" height="15" fill="rgb(253,11,6)" fg:x="20" fg:w="28749"/><text x="0.2534%" y="543.50">OBR.ex..</text></g><g><title>OBR.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;OBR::main::closure_env$3,OBR::main::closure_env$2&gt;,OBR::main::closure_env$1&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;OBR::main::closure_env$3,OBR::main::closure_env$2&gt;,OBR::main::closure_env$1&gt; &gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; &gt;,tuple$&lt;hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;OBR::main::closure_env$3,OBR::main::closure_env$2&gt;,OBR::main::closure_env$1&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;OBR::main::closure_env$3,OBR::main::closure_env$2&gt;,OBR::main::closure_env$1&gt; &gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault (28,749 samples, 4.84%)</title><rect x="0.0034%" y="517" width="4.8381%" height="15" fill="rgb(247,143,39)" fg:x="20" fg:w="28749"/><text x="0.2534%" y="527.50">OBR.ex..</text></g><g><title>OBR.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;OBR::main::closure_env$3,OBR::main::closure_env$2&gt;,OBR::main::closure_env$1&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;OBR::main::closure_env$3,OBR::main::closure_env$2&gt;,OBR::main::closure_env$1&gt; &gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;OBR::main::closure_env$3,OBR::main::closure_env$2&gt;,OBR::main::closure_env$1&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;OBR::main::closure_env$3,OBR::main::closure_env$2&gt;,OBR::main::closure_env$1&gt; &gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault (28,749 samples, 4.84%)</title><rect x="0.0034%" y="501" width="4.8381%" height="15" fill="rgb(236,97,10)" fg:x="20" fg:w="28749"/><text x="0.2534%" y="511.50">OBR.ex..</text></g><g><title>OBR.exe`std::panicking::try&lt;hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;OBR::main::closure_env$3,OBR::main::closure_env$2&gt;,OBR::main::closure_env$1&gt; &gt; &gt; &gt; &gt;(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer (28,748 samples, 4.84%)</title><rect x="0.0035%" y="485" width="4.8379%" height="15" fill="rgb(233,208,19)" fg:x="21" fg:w="28748"/><text x="0.2535%" y="495.50">OBR.ex..</text></g><g><title>OBR.exe`std::panicking::try::do_call (28,748 samples, 4.84%)</title><rect x="0.0035%" y="469" width="4.8379%" height="15" fill="rgb(216,164,2)" fg:x="21" fg:w="28748"/><text x="0.2535%" y="479.50">OBR.ex..</text></g><g><title>OBR.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;OBR::main::closure_env$3,OBR::main::closure_env$2&gt;,OBR::main::closure_env$1&gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer (28,748 samples, 4.84%)</title><rect x="0.0035%" y="453" width="4.8379%" height="15" fill="rgb(220,129,5)" fg:x="21" fg:w="28748"/><text x="0.2535%" y="463.50">OBR.ex..</text></g><g><title>OBR.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;OBR::main::closure_env$3,OBR::main::closure_env$2&gt;,OBR::main::closure_env$1&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;OBR::main::closure_env$3,OBR::main::closure_env$2&gt;,OBR::main::closure_env$1&gt; &gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; &gt;,tuple$&lt;hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;OBR::main::closure_env$3,OBR::main::closure_env$2&gt;,OBR::main::closure_env$1&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;OBR::main::closure_env$3,OBR::main::closure_env$2&gt;,OBR::main::closure_env$1&gt; &gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault (28,748 samples, 4.84%)</title><rect x="0.0035%" y="437" width="4.8379%" height="15" fill="rgb(242,17,10)" fg:x="21" fg:w="28748"/><text x="0.2535%" y="447.50">OBR.ex..</text></g><g><title>OBR.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;OBR::main::closure_env$3,OBR::main::closure_env$2&gt;,OBR::main::closure_env$1&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;OBR::main::closure_env$3,OBR::main::closure_env$2&gt;,OBR::main::closure_env$1&gt; &gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;OBR::main::closure_env$3,OBR::main::closure_env$2&gt;,OBR::main::closure_env$1&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;OBR::main::closure_env$3,OBR::main::closure_env$2&gt;,OBR::main::closure_env$1&gt; &gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault (28,748 samples, 4.84%)</title><rect x="0.0035%" y="421" width="4.8379%" height="15" fill="rgb(242,107,0)" fg:x="21" fg:w="28748"/><text x="0.2535%" y="431.50">OBR.ex..</text></g><g><title>OBR.exe`std::panicking::try&lt;hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;OBR::main::closure_env$3,OBR::main::closure_env$2&gt;,OBR::main::closure_env$1&gt; &gt; &gt; &gt; &gt;(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer (28,746 samples, 4.84%)</title><rect x="0.0039%" y="405" width="4.8376%" height="15" fill="rgb(251,28,31)" fg:x="23" fg:w="28746"/><text x="0.2539%" y="415.50">OBR.ex..</text></g><g><title>OBR.exe`std::panicking::try::do_call (28,746 samples, 4.84%)</title><rect x="0.0039%" y="389" width="4.8376%" height="15" fill="rgb(233,223,10)" fg:x="23" fg:w="28746"/><text x="0.2539%" y="399.50">OBR.ex..</text></g><g><title>OBR.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;OBR::main::closure_env$3,OBR::main::closure_env$2&gt;,OBR::main::closure_env$1&gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer (28,746 samples, 4.84%)</title><rect x="0.0039%" y="373" width="4.8376%" height="15" fill="rgb(215,21,27)" fg:x="23" fg:w="28746"/><text x="0.2539%" y="383.50">OBR.ex..</text></g><g><title>OBR.exe`rayon::iter::plumbing::Producer::fold_with(rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;, rayon::iter::map::MapFolder&lt;rayon::iter::reduce::ReduceFolder&lt;OBR::main::closure_env$3,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault (28,746 samples, 4.84%)</title><rect x="0.0039%" y="357" width="4.8376%" height="15" fill="rgb(232,23,21)" fg:x="23" fg:w="28746"/><text x="0.2539%" y="367.50">OBR.ex..</text></g><g><title>OBR.exe`rayon::iter::map::impl$8::consume_iter(rayon::iter::map::MapFolder&lt;rayon::iter::reduce::ReduceFolder&lt;OBR::main::closure_env$3,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; &gt;,OBR::main::closure_env$1&gt;, rayon::vec::SliceDrain&lt;tuple$ (28,746 samples, 4.84%)</title><rect x="0.0039%" y="341" width="4.8376%" height="15" fill="rgb(244,5,23)" fg:x="23" fg:w="28746"/><text x="0.2539%" y="351.50">OBR.ex..</text></g><g><title>OBR.exe`core::iter::adapters::map::impl$2::fold&lt;hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,rayon::vec::SliceDrain&lt;tuple$&lt;usize,usize&gt; &gt;,ref$&lt;OBR::main::closure_env$1&gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,ref$&lt;OBR::main::closure_env$3&gt; &gt;(core::iter::adapters::map::Map&lt;rayon::vec::SliceDrain&lt;tuple$&lt;usize,usize&gt; &gt;,ref$&lt;OBR::main::closure_env$1&gt; &gt;, hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault (28,746 samples, 4.84%)</title><rect x="0.0039%" y="325" width="4.8376%" height="15" fill="rgb(226,81,46)" fg:x="23" fg:w="28746"/><text x="0.2539%" y="335.50">OBR.ex..</text></g><g><title>OBR.exe`core::iter::traits::iterator::Iterator::fold(rayon::vec::SliceDrain&lt;tuple$&lt;usize,usize&gt; &gt;, hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;, core::iter::adapters::map::map_fold::closure_env$0&lt;tuple$&lt;usize,usize&gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,ref$&lt;OBR::main::closure_env$1&gt;,ref$ (28,746 samples, 4.84%)</title><rect x="0.0039%" y="309" width="4.8376%" height="15" fill="rgb(247,70,30)" fg:x="23" fg:w="28746"/><text x="0.2539%" y="319.50">OBR.ex..</text></g><g><title>OBR.exe`core::iter::adapters::map::map_fold::closure$0(core::iter::adapters::map::map_fold::closure_env$0&lt;tuple$&lt;usize,usize&gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,ref$&lt;OBR::main::closure_env$1&gt;,ref$&lt;OBR::main::closure_env$3&gt; &gt;*, hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;, tuple$ (28,746 samples, 4.84%)</title><rect x="0.0039%" y="293" width="4.8376%" height="15" fill="rgb(212,68,19)" fg:x="23" fg:w="28746"/><text x="0.2539%" y="303.50">OBR.ex..</text></g><g><title>OBR.exe`core::iter::adapters::map::impl$2::fold&lt;tuple$&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,f64&gt;,core::slice::iter::Split&lt;u8,OBR::main::closure$1::closure_env$0&gt;,OBR::main::closure$1::closure_env$1,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,OBR::main::closure$1::closure_env$2&gt;(core::iter::adapters::map::Map&lt;core::slice::iter::Split&lt;u8,OBR::main::closure$1::closure_env$0&gt;,OBR::main::closure$1::closure_env$1&gt;, hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault (28,746 samples, 4.84%)</title><rect x="0.0039%" y="277" width="4.8376%" height="15" fill="rgb(240,187,13)" fg:x="23" fg:w="28746"/><text x="0.2539%" y="287.50">OBR.ex..</text></g><g><title>OBR.exe`core::iter::traits::iterator::Iterator::fold(core::slice::iter::Split&lt;u8,OBR::main::closure$1::closure_env$0&gt;, hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;, core::iter::adapters::map::map_fold::closure_env$0&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,tuple$&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,f64&gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault (28,746 samples, 4.84%)</title><rect x="0.0039%" y="261" width="4.8376%" height="15" fill="rgb(223,113,26)" fg:x="23" fg:w="28746"/><text x="0.2539%" y="271.50">OBR.ex..</text></g><g><title>OBR.exe`core::slice::iter::impl$16::next(core::slice::iter::Split (6,034 samples, 1.02%)</title><rect x="3.8260%" y="245" width="1.0154%" height="15" fill="rgb(206,192,2)" fg:x="22735" fg:w="6034"/><text x="4.0760%" y="255.50"></text></g><g><title>OBR.exe`core::slice::iter::impl$181::position(core::slice::iter::Iter&lt;u8&gt;*, core::slice::iter::impl$16::next::closure_env$0 (4,938 samples, 0.83%)</title><rect x="4.0104%" y="229" width="0.8310%" height="15" fill="rgb(241,108,4)" fg:x="23831" fg:w="4938"/><text x="4.2604%" y="239.50"></text></g><g><title>OBR.exe`core::slice::iter::impl$181::next(core::slice::iter::Iter (615 samples, 0.10%)</title><rect x="4.7379%" y="213" width="0.1035%" height="15" fill="rgb(247,173,49)" fg:x="28154" fg:w="615"/><text x="4.9879%" y="223.50"></text></g><g><title>OBR.exe`core::ptr::non_null::impl$12::eq(core::ptr::non_null::NonNull&lt;u8&gt;*, core::ptr::non_null::NonNull (559 samples, 0.09%)</title><rect x="4.7474%" y="197" width="0.0941%" height="15" fill="rgb(224,114,35)" fg:x="28210" fg:w="559"/><text x="4.9974%" y="207.50"></text></g><g><title>OBR.exe`core::slice::index::impl$0::index(ref$&lt;slice2$&lt;u8&gt; &gt;, core::ops::range::RangeFrom (1,852 samples, 0.31%)</title><rect x="6.4863%" y="485" width="0.3117%" height="15" fill="rgb(245,159,27)" fg:x="38543" fg:w="1852"/><text x="6.7363%" y="495.50"></text></g><g><title>OBR.exe`core::slice::index::impl$6::index(core::ops::range::RangeFrom&lt;usize&gt;, ref$&lt;slice2$ (1,852 samples, 0.31%)</title><rect x="6.4863%" y="469" width="0.3117%" height="15" fill="rgb(245,172,44)" fg:x="38543" fg:w="1852"/><text x="6.7363%" y="479.50"></text></g><g><title>OBR.exe`core::slice::index::impl$6::get_unchecked(core::ops::range::RangeFrom&lt;usize&gt;, ptr_const$&lt;slice2$ (1,852 samples, 0.31%)</title><rect x="6.4863%" y="453" width="0.3117%" height="15" fill="rgb(236,23,11)" fg:x="38543" fg:w="1852"/><text x="6.7363%" y="463.50"></text></g><g><title>OBR.exe`core::slice::index::impl$4::get_unchecked(core::ops::range::Range&lt;usize&gt;, ptr_const$&lt;slice2$ (1,852 samples, 0.31%)</title><rect x="6.4863%" y="437" width="0.3117%" height="15" fill="rgb(205,117,38)" fg:x="38543" fg:w="1852"/><text x="6.7363%" y="447.50"></text></g><g><title>OBR.exe`core::ptr::const_ptr::impl$0::add (1,852 samples, 0.31%)</title><rect x="6.4863%" y="421" width="0.3117%" height="15" fill="rgb(237,72,25)" fg:x="38543" fg:w="1852"/><text x="6.7363%" y="431.50"></text></g><g><title>OBR.exe`core::slice::iter::impl$16::next::closure$0(core::slice::iter::impl$16::next::closure_env$0 (1,983 samples, 0.33%)</title><rect x="10.6315%" y="469" width="0.3337%" height="15" fill="rgb(244,70,9)" fg:x="63175" fg:w="1983"/><text x="10.8815%" y="479.50"></text></g><g><title>OBR.exe`OBR::main::closure$1::closure$1::closure$0 (1,983 samples, 0.33%)</title><rect x="10.6315%" y="453" width="0.3337%" height="15" fill="rgb(217,125,39)" fg:x="63175" fg:w="1983"/><text x="10.8815%" y="463.50"></text></g><g><title>OBR.exe`core::slice::iter::impl$16::next(core::slice::iter::Split (33,050 samples, 5.56%)</title><rect x="6.4863%" y="501" width="5.5619%" height="15" fill="rgb(235,36,10)" fg:x="38543" fg:w="33050"/><text x="6.7363%" y="511.50">OBR.exe..</text></g><g><title>OBR.exe`core::slice::iter::impl$181::position(core::slice::iter::Iter&lt;u8&gt;*, core::slice::iter::impl$16::next::closure_env$0 (31,198 samples, 5.25%)</title><rect x="6.7979%" y="485" width="5.2502%" height="15" fill="rgb(251,123,47)" fg:x="40395" fg:w="31198"/><text x="7.0479%" y="495.50">OBR.ex..</text></g><g><title>OBR.exe`core::slice::iter::impl$181::next(core::slice::iter::Iter (6,435 samples, 1.08%)</title><rect x="10.9652%" y="469" width="1.0829%" height="15" fill="rgb(221,13,13)" fg:x="65158" fg:w="6435"/><text x="11.2152%" y="479.50"></text></g><g><title>OBR.exe`core::ptr::non_null::impl$12::eq(core::ptr::non_null::NonNull&lt;u8&gt;*, core::ptr::non_null::NonNull (4,727 samples, 0.80%)</title><rect x="11.2526%" y="453" width="0.7955%" height="15" fill="rgb(238,131,9)" fg:x="66866" fg:w="4727"/><text x="11.5026%" y="463.50"></text></g><g><title>OBR.exe`core::str::impl$0::parse(ref$ (201 samples, 0.03%)</title><rect x="12.0481%" y="501" width="0.0338%" height="15" fill="rgb(211,50,8)" fg:x="71593" fg:w="201"/><text x="12.2981%" y="511.50"></text></g><g><title>OBR.exe`core::num::dec2flt::float::impl$1::from_u64 (4,127 samples, 0.69%)</title><rect x="14.1418%" y="437" width="0.6945%" height="15" fill="rgb(245,182,24)" fg:x="84034" fg:w="4127"/><text x="14.3918%" y="447.50"></text></g><g><title>OBR.exe`core::num::dec2flt::float::impl$1::pow10_fast_path (68 samples, 0.01%)</title><rect x="14.8363%" y="437" width="0.0114%" height="15" fill="rgb(242,14,37)" fg:x="88161" fg:w="68"/><text x="15.0863%" y="447.50"></text></g><g><title>OBR.exe`core::num::dec2flt::number::Number::is_fast_path (648 samples, 0.11%)</title><rect x="14.8477%" y="437" width="0.1090%" height="15" fill="rgb(246,228,12)" fg:x="88229" fg:w="648"/><text x="15.0977%" y="447.50"></text></g><g><title>OBR.exe`core::num::dec2flt::number::Number::try_fast_path (18,628 samples, 3.13%)</title><rect x="13.6973%" y="453" width="3.1348%" height="15" fill="rgb(213,55,15)" fg:x="81393" fg:w="18628"/><text x="13.9473%" y="463.50">OBR..</text></g><g><title>OBR.exe`core::ops::arith::impl$217::div (11,144 samples, 1.88%)</title><rect x="14.9568%" y="437" width="1.8754%" height="15" fill="rgb(209,9,3)" fg:x="88877" fg:w="11144"/><text x="15.2068%" y="447.50">O..</text></g><g><title>OBR.exe`core::num::dec2flt::parse::try_parse_digits::closure$0 (1,216 samples, 0.20%)</title><rect x="20.5074%" y="389" width="0.2046%" height="15" fill="rgb(230,59,30)" fg:x="121860" fg:w="1216"/><text x="20.7574%" y="399.50"></text></g><g><title>OBR.exe`core::num::impl$9::wrapping_mul (704 samples, 0.12%)</title><rect x="20.5935%" y="373" width="0.1185%" height="15" fill="rgb(209,121,21)" fg:x="122372" fg:w="704"/><text x="20.8435%" y="383.50"></text></g><g><title>OBR.exe`core::num::dec2flt::parse::try_parse_digits (12,249 samples, 2.06%)</title><rect x="18.8247%" y="421" width="2.0613%" height="15" fill="rgb(220,109,13)" fg:x="111861" fg:w="12249"/><text x="19.0747%" y="431.50">O..</text></g><g><title>OBR.exe`core::num::dec2flt::common::impl$0::parse_digits (10,731 samples, 1.81%)</title><rect x="19.0801%" y="405" width="1.8059%" height="15" fill="rgb(232,18,1)" fg:x="113379" fg:w="10731"/><text x="19.3301%" y="415.50">O..</text></g><g><title>OBR.exe`core::num::impl$6::wrapping_sub (1,034 samples, 0.17%)</title><rect x="20.7120%" y="389" width="0.1740%" height="15" fill="rgb(215,41,42)" fg:x="123076" fg:w="1034"/><text x="20.9620%" y="399.50"></text></g><g><title>OBR.exe`core::num::dec2flt::parse::parse_number (24,497 samples, 4.12%)</title><rect x="16.8322%" y="453" width="4.1225%" height="15" fill="rgb(224,123,36)" fg:x="100021" fg:w="24497"/><text x="17.0822%" y="463.50">OBR...</text></g><g><title>OBR.exe`core::num::dec2flt::parse::parse_partial_number (16,433 samples, 2.77%)</title><rect x="18.1892%" y="437" width="2.7655%" height="15" fill="rgb(240,125,3)" fg:x="108085" fg:w="16433"/><text x="18.4392%" y="447.50">OB..</text></g><g><title>OBR.exe`core::slice::impl$0::split_first (408 samples, 0.07%)</title><rect x="20.8860%" y="421" width="0.0687%" height="15" fill="rgb(205,98,50)" fg:x="124110" fg:w="408"/><text x="21.1360%" y="431.50"></text></g><g><title>OBR.exe`enum2$&lt;core::result::Result&lt;f64,core::num::dec2flt::ParseFloatError&gt; &gt;::unwrap(enum2$&lt;core::result::Result (52,754 samples, 8.88%)</title><rect x="12.0820%" y="501" width="8.8778%" height="15" fill="rgb(205,185,37)" fg:x="71794" fg:w="52754"/><text x="12.3320%" y="511.50">OBR.exe`enum2..</text></g><g><title>OBR.exe`core::num::dec2flt::impl$3::from_str (51,889 samples, 8.73%)</title><rect x="12.2275%" y="485" width="8.7322%" height="15" fill="rgb(238,207,15)" fg:x="72659" fg:w="51889"/><text x="12.4775%" y="495.50">OBR.exe`core..</text></g><g><title>OBR.exe`core::num::dec2flt::dec2flt (47,761 samples, 8.04%)</title><rect x="12.9222%" y="469" width="8.0375%" height="15" fill="rgb(213,199,42)" fg:x="76787" fg:w="47761"/><text x="13.1722%" y="479.50">OBR.exe`cor..</text></g><g><title>OBR.exe`OBR::main::closure$1::closure$1(OBR::main::closure$1::closure_env$1*, ref$&lt;slice2$ (114,672 samples, 19.30%)</title><rect x="6.1244%" y="517" width="19.2977%" height="15" fill="rgb(235,201,11)" fg:x="36393" fg:w="114672"/><text x="6.3744%" y="527.50">OBR.exe`OBR::main::closure$1::..</text></g><g><title>OBR.exe`enum2$&lt;core::result::Result&lt;ref$&lt;str$&gt;,core::str::error::Utf8Error&gt; &gt;::unwrap(enum2$&lt;core::result::Result&lt;ref$ (26,517 samples, 4.46%)</title><rect x="20.9597%" y="501" width="4.4625%" height="15" fill="rgb(207,46,11)" fg:x="124548" fg:w="26517"/><text x="21.2097%" y="511.50">OBR.e..</text></g><g><title>OBR.exe`core::str::converts::from_utf8 (24,015 samples, 4.04%)</title><rect x="21.3808%" y="485" width="4.0414%" height="15" fill="rgb(241,35,35)" fg:x="127050" fg:w="24015"/><text x="21.6308%" y="495.50">OBR...</text></g><g><title>OBR.exe`core::str::validations::run_utf8_validation (17,252 samples, 2.90%)</title><rect x="22.5189%" y="469" width="2.9033%" height="15" fill="rgb(243,32,47)" fg:x="133813" fg:w="17252"/><text x="22.7689%" y="479.50">OB..</text></g><g><title>OBR.exe`core::num::impl$11::wrapping_sub (1,871 samples, 0.31%)</title><rect x="25.1073%" y="453" width="0.3149%" height="15" fill="rgb(247,202,23)" fg:x="149194" fg:w="1871"/><text x="25.3573%" y="463.50"></text></g><g><title>OBR.exe`core::f64::impl$0::max (1,523 samples, 0.26%)</title><rect x="26.1307%" y="485" width="0.2563%" height="15" fill="rgb(219,102,11)" fg:x="155275" fg:w="1523"/><text x="26.3807%" y="495.50"></text></g><g><title>OBR.exe`OBR::Station::upate (7,527 samples, 1.27%)</title><rect x="25.6272%" y="501" width="1.2667%" height="15" fill="rgb(243,110,44)" fg:x="152283" fg:w="7527"/><text x="25.8772%" y="511.50"></text></g><g><title>OBR.exe`core::f64::impl$0::min (3,012 samples, 0.51%)</title><rect x="26.3870%" y="485" width="0.5069%" height="15" fill="rgb(222,74,54)" fg:x="156798" fg:w="3012"/><text x="26.6370%" y="495.50"></text></g><g><title>OBR.exe`ahash::fallback_hash::impl$1::finish (2,680 samples, 0.45%)</title><rect x="27.1441%" y="453" width="0.4510%" height="15" fill="rgb(216,99,12)" fg:x="161297" fg:w="2680"/><text x="27.3941%" y="463.50"></text></g><g><title>OBR.exe`ahash::operations::folded_multiply (2,680 samples, 0.45%)</title><rect x="27.1441%" y="437" width="0.4510%" height="15" fill="rgb(226,22,26)" fg:x="161297" fg:w="2680"/><text x="27.3941%" y="447.50"></text></g><g><title>OBR.exe`core::num::impl$10::wrapping_mul (2,277 samples, 0.38%)</title><rect x="27.2119%" y="421" width="0.3832%" height="15" fill="rgb(217,163,10)" fg:x="161700" fg:w="2277"/><text x="27.4619%" y="431.50"></text></g><g><title>OBR.exe`ahash::operations::folded_multiply (805 samples, 0.14%)</title><rect x="28.0291%" y="389" width="0.1355%" height="15" fill="rgb(213,25,53)" fg:x="166556" fg:w="805"/><text x="28.2791%" y="399.50"></text></g><g><title>OBR.exe`core::num::impl$10::wrapping_mul (165 samples, 0.03%)</title><rect x="28.1368%" y="373" width="0.0278%" height="15" fill="rgb(252,105,26)" fg:x="167196" fg:w="165"/><text x="28.3868%" y="383.50"></text></g><g><title>OBR.exe`ahash::fallback_hash::AHasher::large_update (3,249 samples, 0.55%)</title><rect x="27.7380%" y="405" width="0.5468%" height="15" fill="rgb(220,39,43)" fg:x="164826" fg:w="3249"/><text x="27.9880%" y="415.50"></text></g><g><title>OBR.exe`core::num::impl$9::wrapping_add (714 samples, 0.12%)</title><rect x="28.1646%" y="389" width="0.1202%" height="15" fill="rgb(229,68,48)" fg:x="167361" fg:w="714"/><text x="28.4146%" y="399.50"></text></g><g><title>OBR.exe`ahash::convert::impl$0::read_last_u32(ref$&lt;slice2$ (334 samples, 0.06%)</title><rect x="28.4298%" y="389" width="0.0562%" height="15" fill="rgb(252,8,32)" fg:x="168937" fg:w="334"/><text x="28.6798%" y="399.50"></text></g><g><title>OBR.exe`hashbrown::map::make_hash(core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;*, ref$&lt;slice2$ (8,041 samples, 1.35%)</title><rect x="27.1441%" y="469" width="1.3532%" height="15" fill="rgb(223,20,43)" fg:x="161297" fg:w="8041"/><text x="27.3941%" y="479.50"></text></g><g><title>OBR.exe`core::hash::impls::impl$4::hash(ref$&lt;slice2$ (5,361 samples, 0.90%)</title><rect x="27.5951%" y="453" width="0.9022%" height="15" fill="rgb(229,81,49)" fg:x="163977" fg:w="5361"/><text x="27.8451%" y="463.50"></text></g><g><title>OBR.exe`core::hash::impls::impl$9::hash_slice(ref$&lt;slice2$ (5,361 samples, 0.90%)</title><rect x="27.5951%" y="437" width="0.9022%" height="15" fill="rgb(236,28,36)" fg:x="163977" fg:w="5361"/><text x="27.8451%" y="447.50"></text></g><g><title>OBR.exe`ahash::fallback_hash::impl$1::write(ahash::fallback_hash::AHasher*, ref$&lt;slice2$ (5,361 samples, 0.90%)</title><rect x="27.5951%" y="421" width="0.9022%" height="15" fill="rgb(249,185,26)" fg:x="163977" fg:w="5361"/><text x="27.8451%" y="431.50"></text></g><g><title>OBR.exe`ahash::operations::read_small(ref$&lt;slice2$ (1,263 samples, 0.21%)</title><rect x="28.2847%" y="405" width="0.2125%" height="15" fill="rgb(249,174,33)" fg:x="168075" fg:w="1263"/><text x="28.5347%" y="415.50"></text></g><g><title>OBR.exe`ahash::convert::impl$0::read_u32(ref$&lt;slice2$ (63 samples, 0.01%)</title><rect x="28.4867%" y="389" width="0.0106%" height="15" fill="rgb(233,201,37)" fg:x="169275" fg:w="63"/><text x="28.7367%" y="399.50"></text></g><g><title>OBR.exe`hashbrown::raw::bitmask::BitMask::lowest_set_bit (415 samples, 0.07%)</title><rect x="28.7946%" y="405" width="0.0698%" height="15" fill="rgb(221,78,26)" fg:x="171105" fg:w="415"/><text x="29.0446%" y="415.50"></text></g><g><title>OBR.exe`hashbrown::raw::bitmask::impl$3::next (640 samples, 0.11%)</title><rect x="28.7926%" y="421" width="0.1077%" height="15" fill="rgb(250,127,30)" fg:x="171093" fg:w="640"/><text x="29.0426%" y="431.50"></text></g><g><title>OBR.exe`hashbrown::raw::bitmask::BitMask::remove_lowest_bit (213 samples, 0.04%)</title><rect x="28.8645%" y="405" width="0.0358%" height="15" fill="rgb(230,49,44)" fg:x="171520" fg:w="213"/><text x="29.1145%" y="415.50"></text></g><g><title>OBR.exe`hashbrown::raw::h2 (4,149 samples, 0.70%)</title><rect x="28.9003%" y="421" width="0.6982%" height="15" fill="rgb(229,67,23)" fg:x="171733" fg:w="4149"/><text x="29.1503%" y="431.50"></text></g><g><title>OBR.exe`memcmp (873 samples, 0.15%)</title><rect x="31.7464%" y="325" width="0.1469%" height="15" fill="rgb(249,83,47)" fg:x="188645" fg:w="873"/><text x="31.9964%" y="335.50"></text></g><g><title>`0x7FFE4E631213 (130 samples, 0.02%)</title><rect x="31.9014%" y="325" width="0.0219%" height="15" fill="rgb(215,43,3)" fg:x="189566" fg:w="130"/><text x="32.1514%" y="335.50"></text></g><g><title>`0x7FFE4E63121C (65 samples, 0.01%)</title><rect x="31.9302%" y="325" width="0.0109%" height="15" fill="rgb(238,154,13)" fg:x="189737" fg:w="65"/><text x="32.1802%" y="335.50"></text></g><g><title>`0x7FFE4E631220 (332 samples, 0.06%)</title><rect x="31.9483%" y="325" width="0.0559%" height="15" fill="rgb(219,56,2)" fg:x="189845" fg:w="332"/><text x="32.1983%" y="335.50"></text></g><g><title>`0x7FFE4E631222 (210 samples, 0.04%)</title><rect x="32.0042%" y="325" width="0.0353%" height="15" fill="rgb(233,0,4)" fg:x="190177" fg:w="210"/><text x="32.2542%" y="335.50"></text></g><g><title>`0x7FFE4E631225 (168 samples, 0.03%)</title><rect x="32.0395%" y="325" width="0.0283%" height="15" fill="rgb(235,30,7)" fg:x="190387" fg:w="168"/><text x="32.2895%" y="335.50"></text></g><g><title>`0x7FFE4E631227 (3,742 samples, 0.63%)</title><rect x="32.0678%" y="325" width="0.6297%" height="15" fill="rgb(250,79,13)" fg:x="190555" fg:w="3742"/><text x="32.3178%" y="335.50"></text></g><g><title>`0x7FFE4E63122A (139 samples, 0.02%)</title><rect x="32.6975%" y="325" width="0.0234%" height="15" fill="rgb(211,146,34)" fg:x="194297" fg:w="139"/><text x="32.9475%" y="335.50"></text></g><g><title>`0x7FFE4E63122D (63 samples, 0.01%)</title><rect x="32.7209%" y="325" width="0.0106%" height="15" fill="rgb(228,22,38)" fg:x="194436" fg:w="63"/><text x="32.9709%" y="335.50"></text></g><g><title>`0x7FFE4E631232 (215 samples, 0.04%)</title><rect x="32.7361%" y="325" width="0.0362%" height="15" fill="rgb(235,168,5)" fg:x="194526" fg:w="215"/><text x="32.9861%" y="335.50"></text></g><g><title>`0x7FFE4E631235 (152 samples, 0.03%)</title><rect x="32.7723%" y="325" width="0.0256%" height="15" fill="rgb(221,155,16)" fg:x="194741" fg:w="152"/><text x="33.0223%" y="335.50"></text></g><g><title>`0x7FFE4E631239 (214 samples, 0.04%)</title><rect x="32.7978%" y="325" width="0.0360%" height="15" fill="rgb(215,215,53)" fg:x="194893" fg:w="214"/><text x="33.0478%" y="335.50"></text></g><g><title>`0x7FFE4E63123B (229 samples, 0.04%)</title><rect x="32.8339%" y="325" width="0.0385%" height="15" fill="rgb(223,4,10)" fg:x="195107" fg:w="229"/><text x="33.0839%" y="335.50"></text></g><g><title>`0x7FFE4E631240 (780 samples, 0.13%)</title><rect x="32.8776%" y="325" width="0.1313%" height="15" fill="rgb(234,103,6)" fg:x="195367" fg:w="780"/><text x="33.1276%" y="335.50"></text></g><g><title>`0x7FFE4E631242 (1,087 samples, 0.18%)</title><rect x="33.0089%" y="325" width="0.1829%" height="15" fill="rgb(227,97,0)" fg:x="196147" fg:w="1087"/><text x="33.2589%" y="335.50"></text></g><g><title>`0x7FFE4E631245 (291 samples, 0.05%)</title><rect x="33.1918%" y="325" width="0.0490%" height="15" fill="rgb(234,150,53)" fg:x="197234" fg:w="291"/><text x="33.4418%" y="335.50"></text></g><g><title>`0x7FFE4E631247 (6,691 samples, 1.13%)</title><rect x="33.2408%" y="325" width="1.1260%" height="15" fill="rgb(228,201,54)" fg:x="197525" fg:w="6691"/><text x="33.4908%" y="335.50"></text></g><g><title>`0x7FFE4E63124A (331 samples, 0.06%)</title><rect x="34.3668%" y="325" width="0.0557%" height="15" fill="rgb(222,22,37)" fg:x="204216" fg:w="331"/><text x="34.6168%" y="335.50"></text></g><g><title>`0x7FFE4E63124D (76 samples, 0.01%)</title><rect x="34.4225%" y="325" width="0.0128%" height="15" fill="rgb(237,53,32)" fg:x="204547" fg:w="76"/><text x="34.6725%" y="335.50"></text></g><g><title>`0x7FFE4E63124F (393 samples, 0.07%)</title><rect x="34.4353%" y="325" width="0.0661%" height="15" fill="rgb(233,25,53)" fg:x="204623" fg:w="393"/><text x="34.6853%" y="335.50"></text></g><g><title>`0x7FFE4E631252 (222 samples, 0.04%)</title><rect x="34.5014%" y="325" width="0.0374%" height="15" fill="rgb(210,40,34)" fg:x="205016" fg:w="222"/><text x="34.7514%" y="335.50"></text></g><g><title>`0x7FFE4E63125A (177 samples, 0.03%)</title><rect x="34.5450%" y="325" width="0.0298%" height="15" fill="rgb(241,220,44)" fg:x="205275" fg:w="177"/><text x="34.7950%" y="335.50"></text></g><g><title>`0x7FFE4E63125E (136 samples, 0.02%)</title><rect x="34.5748%" y="325" width="0.0229%" height="15" fill="rgb(235,28,35)" fg:x="205452" fg:w="136"/><text x="34.8248%" y="335.50"></text></g><g><title>`0x7FFE4E631297 (131 samples, 0.02%)</title><rect x="34.5977%" y="325" width="0.0220%" height="15" fill="rgb(210,56,17)" fg:x="205588" fg:w="131"/><text x="34.8477%" y="335.50"></text></g><g><title>`0x7FFE4E63129E (128 samples, 0.02%)</title><rect x="34.6219%" y="325" width="0.0215%" height="15" fill="rgb(224,130,29)" fg:x="205732" fg:w="128"/><text x="34.8719%" y="335.50"></text></g><g><title>`0x7FFE4E6312A0 (92 samples, 0.02%)</title><rect x="34.6434%" y="325" width="0.0155%" height="15" fill="rgb(235,212,8)" fg:x="205860" fg:w="92"/><text x="34.8934%" y="335.50"></text></g><g><title>`0x7FFE4E6312A3 (66 samples, 0.01%)</title><rect x="34.6589%" y="325" width="0.0111%" height="15" fill="rgb(223,33,50)" fg:x="205952" fg:w="66"/><text x="34.9089%" y="335.50"></text></g><g><title>`0x7FFE4E6312A9 (497 samples, 0.08%)</title><rect x="34.6737%" y="325" width="0.0836%" height="15" fill="rgb(219,149,13)" fg:x="206040" fg:w="497"/><text x="34.9237%" y="335.50"></text></g><g><title>OBR.exe`hashbrown::map::equivalent_key::closure$0(hashbrown::map::equivalent_key::closure_env$0&lt;slice2$&lt;u8&gt;,ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station&gt;*, tuple$&lt;ref$&lt;slice2$ (20,457 samples, 3.44%)</title><rect x="31.3358%" y="405" width="3.4426%" height="15" fill="rgb(250,156,29)" fg:x="186205" fg:w="20457"/><text x="31.5858%" y="415.50">OBR..</text></g><g><title>OBR.exe`hashbrown::impl$0::equivalent(ref$&lt;slice2$&lt;u8&gt; &gt;, ref$&lt;slice2$ (20,457 samples, 3.44%)</title><rect x="31.3358%" y="389" width="3.4426%" height="15" fill="rgb(216,193,19)" fg:x="186205" fg:w="20457"/><text x="31.5858%" y="399.50">OBR..</text></g><g><title>OBR.exe`core::cmp::impls::impl$9::eq(ref$&lt;slice2$&lt;u8&gt; &gt;*, ref$&lt;slice2$ (20,276 samples, 3.41%)</title><rect x="31.3662%" y="373" width="3.4122%" height="15" fill="rgb(216,135,14)" fg:x="186386" fg:w="20276"/><text x="31.6162%" y="383.50">OBR..</text></g><g><title>OBR.exe`core::slice::cmp::impl$0::eq(ref$&lt;slice2$&lt;u8&gt; &gt;, ref$&lt;slice2$ (20,276 samples, 3.41%)</title><rect x="31.3662%" y="357" width="3.4122%" height="15" fill="rgb(241,47,5)" fg:x="186386" fg:w="20276"/><text x="31.6162%" y="367.50">OBR..</text></g><g><title>OBR.exe`core::slice::cmp::impl$5::equal(ref$&lt;slice2$&lt;u8&gt; &gt;, ref$&lt;slice2$ (20,276 samples, 3.41%)</title><rect x="31.3662%" y="341" width="3.4122%" height="15" fill="rgb(233,42,35)" fg:x="186386" fg:w="20276"/><text x="31.6162%" y="351.50">OBR..</text></g><g><title>OBR.exe`hashbrown::raw::Bucket&lt;tuple$&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station&gt; &gt;::as_ptr (2,026 samples, 0.34%)</title><rect x="34.7784%" y="389" width="0.3409%" height="15" fill="rgb(231,13,6)" fg:x="206662" fg:w="2026"/><text x="35.0284%" y="399.50"></text></g><g><title>OBR.exe`core::ptr::mut_ptr::impl$0::sub(tuple$&lt;ref$&lt;slice2$ (2,026 samples, 0.34%)</title><rect x="34.7784%" y="373" width="0.3409%" height="15" fill="rgb(207,181,40)" fg:x="206662" fg:w="2026"/><text x="35.0284%" y="383.50"></text></g><g><title>OBR.exe`core::ptr::mut_ptr::impl$0::offset(tuple$&lt;ref$&lt;slice2$ (2,026 samples, 0.34%)</title><rect x="34.7784%" y="357" width="0.3409%" height="15" fill="rgb(254,173,49)" fg:x="206662" fg:w="2026"/><text x="35.0284%" y="367.50"></text></g><g><title>OBR.exe`hashbrown::raw::impl$8::find::closure$0(hashbrown::raw::impl$8::find::closure_env$0&lt;tuple$&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station&gt;,allocator_api2::stable::alloc::global::Global,hashbrown::map::equivalent_key::closure_env$0&lt;slice2$&lt;u8&gt;,ref$&lt;slice2$ (33,438 samples, 5.63%)</title><rect x="29.5986%" y="421" width="5.6272%" height="15" fill="rgb(221,1,38)" fg:x="175882" fg:w="33438"/><text x="29.8486%" y="431.50">OBR.exe..</text></g><g><title>OBR.exe`hashbrown::raw::RawTable&lt;tuple$&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station&gt;,allocator_api2::stable::alloc::global::Global&gt;::bucket (2,658 samples, 0.45%)</title><rect x="34.7784%" y="405" width="0.4473%" height="15" fill="rgb(206,124,46)" fg:x="206662" fg:w="2658"/><text x="35.0284%" y="415.50"></text></g><g><title>OBR.exe`hashbrown::raw::Bucket&lt;tuple$&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station&gt; &gt;::from_base_index(core::ptr::non_null::NonNull&lt;tuple$&lt;ref$&lt;slice2$ (632 samples, 0.11%)</title><rect x="35.1194%" y="389" width="0.1064%" height="15" fill="rgb(249,21,11)" fg:x="208688" fg:w="632"/><text x="35.3694%" y="399.50"></text></g><g><title>OBR.exe`core::ptr::mut_ptr::impl$0::sub(tuple$&lt;ref$&lt;slice2$ (632 samples, 0.11%)</title><rect x="35.1194%" y="373" width="0.1064%" height="15" fill="rgb(222,201,40)" fg:x="208688" fg:w="632"/><text x="35.3694%" y="383.50"></text></g><g><title>OBR.exe`hashbrown::raw::sse2::Group::load (474 samples, 0.08%)</title><rect x="35.2257%" y="421" width="0.0798%" height="15" fill="rgb(235,61,29)" fg:x="209320" fg:w="474"/><text x="35.4757%" y="431.50"></text></g><g><title>OBR.exe`core::core_arch::x86::sse2::_mm_loadu_si128 (474 samples, 0.08%)</title><rect x="35.2257%" y="405" width="0.0798%" height="15" fill="rgb(219,207,3)" fg:x="209320" fg:w="474"/><text x="35.4757%" y="415.50"></text></g><g><title>OBR.exe`core::intrinsics::copy_nonoverlapping (474 samples, 0.08%)</title><rect x="35.2257%" y="389" width="0.0798%" height="15" fill="rgb(222,56,46)" fg:x="209320" fg:w="474"/><text x="35.4757%" y="399.50"></text></g><g><title>OBR.exe`hashbrown::raw::sse2::Group::match_byte (3,116 samples, 0.52%)</title><rect x="35.3055%" y="421" width="0.5244%" height="15" fill="rgb(239,76,54)" fg:x="209794" fg:w="3116"/><text x="35.5555%" y="431.50"></text></g><g><title>OBR.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (3,116 samples, 0.52%)</title><rect x="35.3055%" y="405" width="0.5244%" height="15" fill="rgb(231,124,27)" fg:x="209794" fg:w="3116"/><text x="35.5555%" y="415.50"></text></g><g><title>OBR.exe`hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;::get_mut(ref$&lt;slice2$ (53,540 samples, 9.01%)</title><rect x="26.8939%" y="501" width="9.0101%" height="15" fill="rgb(249,195,6)" fg:x="159810" fg:w="53540"/><text x="27.1439%" y="511.50">OBR.exe`hashb..</text></g><g><title>OBR.exe`hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;::get_inner_mut(ref$&lt;slice2$ (53,540 samples, 9.01%)</title><rect x="26.8939%" y="485" width="9.0101%" height="15" fill="rgb(237,174,47)" fg:x="159810" fg:w="53540"/><text x="27.1439%" y="495.50">OBR.exe`hashb..</text></g><g><title>OBR.exe`hashbrown::raw::RawTable&lt;tuple$&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station&gt;,allocator_api2::stable::alloc::global::Global&gt;::get_mut(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;slice2$&lt;u8&gt;,ref$&lt;slice2$ (44,012 samples, 7.41%)</title><rect x="28.4973%" y="469" width="7.4066%" height="15" fill="rgb(206,201,31)" fg:x="169338" fg:w="44012"/><text x="28.7473%" y="479.50">OBR.exe`ha..</text></g><g><title>OBR.exe`hashbrown::raw::RawTable&lt;tuple$&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station&gt;,allocator_api2::stable::alloc::global::Global&gt;::find(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;slice2$&lt;u8&gt;,ref$&lt;slice2$ (44,012 samples, 7.41%)</title><rect x="28.4973%" y="453" width="7.4066%" height="15" fill="rgb(231,57,52)" fg:x="169338" fg:w="44012"/><text x="28.7473%" y="463.50">OBR.exe`ha..</text></g><g><title>OBR.exe`hashbrown::raw::RawTableInner::find_inner(unsigned long long, ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;usize&gt;,assoc$ (44,012 samples, 7.41%)</title><rect x="28.4973%" y="437" width="7.4066%" height="15" fill="rgb(248,177,22)" fg:x="169338" fg:w="44012"/><text x="28.7473%" y="447.50">OBR.exe`ha..</text></g><g><title>OBR.exe`hashbrown::raw::sse2::Group::match_empty (440 samples, 0.07%)</title><rect x="35.8299%" y="421" width="0.0740%" height="15" fill="rgb(215,211,37)" fg:x="212910" fg:w="440"/><text x="36.0799%" y="431.50"></text></g><g><title>OBR.exe`hashbrown::raw::sse2::Group::match_byte (440 samples, 0.07%)</title><rect x="35.8299%" y="405" width="0.0740%" height="15" fill="rgb(241,128,51)" fg:x="212910" fg:w="440"/><text x="36.0799%" y="415.50"></text></g><g><title>OBR.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (440 samples, 0.07%)</title><rect x="35.8299%" y="389" width="0.0740%" height="15" fill="rgb(227,165,31)" fg:x="212910" fg:w="440"/><text x="36.0799%" y="399.50"></text></g><g><title>OBR.exe`core::iter::adapters::map::map_fold::closure$0(core::iter::adapters::map::map_fold::closure_env$0&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,tuple$&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,f64&gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,OBR::main::closure$1::closure_env$1,OBR::main::closure$1::closure_env$2&gt;*, hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;, ref$&lt;slice2$ (180,992 samples, 30.46%)</title><rect x="5.4457%" y="533" width="30.4585%" height="15" fill="rgb(228,167,24)" fg:x="32360" fg:w="180992"/><text x="5.6957%" y="543.50">OBR.exe`core::iter::adapters::map::map_fold::clos..</text></g><g><title>OBR.exe`OBR::main::closure$1::closure$2(OBR::main::closure$1::closure_env$2*, hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;, tuple$&lt;ref$&lt;slice2$ (62,287 samples, 10.48%)</title><rect x="25.4222%" y="517" width="10.4821%" height="15" fill="rgb(228,143,12)" fg:x="151065" fg:w="62287"/><text x="25.6722%" y="527.50">OBR.exe`OBR::ma..</text></g><g><title>OBR.exe`core::slice::index::impl$0::index(ref$&lt;slice2$&lt;u8&gt; &gt;, core::ops::range::RangeFrom (8,444 samples, 1.42%)</title><rect x="36.0660%" y="517" width="1.4210%" height="15" fill="rgb(249,149,8)" fg:x="214313" fg:w="8444"/><text x="36.3160%" y="527.50"></text></g><g><title>OBR.exe`core::slice::index::impl$6::index(core::ops::range::RangeFrom&lt;usize&gt;, ref$&lt;slice2$ (8,444 samples, 1.42%)</title><rect x="36.0660%" y="501" width="1.4210%" height="15" fill="rgb(243,35,44)" fg:x="214313" fg:w="8444"/><text x="36.3160%" y="511.50"></text></g><g><title>OBR.exe`core::slice::index::impl$6::get_unchecked(core::ops::range::RangeFrom&lt;usize&gt;, ptr_const$&lt;slice2$ (8,444 samples, 1.42%)</title><rect x="36.0660%" y="485" width="1.4210%" height="15" fill="rgb(246,89,9)" fg:x="214313" fg:w="8444"/><text x="36.3160%" y="495.50"></text></g><g><title>OBR.exe`core::slice::index::impl$4::get_unchecked(core::ops::range::Range&lt;usize&gt;, ptr_const$&lt;slice2$ (8,444 samples, 1.42%)</title><rect x="36.0660%" y="469" width="1.4210%" height="15" fill="rgb(233,213,13)" fg:x="214313" fg:w="8444"/><text x="36.3160%" y="479.50"></text></g><g><title>OBR.exe`core::ptr::const_ptr::impl$0::add (8,444 samples, 1.42%)</title><rect x="36.0660%" y="453" width="1.4210%" height="15" fill="rgb(233,141,41)" fg:x="214313" fg:w="8444"/><text x="36.3160%" y="463.50"></text></g><g><title>OBR.exe`core::slice::iter::impl$16::next::closure$0(core::slice::iter::impl$16::next::closure_env$0 (17,377 samples, 2.92%)</title><rect x="40.4768%" y="501" width="2.9243%" height="15" fill="rgb(239,167,4)" fg:x="240523" fg:w="17377"/><text x="40.7268%" y="511.50">OB..</text></g><g><title>OBR.exe`OBR::main::closure$1::closure$0 (17,377 samples, 2.92%)</title><rect x="40.4768%" y="485" width="2.9243%" height="15" fill="rgb(209,217,16)" fg:x="240523" fg:w="17377"/><text x="40.7268%" y="495.50">OB..</text></g><g><title>OBR.exe`core::iter::adapters::map::map_fold::closure$0(core::iter::adapters::map::map_fold::closure_env$0&lt;tuple$&lt;usize,usize&gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,ref$&lt;OBR::main::closure_env$1&gt;,ref$&lt;OBR::main::closure_env$3&gt; &gt;*, hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;, tuple$ (234,380 samples, 39.44%)</title><rect x="4.8414%" y="581" width="39.4430%" height="15" fill="rgb(219,88,35)" fg:x="28769" fg:w="234380"/><text x="5.0914%" y="591.50">OBR.exe`core::iter::adapters::map::map_fold::closure$0(core::ite..</text></g><g><title>OBR.exe`core::iter::adapters::map::impl$2::fold&lt;tuple$&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,f64&gt;,core::slice::iter::Split&lt;u8,OBR::main::closure$1::closure_env$0&gt;,OBR::main::closure$1::closure_env$1,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,OBR::main::closure$1::closure_env$2&gt;(core::iter::adapters::map::Map&lt;core::slice::iter::Split&lt;u8,OBR::main::closure$1::closure_env$0&gt;,OBR::main::closure$1::closure_env$1&gt;, hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault (234,380 samples, 39.44%)</title><rect x="4.8414%" y="565" width="39.4430%" height="15" fill="rgb(220,193,23)" fg:x="28769" fg:w="234380"/><text x="5.0914%" y="575.50">OBR.exe`core::iter::adapters::map::impl$2::fold&lt;tuple$&lt;ref$&lt;slic..</text></g><g><title>OBR.exe`core::iter::traits::iterator::Iterator::fold(core::slice::iter::Split&lt;u8,OBR::main::closure$1::closure_env$0&gt;, hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;, core::iter::adapters::map::map_fold::closure_env$0&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,tuple$&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,f64&gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault (234,380 samples, 39.44%)</title><rect x="4.8414%" y="549" width="39.4430%" height="15" fill="rgb(230,90,52)" fg:x="28769" fg:w="234380"/><text x="5.0914%" y="559.50">OBR.exe`core::iter::traits::iterator::Iterator::fold(core::slice..</text></g><g><title>OBR.exe`core::slice::iter::impl$16::next(core::slice::iter::Split (49,797 samples, 8.38%)</title><rect x="35.9042%" y="533" width="8.3802%" height="15" fill="rgb(252,106,19)" fg:x="213352" fg:w="49797"/><text x="36.1542%" y="543.50">OBR.exe`core..</text></g><g><title>OBR.exe`core::slice::iter::impl$181::position(core::slice::iter::Iter&lt;u8&gt;*, core::slice::iter::impl$16::next::closure_env$0 (40,392 samples, 6.80%)</title><rect x="37.4870%" y="517" width="6.7974%" height="15" fill="rgb(206,74,20)" fg:x="222757" fg:w="40392"/><text x="37.7370%" y="527.50">OBR.exe`c..</text></g><g><title>OBR.exe`core::slice::iter::impl$181::next(core::slice::iter::Iter (5,249 samples, 0.88%)</title><rect x="43.4011%" y="501" width="0.8833%" height="15" fill="rgb(230,138,44)" fg:x="257900" fg:w="5249"/><text x="43.6511%" y="511.50"></text></g><g><title>OBR.exe`core::ptr::non_null::impl$12::eq(core::ptr::non_null::NonNull&lt;u8&gt;*, core::ptr::non_null::NonNull (4,432 samples, 0.75%)</title><rect x="43.5386%" y="485" width="0.7458%" height="15" fill="rgb(235,182,43)" fg:x="258717" fg:w="4432"/><text x="43.7886%" y="495.50"></text></g><g><title>OBR.exe`rayon::iter::plumbing::Producer::fold_with(rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;, rayon::iter::map::MapFolder&lt;rayon::iter::reduce::ReduceFolder&lt;OBR::main::closure_env$3,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault (234,381 samples, 39.44%)</title><rect x="4.8414%" y="645" width="39.4431%" height="15" fill="rgb(242,16,51)" fg:x="28769" fg:w="234381"/><text x="5.0914%" y="655.50">OBR.exe`rayon::iter::plumbing::Producer::fold_with(rayon::vec::D..</text></g><g><title>OBR.exe`rayon::iter::map::impl$8::consume_iter(rayon::iter::map::MapFolder&lt;rayon::iter::reduce::ReduceFolder&lt;OBR::main::closure_env$3,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; &gt;,OBR::main::closure_env$1&gt;, rayon::vec::SliceDrain&lt;tuple$ (234,381 samples, 39.44%)</title><rect x="4.8414%" y="629" width="39.4431%" height="15" fill="rgb(248,9,4)" fg:x="28769" fg:w="234381"/><text x="5.0914%" y="639.50">OBR.exe`rayon::iter::map::impl$8::consume_iter(rayon::iter::map:..</text></g><g><title>OBR.exe`core::iter::adapters::map::impl$2::fold&lt;hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,rayon::vec::SliceDrain&lt;tuple$&lt;usize,usize&gt; &gt;,ref$&lt;OBR::main::closure_env$1&gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,ref$&lt;OBR::main::closure_env$3&gt; &gt;(core::iter::adapters::map::Map&lt;rayon::vec::SliceDrain&lt;tuple$&lt;usize,usize&gt; &gt;,ref$&lt;OBR::main::closure_env$1&gt; &gt;, hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault (234,381 samples, 39.44%)</title><rect x="4.8414%" y="613" width="39.4431%" height="15" fill="rgb(210,31,22)" fg:x="28769" fg:w="234381"/><text x="5.0914%" y="623.50">OBR.exe`core::iter::adapters::map::impl$2::fold&lt;hashbrown::map::..</text></g><g><title>OBR.exe`core::iter::traits::iterator::Iterator::fold(rayon::vec::SliceDrain&lt;tuple$&lt;usize,usize&gt; &gt;, hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;, core::iter::adapters::map::map_fold::closure_env$0&lt;tuple$&lt;usize,usize&gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,ref$&lt;OBR::main::closure_env$1&gt;,ref$ (234,381 samples, 39.44%)</title><rect x="4.8414%" y="597" width="39.4431%" height="15" fill="rgb(239,54,39)" fg:x="28769" fg:w="234381"/><text x="5.0914%" y="607.50">OBR.exe`core::iter::traits::iterator::Iterator::fold(rayon::vec:..</text></g><g><title>OBR.exe`core::slice::index::impl$0::index(ref$&lt;slice2$&lt;u8&gt; &gt;, core::ops::range::RangeFrom (1,814 samples, 0.31%)</title><rect x="46.1071%" y="405" width="0.3053%" height="15" fill="rgb(230,99,41)" fg:x="273980" fg:w="1814"/><text x="46.3571%" y="415.50"></text></g><g><title>OBR.exe`core::slice::index::impl$6::index(core::ops::range::RangeFrom&lt;usize&gt;, ref$&lt;slice2$ (1,814 samples, 0.31%)</title><rect x="46.1071%" y="389" width="0.3053%" height="15" fill="rgb(253,106,12)" fg:x="273980" fg:w="1814"/><text x="46.3571%" y="399.50"></text></g><g><title>OBR.exe`core::slice::index::impl$6::get_unchecked(core::ops::range::RangeFrom&lt;usize&gt;, ptr_const$&lt;slice2$ (1,814 samples, 0.31%)</title><rect x="46.1071%" y="373" width="0.3053%" height="15" fill="rgb(213,46,41)" fg:x="273980" fg:w="1814"/><text x="46.3571%" y="383.50"></text></g><g><title>OBR.exe`core::slice::index::impl$4::get_unchecked(core::ops::range::Range&lt;usize&gt;, ptr_const$&lt;slice2$ (1,814 samples, 0.31%)</title><rect x="46.1071%" y="357" width="0.3053%" height="15" fill="rgb(215,133,35)" fg:x="273980" fg:w="1814"/><text x="46.3571%" y="367.50"></text></g><g><title>OBR.exe`core::ptr::const_ptr::impl$0::add (1,814 samples, 0.31%)</title><rect x="46.1071%" y="341" width="0.3053%" height="15" fill="rgb(213,28,5)" fg:x="273980" fg:w="1814"/><text x="46.3571%" y="351.50"></text></g><g><title>OBR.exe`core::slice::iter::impl$16::next::closure$0(core::slice::iter::impl$16::next::closure_env$0 (2,436 samples, 0.41%)</title><rect x="49.5536%" y="389" width="0.4099%" height="15" fill="rgb(215,77,49)" fg:x="294460" fg:w="2436"/><text x="49.8036%" y="399.50"></text></g><g><title>OBR.exe`OBR::main::closure$1::closure$1::closure$0 (2,436 samples, 0.41%)</title><rect x="49.5536%" y="373" width="0.4099%" height="15" fill="rgb(248,100,22)" fg:x="294460" fg:w="2436"/><text x="49.8036%" y="383.50"></text></g><g><title>OBR.exe`core::slice::iter::impl$16::next(core::slice::iter::Split (30,614 samples, 5.15%)</title><rect x="46.1071%" y="421" width="5.1519%" height="15" fill="rgb(208,67,9)" fg:x="273980" fg:w="30614"/><text x="46.3571%" y="431.50">OBR.ex..</text></g><g><title>OBR.exe`core::slice::iter::impl$181::position(core::slice::iter::Iter&lt;u8&gt;*, core::slice::iter::impl$16::next::closure_env$0 (28,800 samples, 4.85%)</title><rect x="46.4124%" y="405" width="4.8466%" height="15" fill="rgb(219,133,21)" fg:x="275794" fg:w="28800"/><text x="46.6624%" y="415.50">OBR.ex..</text></g><g><title>OBR.exe`core::slice::iter::impl$181::next(core::slice::iter::Iter (7,698 samples, 1.30%)</title><rect x="49.9636%" y="389" width="1.2955%" height="15" fill="rgb(246,46,29)" fg:x="296896" fg:w="7698"/><text x="50.2136%" y="399.50"></text></g><g><title>OBR.exe`core::ptr::non_null::impl$12::eq(core::ptr::non_null::NonNull&lt;u8&gt;*, core::ptr::non_null::NonNull (5,437 samples, 0.91%)</title><rect x="50.3441%" y="373" width="0.9150%" height="15" fill="rgb(246,185,52)" fg:x="299157" fg:w="5437"/><text x="50.5941%" y="383.50"></text></g><g><title>OBR.exe`core::str::impl$0::parse(ref$ (436 samples, 0.07%)</title><rect x="51.2590%" y="421" width="0.0734%" height="15" fill="rgb(252,136,11)" fg:x="304594" fg:w="436"/><text x="51.5090%" y="431.50"></text></g><g><title>OBR.exe`core::num::dec2flt::float::impl$1::from_u64 (3,843 samples, 0.65%)</title><rect x="53.7837%" y="357" width="0.6467%" height="15" fill="rgb(219,138,53)" fg:x="319596" fg:w="3843"/><text x="54.0337%" y="367.50"></text></g><g><title>OBR.exe`core::num::dec2flt::float::impl$1::pow10_fast_path (247 samples, 0.04%)</title><rect x="54.4304%" y="357" width="0.0416%" height="15" fill="rgb(211,51,23)" fg:x="323439" fg:w="247"/><text x="54.6804%" y="367.50"></text></g><g><title>OBR.exe`core::num::dec2flt::number::Number::is_fast_path (963 samples, 0.16%)</title><rect x="54.4720%" y="357" width="0.1621%" height="15" fill="rgb(247,221,28)" fg:x="323686" fg:w="963"/><text x="54.7220%" y="367.50"></text></g><g><title>OBR.exe`core::num::dec2flt::number::Number::try_fast_path (18,776 samples, 3.16%)</title><rect x="53.2505%" y="373" width="3.1597%" height="15" fill="rgb(251,222,45)" fg:x="316428" fg:w="18776"/><text x="53.5005%" y="383.50">OBR..</text></g><g><title>OBR.exe`core::ops::arith::impl$217::div (10,555 samples, 1.78%)</title><rect x="54.6340%" y="357" width="1.7763%" height="15" fill="rgb(217,162,53)" fg:x="324649" fg:w="10555"/><text x="54.8840%" y="367.50">O..</text></g><g><title>OBR.exe`core::num::dec2flt::parse::try_parse_digits::closure$0 (1,396 samples, 0.23%)</title><rect x="60.0656%" y="309" width="0.2349%" height="15" fill="rgb(229,93,14)" fg:x="356925" fg:w="1396"/><text x="60.3156%" y="319.50"></text></g><g><title>OBR.exe`core::num::impl$9::wrapping_mul (872 samples, 0.15%)</title><rect x="60.1538%" y="293" width="0.1467%" height="15" fill="rgb(209,67,49)" fg:x="357449" fg:w="872"/><text x="60.4038%" y="303.50"></text></g><g><title>OBR.exe`core::num::dec2flt::parse::try_parse_digits (12,316 samples, 2.07%)</title><rect x="58.3819%" y="341" width="2.0726%" height="15" fill="rgb(213,87,29)" fg:x="346920" fg:w="12316"/><text x="58.6319%" y="351.50">O..</text></g><g><title>OBR.exe`core::num::dec2flt::common::impl$0::parse_digits (10,705 samples, 1.80%)</title><rect x="58.6530%" y="325" width="1.8015%" height="15" fill="rgb(205,151,52)" fg:x="348531" fg:w="10705"/><text x="58.9030%" y="335.50">O..</text></g><g><title>OBR.exe`core::num::impl$6::wrapping_sub (915 samples, 0.15%)</title><rect x="60.3006%" y="309" width="0.1540%" height="15" fill="rgb(253,215,39)" fg:x="358321" fg:w="915"/><text x="60.5506%" y="319.50"></text></g><g><title>OBR.exe`core::num::dec2flt::parse::parse_number (24,457 samples, 4.12%)</title><rect x="56.4103%" y="373" width="4.1158%" height="15" fill="rgb(221,220,41)" fg:x="335204" fg:w="24457"/><text x="56.6603%" y="383.50">OBR...</text></g><g><title>OBR.exe`core::num::dec2flt::parse::parse_partial_number (16,847 samples, 2.84%)</title><rect x="57.6909%" y="357" width="2.8351%" height="15" fill="rgb(218,133,21)" fg:x="342814" fg:w="16847"/><text x="57.9409%" y="367.50">OB..</text></g><g><title>OBR.exe`core::slice::impl$0::split_first (425 samples, 0.07%)</title><rect x="60.4545%" y="341" width="0.0715%" height="15" fill="rgb(221,193,43)" fg:x="359236" fg:w="425"/><text x="60.7045%" y="351.50"></text></g><g><title>OBR.exe`enum2$&lt;core::result::Result&lt;f64,core::num::dec2flt::ParseFloatError&gt; &gt;::unwrap(enum2$&lt;core::result::Result (54,734 samples, 9.21%)</title><rect x="51.3324%" y="421" width="9.2110%" height="15" fill="rgb(240,128,52)" fg:x="305030" fg:w="54734"/><text x="51.5824%" y="431.50">OBR.exe`enum2..</text></g><g><title>OBR.exe`core::num::dec2flt::impl$3::from_str (53,715 samples, 9.04%)</title><rect x="51.5039%" y="405" width="9.0395%" height="15" fill="rgb(253,114,12)" fg:x="306049" fg:w="53715"/><text x="51.7539%" y="415.50">OBR.exe`core:..</text></g><g><title>OBR.exe`core::num::dec2flt::dec2flt (48,980 samples, 8.24%)</title><rect x="52.3007%" y="389" width="8.2427%" height="15" fill="rgb(215,223,47)" fg:x="310784" fg:w="48980"/><text x="52.5507%" y="399.50">OBR.exe`cor..</text></g><g><title>OBR.exe`core::slice::impl$0::first (103 samples, 0.02%)</title><rect x="60.5261%" y="373" width="0.0173%" height="15" fill="rgb(248,225,23)" fg:x="359661" fg:w="103"/><text x="60.7761%" y="383.50"></text></g><g><title>OBR.exe`OBR::main::closure$1::closure$1(OBR::main::closure$1::closure_env$1*, ref$&lt;slice2$ (115,040 samples, 19.36%)</title><rect x="45.6872%" y="437" width="19.3597%" height="15" fill="rgb(250,108,0)" fg:x="271485" fg:w="115040"/><text x="45.9372%" y="447.50">OBR.exe`OBR::main::closure$1::..</text></g><g><title>OBR.exe`enum2$&lt;core::result::Result&lt;ref$&lt;str$&gt;,core::str::error::Utf8Error&gt; &gt;::unwrap(enum2$&lt;core::result::Result&lt;ref$ (26,761 samples, 4.50%)</title><rect x="60.5434%" y="421" width="4.5035%" height="15" fill="rgb(228,208,7)" fg:x="359764" fg:w="26761"/><text x="60.7934%" y="431.50">OBR.e..</text></g><g><title>OBR.exe`core::str::converts::from_utf8 (24,646 samples, 4.15%)</title><rect x="60.8993%" y="405" width="4.1476%" height="15" fill="rgb(244,45,10)" fg:x="361879" fg:w="24646"/><text x="61.1493%" y="415.50">OBR.e..</text></g><g><title>OBR.exe`core::str::validations::run_utf8_validation (17,703 samples, 2.98%)</title><rect x="62.0677%" y="389" width="2.9792%" height="15" fill="rgb(207,125,25)" fg:x="368822" fg:w="17703"/><text x="62.3177%" y="399.50">OBR..</text></g><g><title>OBR.exe`core::num::impl$11::wrapping_sub (1,702 samples, 0.29%)</title><rect x="64.7605%" y="373" width="0.2864%" height="15" fill="rgb(210,195,18)" fg:x="384823" fg:w="1702"/><text x="65.0105%" y="383.50"></text></g><g><title>OBR.exe`core::f64::impl$0::max (1,802 samples, 0.30%)</title><rect x="65.7889%" y="405" width="0.3033%" height="15" fill="rgb(249,80,12)" fg:x="390934" fg:w="1802"/><text x="66.0389%" y="415.50"></text></g><g><title>OBR.exe`OBR::Station::upate (8,550 samples, 1.44%)</title><rect x="65.2699%" y="421" width="1.4388%" height="15" fill="rgb(221,65,9)" fg:x="387850" fg:w="8550"/><text x="65.5199%" y="431.50"></text></g><g><title>OBR.exe`core::f64::impl$0::min (3,664 samples, 0.62%)</title><rect x="66.0921%" y="405" width="0.6166%" height="15" fill="rgb(235,49,36)" fg:x="392736" fg:w="3664"/><text x="66.3421%" y="415.50"></text></g><g><title>OBR.exe`ahash::fallback_hash::impl$1::finish (2,638 samples, 0.44%)</title><rect x="66.9470%" y="373" width="0.4439%" height="15" fill="rgb(225,32,20)" fg:x="397816" fg:w="2638"/><text x="67.1970%" y="383.50"></text></g><g><title>OBR.exe`ahash::operations::folded_multiply (2,638 samples, 0.44%)</title><rect x="66.9470%" y="357" width="0.4439%" height="15" fill="rgb(215,141,46)" fg:x="397816" fg:w="2638"/><text x="67.1970%" y="367.50"></text></g><g><title>OBR.exe`core::num::impl$10::wrapping_mul (2,205 samples, 0.37%)</title><rect x="67.0199%" y="341" width="0.3711%" height="15" fill="rgb(250,160,47)" fg:x="398249" fg:w="2205"/><text x="67.2699%" y="351.50"></text></g><g><title>OBR.exe`ahash::operations::folded_multiply (1,149 samples, 0.19%)</title><rect x="68.0483%" y="309" width="0.1934%" height="15" fill="rgb(216,222,40)" fg:x="404360" fg:w="1149"/><text x="68.2983%" y="319.50"></text></g><g><title>OBR.exe`core::num::impl$10::wrapping_mul (186 samples, 0.03%)</title><rect x="68.2104%" y="293" width="0.0313%" height="15" fill="rgb(234,217,39)" fg:x="405323" fg:w="186"/><text x="68.4604%" y="303.50"></text></g><g><title>OBR.exe`ahash::fallback_hash::AHasher::large_update (4,074 samples, 0.69%)</title><rect x="67.6843%" y="325" width="0.6856%" height="15" fill="rgb(207,178,40)" fg:x="402197" fg:w="4074"/><text x="67.9343%" y="335.50"></text></g><g><title>OBR.exe`core::num::impl$9::wrapping_add (762 samples, 0.13%)</title><rect x="68.2417%" y="309" width="0.1282%" height="15" fill="rgb(221,136,13)" fg:x="405509" fg:w="762"/><text x="68.4917%" y="319.50"></text></g><g><title>OBR.exe`ahash::convert::impl$0::read_last_u32(ref$&lt;slice2$ (336 samples, 0.06%)</title><rect x="68.5385%" y="309" width="0.0565%" height="15" fill="rgb(249,199,10)" fg:x="407273" fg:w="336"/><text x="68.7885%" y="319.50"></text></g><g><title>OBR.exe`hashbrown::map::make_hash(core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;*, ref$&lt;slice2$ (9,858 samples, 1.66%)</title><rect x="66.9470%" y="389" width="1.6590%" height="15" fill="rgb(249,222,13)" fg:x="397816" fg:w="9858"/><text x="67.1970%" y="399.50"></text></g><g><title>OBR.exe`core::hash::impls::impl$4::hash(ref$&lt;slice2$ (7,220 samples, 1.22%)</title><rect x="67.3910%" y="373" width="1.2150%" height="15" fill="rgb(244,185,38)" fg:x="400454" fg:w="7220"/><text x="67.6410%" y="383.50"></text></g><g><title>OBR.exe`core::hash::impls::impl$9::hash_slice(ref$&lt;slice2$ (7,220 samples, 1.22%)</title><rect x="67.3910%" y="357" width="1.2150%" height="15" fill="rgb(236,202,9)" fg:x="400454" fg:w="7220"/><text x="67.6410%" y="367.50"></text></g><g><title>OBR.exe`ahash::fallback_hash::impl$1::write(ahash::fallback_hash::AHasher*, ref$&lt;slice2$ (7,220 samples, 1.22%)</title><rect x="67.3910%" y="341" width="1.2150%" height="15" fill="rgb(250,229,37)" fg:x="400454" fg:w="7220"/><text x="67.6410%" y="351.50"></text></g><g><title>OBR.exe`ahash::operations::read_small(ref$&lt;slice2$ (1,403 samples, 0.24%)</title><rect x="68.3699%" y="325" width="0.2361%" height="15" fill="rgb(206,174,23)" fg:x="406271" fg:w="1403"/><text x="68.6199%" y="335.50"></text></g><g><title>OBR.exe`hashbrown::raw::bitmask::BitMask::lowest_set_bit (1,258 samples, 0.21%)</title><rect x="68.8838%" y="325" width="0.2117%" height="15" fill="rgb(211,33,43)" fg:x="409325" fg:w="1258"/><text x="69.1338%" y="335.50"></text></g><g><title>OBR.exe`hashbrown::raw::bitmask::impl$3::next (1,469 samples, 0.25%)</title><rect x="68.8739%" y="341" width="0.2472%" height="15" fill="rgb(245,58,50)" fg:x="409266" fg:w="1469"/><text x="69.1239%" y="351.50"></text></g><g><title>OBR.exe`hashbrown::raw::bitmask::BitMask::remove_lowest_bit (152 samples, 0.03%)</title><rect x="69.0955%" y="325" width="0.0256%" height="15" fill="rgb(244,68,36)" fg:x="410583" fg:w="152"/><text x="69.3455%" y="335.50"></text></g><g><title>OBR.exe`hashbrown::raw::h2 (3,944 samples, 0.66%)</title><rect x="69.1211%" y="341" width="0.6637%" height="15" fill="rgb(232,229,15)" fg:x="410735" fg:w="3944"/><text x="69.3711%" y="351.50"></text></g><g><title>OBR.exe`memcmp (630 samples, 0.11%)</title><rect x="72.0754%" y="245" width="0.1060%" height="15" fill="rgb(254,30,23)" fg:x="428290" fg:w="630"/><text x="72.3254%" y="255.50"></text></g><g><title>`0x7FFE4E631210 (181 samples, 0.03%)</title><rect x="72.1814%" y="245" width="0.0305%" height="15" fill="rgb(235,160,14)" fg:x="428920" fg:w="181"/><text x="72.4314%" y="255.50"></text></g><g><title>`0x7FFE4E631213 (156 samples, 0.03%)</title><rect x="72.2119%" y="245" width="0.0263%" height="15" fill="rgb(212,155,44)" fg:x="429101" fg:w="156"/><text x="72.4619%" y="255.50"></text></g><g><title>`0x7FFE4E631217 (66 samples, 0.01%)</title><rect x="72.2381%" y="245" width="0.0111%" height="15" fill="rgb(226,2,50)" fg:x="429257" fg:w="66"/><text x="72.4881%" y="255.50"></text></g><g><title>`0x7FFE4E631219 (128 samples, 0.02%)</title><rect x="72.2492%" y="245" width="0.0215%" height="15" fill="rgb(234,177,6)" fg:x="429323" fg:w="128"/><text x="72.4992%" y="255.50"></text></g><g><title>`0x7FFE4E63121C (303 samples, 0.05%)</title><rect x="72.2708%" y="245" width="0.0510%" height="15" fill="rgb(217,24,9)" fg:x="429451" fg:w="303"/><text x="72.5208%" y="255.50"></text></g><g><title>`0x7FFE4E63121E (69 samples, 0.01%)</title><rect x="72.3218%" y="245" width="0.0116%" height="15" fill="rgb(220,13,46)" fg:x="429754" fg:w="69"/><text x="72.5718%" y="255.50"></text></g><g><title>`0x7FFE4E631220 (410 samples, 0.07%)</title><rect x="72.3334%" y="245" width="0.0690%" height="15" fill="rgb(239,221,27)" fg:x="429823" fg:w="410"/><text x="72.5834%" y="255.50"></text></g><g><title>`0x7FFE4E631222 (531 samples, 0.09%)</title><rect x="72.4024%" y="245" width="0.0894%" height="15" fill="rgb(222,198,25)" fg:x="430233" fg:w="531"/><text x="72.6524%" y="255.50"></text></g><g><title>`0x7FFE4E631225 (861 samples, 0.14%)</title><rect x="72.4917%" y="245" width="0.1449%" height="15" fill="rgb(211,99,13)" fg:x="430764" fg:w="861"/><text x="72.7417%" y="255.50"></text></g><g><title>`0x7FFE4E631227 (2,940 samples, 0.49%)</title><rect x="72.6366%" y="245" width="0.4948%" height="15" fill="rgb(232,111,31)" fg:x="431625" fg:w="2940"/><text x="72.8866%" y="255.50"></text></g><g><title>`0x7FFE4E63122A (228 samples, 0.04%)</title><rect x="73.1314%" y="245" width="0.0384%" height="15" fill="rgb(245,82,37)" fg:x="434565" fg:w="228"/><text x="73.3814%" y="255.50"></text></g><g><title>`0x7FFE4E63122D (122 samples, 0.02%)</title><rect x="73.1698%" y="245" width="0.0205%" height="15" fill="rgb(227,149,46)" fg:x="434793" fg:w="122"/><text x="73.4198%" y="255.50"></text></g><g><title>`0x7FFE4E631230 (163 samples, 0.03%)</title><rect x="73.1903%" y="245" width="0.0274%" height="15" fill="rgb(218,36,50)" fg:x="434915" fg:w="163"/><text x="73.4403%" y="255.50"></text></g><g><title>`0x7FFE4E631232 (555 samples, 0.09%)</title><rect x="73.2177%" y="245" width="0.0934%" height="15" fill="rgb(226,80,48)" fg:x="435078" fg:w="555"/><text x="73.4677%" y="255.50"></text></g><g><title>`0x7FFE4E631235 (554 samples, 0.09%)</title><rect x="73.3111%" y="245" width="0.0932%" height="15" fill="rgb(238,224,15)" fg:x="435633" fg:w="554"/><text x="73.5611%" y="255.50"></text></g><g><title>`0x7FFE4E631239 (391 samples, 0.07%)</title><rect x="73.4044%" y="245" width="0.0658%" height="15" fill="rgb(241,136,10)" fg:x="436187" fg:w="391"/><text x="73.6544%" y="255.50"></text></g><g><title>`0x7FFE4E63123B (285 samples, 0.05%)</title><rect x="73.4702%" y="245" width="0.0480%" height="15" fill="rgb(208,32,45)" fg:x="436578" fg:w="285"/><text x="73.7202%" y="255.50"></text></g><g><title>`0x7FFE4E63123E (95 samples, 0.02%)</title><rect x="73.5181%" y="245" width="0.0160%" height="15" fill="rgb(207,135,9)" fg:x="436863" fg:w="95"/><text x="73.7681%" y="255.50"></text></g><g><title>`0x7FFE4E631240 (1,449 samples, 0.24%)</title><rect x="73.5341%" y="245" width="0.2438%" height="15" fill="rgb(206,86,44)" fg:x="436958" fg:w="1449"/><text x="73.7841%" y="255.50"></text></g><g><title>`0x7FFE4E631242 (1,584 samples, 0.27%)</title><rect x="73.7779%" y="245" width="0.2666%" height="15" fill="rgb(245,177,15)" fg:x="438407" fg:w="1584"/><text x="74.0279%" y="255.50"></text></g><g><title>`0x7FFE4E631245 (1,441 samples, 0.24%)</title><rect x="74.0445%" y="245" width="0.2425%" height="15" fill="rgb(206,64,50)" fg:x="439991" fg:w="1441"/><text x="74.2945%" y="255.50"></text></g><g><title>`0x7FFE4E631247 (5,605 samples, 0.94%)</title><rect x="74.2870%" y="245" width="0.9432%" height="15" fill="rgb(234,36,40)" fg:x="441432" fg:w="5605"/><text x="74.5370%" y="255.50"></text></g><g><title>`0x7FFE4E63124A (534 samples, 0.09%)</title><rect x="75.2303%" y="245" width="0.0899%" height="15" fill="rgb(213,64,8)" fg:x="447037" fg:w="534"/><text x="75.4803%" y="255.50"></text></g><g><title>`0x7FFE4E63124D (400 samples, 0.07%)</title><rect x="75.3201%" y="245" width="0.0673%" height="15" fill="rgb(210,75,36)" fg:x="447571" fg:w="400"/><text x="75.5701%" y="255.50"></text></g><g><title>`0x7FFE4E63124F (894 samples, 0.15%)</title><rect x="75.3874%" y="245" width="0.1504%" height="15" fill="rgb(229,88,21)" fg:x="447971" fg:w="894"/><text x="75.6374%" y="255.50"></text></g><g><title>`0x7FFE4E631252 (915 samples, 0.15%)</title><rect x="75.5379%" y="245" width="0.1540%" height="15" fill="rgb(252,204,47)" fg:x="448865" fg:w="915"/><text x="75.7879%" y="255.50"></text></g><g><title>`0x7FFE4E63125A (275 samples, 0.05%)</title><rect x="75.6993%" y="245" width="0.0463%" height="15" fill="rgb(208,77,27)" fg:x="449824" fg:w="275"/><text x="75.9493%" y="255.50"></text></g><g><title>`0x7FFE4E63125E (151 samples, 0.03%)</title><rect x="75.7456%" y="245" width="0.0254%" height="15" fill="rgb(221,76,26)" fg:x="450099" fg:w="151"/><text x="75.9956%" y="255.50"></text></g><g><title>`0x7FFE4E631297 (146 samples, 0.02%)</title><rect x="75.7710%" y="245" width="0.0246%" height="15" fill="rgb(225,139,18)" fg:x="450250" fg:w="146"/><text x="76.0210%" y="255.50"></text></g><g><title>`0x7FFE4E63129E (80 samples, 0.01%)</title><rect x="75.7977%" y="245" width="0.0135%" height="15" fill="rgb(230,137,11)" fg:x="450409" fg:w="80"/><text x="76.0477%" y="255.50"></text></g><g><title>`0x7FFE4E6312A0 (121 samples, 0.02%)</title><rect x="75.8112%" y="245" width="0.0204%" height="15" fill="rgb(212,28,1)" fg:x="450489" fg:w="121"/><text x="76.0612%" y="255.50"></text></g><g><title>`0x7FFE4E6312A3 (164 samples, 0.03%)</title><rect x="75.8315%" y="245" width="0.0276%" height="15" fill="rgb(248,164,17)" fg:x="450610" fg:w="164"/><text x="76.0815%" y="255.50"></text></g><g><title>`0x7FFE4E6312A7 (101 samples, 0.02%)</title><rect x="75.8591%" y="245" width="0.0170%" height="15" fill="rgb(222,171,42)" fg:x="450774" fg:w="101"/><text x="76.1091%" y="255.50"></text></g><g><title>`0x7FFE4E6312A9 (448 samples, 0.08%)</title><rect x="75.8761%" y="245" width="0.0754%" height="15" fill="rgb(243,84,45)" fg:x="450875" fg:w="448"/><text x="76.1261%" y="255.50"></text></g><g><title>OBR.exe`hashbrown::map::equivalent_key::closure$0(hashbrown::map::equivalent_key::closure_env$0&lt;slice2$&lt;u8&gt;,ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station&gt;*, tuple$&lt;ref$&lt;slice2$ (29,319 samples, 4.93%)</title><rect x="71.0401%" y="325" width="4.9340%" height="15" fill="rgb(252,49,23)" fg:x="422138" fg:w="29319"/><text x="71.2901%" y="335.50">OBR.ex..</text></g><g><title>OBR.exe`hashbrown::impl$0::equivalent(ref$&lt;slice2$&lt;u8&gt; &gt;, ref$&lt;slice2$ (29,319 samples, 4.93%)</title><rect x="71.0401%" y="309" width="4.9340%" height="15" fill="rgb(215,19,7)" fg:x="422138" fg:w="29319"/><text x="71.2901%" y="319.50">OBR.ex..</text></g><g><title>OBR.exe`core::cmp::impls::impl$9::eq(ref$&lt;slice2$&lt;u8&gt; &gt;*, ref$&lt;slice2$ (29,017 samples, 4.88%)</title><rect x="71.0909%" y="293" width="4.8832%" height="15" fill="rgb(238,81,41)" fg:x="422440" fg:w="29017"/><text x="71.3409%" y="303.50">OBR.ex..</text></g><g><title>OBR.exe`core::slice::cmp::impl$0::eq(ref$&lt;slice2$&lt;u8&gt; &gt;, ref$&lt;slice2$ (29,017 samples, 4.88%)</title><rect x="71.0909%" y="277" width="4.8832%" height="15" fill="rgb(210,199,37)" fg:x="422440" fg:w="29017"/><text x="71.3409%" y="287.50">OBR.ex..</text></g><g><title>OBR.exe`core::slice::cmp::impl$5::equal(ref$&lt;slice2$&lt;u8&gt; &gt;, ref$&lt;slice2$ (29,017 samples, 4.88%)</title><rect x="71.0909%" y="261" width="4.8832%" height="15" fill="rgb(244,192,49)" fg:x="422440" fg:w="29017"/><text x="71.3409%" y="271.50">OBR.ex..</text></g><g><title>OBR.exe`hashbrown::raw::Bucket&lt;tuple$&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station&gt; &gt;::as_ptr (1,987 samples, 0.33%)</title><rect x="75.9741%" y="309" width="0.3344%" height="15" fill="rgb(226,211,11)" fg:x="451457" fg:w="1987"/><text x="76.2241%" y="319.50"></text></g><g><title>OBR.exe`core::ptr::mut_ptr::impl$0::sub(tuple$&lt;ref$&lt;slice2$ (1,987 samples, 0.33%)</title><rect x="75.9741%" y="293" width="0.3344%" height="15" fill="rgb(236,162,54)" fg:x="451457" fg:w="1987"/><text x="76.2241%" y="303.50"></text></g><g><title>OBR.exe`core::ptr::mut_ptr::impl$0::offset(tuple$&lt;ref$&lt;slice2$ (1,987 samples, 0.33%)</title><rect x="75.9741%" y="277" width="0.3344%" height="15" fill="rgb(220,229,9)" fg:x="451457" fg:w="1987"/><text x="76.2241%" y="287.50"></text></g><g><title>OBR.exe`hashbrown::raw::impl$8::find::closure$0(hashbrown::raw::impl$8::find::closure_env$0&lt;tuple$&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station&gt;,allocator_api2::stable::alloc::global::Global,hashbrown::map::equivalent_key::closure_env$0&lt;slice2$&lt;u8&gt;,ref$&lt;slice2$ (39,422 samples, 6.63%)</title><rect x="69.7848%" y="341" width="6.6342%" height="15" fill="rgb(250,87,22)" fg:x="414679" fg:w="39422"/><text x="70.0348%" y="351.50">OBR.exe`h..</text></g><g><title>OBR.exe`hashbrown::raw::RawTable&lt;tuple$&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station&gt;,allocator_api2::stable::alloc::global::Global&gt;::bucket (2,644 samples, 0.44%)</title><rect x="75.9741%" y="325" width="0.4449%" height="15" fill="rgb(239,43,17)" fg:x="451457" fg:w="2644"/><text x="76.2241%" y="335.50"></text></g><g><title>OBR.exe`hashbrown::raw::Bucket&lt;tuple$&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station&gt; &gt;::from_base_index(core::ptr::non_null::NonNull&lt;tuple$&lt;ref$&lt;slice2$ (657 samples, 0.11%)</title><rect x="76.3085%" y="309" width="0.1106%" height="15" fill="rgb(231,177,25)" fg:x="453444" fg:w="657"/><text x="76.5585%" y="319.50"></text></g><g><title>OBR.exe`core::ptr::mut_ptr::impl$0::sub(tuple$&lt;ref$&lt;slice2$ (657 samples, 0.11%)</title><rect x="76.3085%" y="293" width="0.1106%" height="15" fill="rgb(219,179,1)" fg:x="453444" fg:w="657"/><text x="76.5585%" y="303.50"></text></g><g><title>OBR.exe`hashbrown::raw::sse2::Group::load (539 samples, 0.09%)</title><rect x="76.4190%" y="341" width="0.0907%" height="15" fill="rgb(238,219,53)" fg:x="454101" fg:w="539"/><text x="76.6690%" y="351.50"></text></g><g><title>OBR.exe`core::core_arch::x86::sse2::_mm_loadu_si128 (539 samples, 0.09%)</title><rect x="76.4190%" y="325" width="0.0907%" height="15" fill="rgb(232,167,36)" fg:x="454101" fg:w="539"/><text x="76.6690%" y="335.50"></text></g><g><title>OBR.exe`core::intrinsics::copy_nonoverlapping (539 samples, 0.09%)</title><rect x="76.4190%" y="309" width="0.0907%" height="15" fill="rgb(244,19,51)" fg:x="454101" fg:w="539"/><text x="76.6690%" y="319.50"></text></g><g><title>OBR.exe`hashbrown::raw::sse2::Group::match_byte (2,448 samples, 0.41%)</title><rect x="76.5097%" y="341" width="0.4120%" height="15" fill="rgb(224,6,22)" fg:x="454640" fg:w="2448"/><text x="76.7597%" y="351.50"></text></g><g><title>OBR.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (2,448 samples, 0.41%)</title><rect x="76.5097%" y="325" width="0.4120%" height="15" fill="rgb(224,145,5)" fg:x="454640" fg:w="2448"/><text x="76.7597%" y="335.50"></text></g><g><title>OBR.exe`hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;::get_mut(ref$&lt;slice2$ (61,021 samples, 10.27%)</title><rect x="66.7087%" y="421" width="10.2690%" height="15" fill="rgb(234,130,49)" fg:x="396400" fg:w="61021"/><text x="66.9587%" y="431.50">OBR.exe`hashbro..</text></g><g><title>OBR.exe`hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;::get_inner_mut(ref$&lt;slice2$ (61,021 samples, 10.27%)</title><rect x="66.7087%" y="405" width="10.2690%" height="15" fill="rgb(254,6,2)" fg:x="396400" fg:w="61021"/><text x="66.9587%" y="415.50">OBR.exe`hashbro..</text></g><g><title>OBR.exe`hashbrown::raw::RawTable&lt;tuple$&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station&gt;,allocator_api2::stable::alloc::global::Global&gt;::get_mut(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;slice2$&lt;u8&gt;,ref$&lt;slice2$ (49,747 samples, 8.37%)</title><rect x="68.6060%" y="389" width="8.3717%" height="15" fill="rgb(208,96,46)" fg:x="407674" fg:w="49747"/><text x="68.8560%" y="399.50">OBR.exe`hash..</text></g><g><title>OBR.exe`hashbrown::raw::RawTable&lt;tuple$&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station&gt;,allocator_api2::stable::alloc::global::Global&gt;::find(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;slice2$&lt;u8&gt;,ref$&lt;slice2$ (49,747 samples, 8.37%)</title><rect x="68.6060%" y="373" width="8.3717%" height="15" fill="rgb(239,3,39)" fg:x="407674" fg:w="49747"/><text x="68.8560%" y="383.50">OBR.exe`hash..</text></g><g><title>OBR.exe`hashbrown::raw::RawTableInner::find_inner(unsigned long long, ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;usize&gt;,assoc$ (49,747 samples, 8.37%)</title><rect x="68.6060%" y="357" width="8.3717%" height="15" fill="rgb(233,210,1)" fg:x="407674" fg:w="49747"/><text x="68.8560%" y="367.50">OBR.exe`hash..</text></g><g><title>OBR.exe`hashbrown::raw::sse2::Group::match_empty (333 samples, 0.06%)</title><rect x="76.9217%" y="341" width="0.0560%" height="15" fill="rgb(244,137,37)" fg:x="457088" fg:w="333"/><text x="77.1717%" y="351.50"></text></g><g><title>OBR.exe`hashbrown::raw::sse2::Group::match_byte (333 samples, 0.06%)</title><rect x="76.9217%" y="325" width="0.0560%" height="15" fill="rgb(240,136,2)" fg:x="457088" fg:w="333"/><text x="77.1717%" y="335.50"></text></g><g><title>OBR.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (333 samples, 0.06%)</title><rect x="76.9217%" y="309" width="0.0560%" height="15" fill="rgb(239,18,37)" fg:x="457088" fg:w="333"/><text x="77.1717%" y="319.50"></text></g><g><title>OBR.exe`core::iter::adapters::map::map_fold::closure$0(core::iter::adapters::map::map_fold::closure_env$0&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,tuple$&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,f64&gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,OBR::main::closure$1::closure_env$1,OBR::main::closure$1::closure_env$2&gt;*, hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;, ref$&lt;slice2$ (189,889 samples, 31.96%)</title><rect x="45.0223%" y="453" width="31.9557%" height="15" fill="rgb(218,185,22)" fg:x="267534" fg:w="189889"/><text x="45.2723%" y="463.50">OBR.exe`core::iter::adapters::map::map_fold::closure..</text></g><g><title>OBR.exe`OBR::main::closure$1::closure$2(OBR::main::closure$1::closure_env$2*, hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;, tuple$&lt;ref$&lt;slice2$ (70,898 samples, 11.93%)</title><rect x="65.0469%" y="437" width="11.9312%" height="15" fill="rgb(225,218,4)" fg:x="386525" fg:w="70898"/><text x="65.2969%" y="447.50">OBR.exe`OBR::main:..</text></g><g><title>OBR.exe`core::slice::index::impl$0::index(ref$&lt;slice2$&lt;u8&gt; &gt;, core::ops::range::RangeFrom (9,326 samples, 1.57%)</title><rect x="77.2448%" y="437" width="1.5694%" height="15" fill="rgb(230,182,32)" fg:x="459008" fg:w="9326"/><text x="77.4948%" y="447.50"></text></g><g><title>OBR.exe`core::slice::index::impl$6::index(core::ops::range::RangeFrom&lt;usize&gt;, ref$&lt;slice2$ (9,326 samples, 1.57%)</title><rect x="77.2448%" y="421" width="1.5694%" height="15" fill="rgb(242,56,43)" fg:x="459008" fg:w="9326"/><text x="77.4948%" y="431.50"></text></g><g><title>OBR.exe`core::slice::index::impl$6::get_unchecked(core::ops::range::RangeFrom&lt;usize&gt;, ptr_const$&lt;slice2$ (9,326 samples, 1.57%)</title><rect x="77.2448%" y="405" width="1.5694%" height="15" fill="rgb(233,99,24)" fg:x="459008" fg:w="9326"/><text x="77.4948%" y="415.50"></text></g><g><title>OBR.exe`core::slice::index::impl$4::get_unchecked(core::ops::range::Range&lt;usize&gt;, ptr_const$&lt;slice2$ (9,326 samples, 1.57%)</title><rect x="77.2448%" y="389" width="1.5694%" height="15" fill="rgb(234,209,42)" fg:x="459008" fg:w="9326"/><text x="77.4948%" y="399.50"></text></g><g><title>OBR.exe`core::ptr::const_ptr::impl$0::add (9,326 samples, 1.57%)</title><rect x="77.2448%" y="373" width="1.5694%" height="15" fill="rgb(227,7,12)" fg:x="459008" fg:w="9326"/><text x="77.4948%" y="383.50"></text></g><g><title>OBR.exe`core::slice::iter::impl$16::next::closure$0(core::slice::iter::impl$16::next::closure_env$0 (18,310 samples, 3.08%)</title><rect x="81.2421%" y="421" width="3.0813%" height="15" fill="rgb(245,203,43)" fg:x="482761" fg:w="18310"/><text x="81.4921%" y="431.50">OBR..</text></g><g><title>OBR.exe`OBR::main::closure$1::closure$0 (18,310 samples, 3.08%)</title><rect x="81.2421%" y="405" width="3.0813%" height="15" fill="rgb(238,205,33)" fg:x="482761" fg:w="18310"/><text x="81.4921%" y="415.50">OBR..</text></g><g><title>OBR.exe`core::iter::adapters::map::map_fold::closure$0(core::iter::adapters::map::map_fold::closure_env$0&lt;tuple$&lt;usize,usize&gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,ref$&lt;OBR::main::closure_env$1&gt;,ref$&lt;OBR::main::closure_env$3&gt; &gt;*, hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;, tuple$ (243,734 samples, 41.02%)</title><rect x="44.2854%" y="501" width="41.0171%" height="15" fill="rgb(231,56,7)" fg:x="263155" fg:w="243734"/><text x="44.5354%" y="511.50">OBR.exe`core::iter::adapters::map::map_fold::closure$0(core::iter::..</text></g><g><title>OBR.exe`core::iter::adapters::map::impl$2::fold&lt;tuple$&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,f64&gt;,core::slice::iter::Split&lt;u8,OBR::main::closure$1::closure_env$0&gt;,OBR::main::closure$1::closure_env$1,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,OBR::main::closure$1::closure_env$2&gt;(core::iter::adapters::map::Map&lt;core::slice::iter::Split&lt;u8,OBR::main::closure$1::closure_env$0&gt;,OBR::main::closure$1::closure_env$1&gt;, hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault (243,734 samples, 41.02%)</title><rect x="44.2854%" y="485" width="41.0171%" height="15" fill="rgb(244,186,29)" fg:x="263155" fg:w="243734"/><text x="44.5354%" y="495.50">OBR.exe`core::iter::adapters::map::impl$2::fold&lt;tuple$&lt;ref$&lt;slice2$..</text></g><g><title>OBR.exe`core::iter::traits::iterator::Iterator::fold(core::slice::iter::Split&lt;u8,OBR::main::closure$1::closure_env$0&gt;, hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;, core::iter::adapters::map::map_fold::closure_env$0&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,tuple$&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,f64&gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault (243,734 samples, 41.02%)</title><rect x="44.2854%" y="469" width="41.0171%" height="15" fill="rgb(234,111,31)" fg:x="263155" fg:w="243734"/><text x="44.5354%" y="479.50">OBR.exe`core::iter::traits::iterator::Iterator::fold(core::slice::i..</text></g><g><title>OBR.exe`core::slice::iter::impl$16::next(core::slice::iter::Split (49,466 samples, 8.32%)</title><rect x="76.9781%" y="453" width="8.3245%" height="15" fill="rgb(241,149,10)" fg:x="457423" fg:w="49466"/><text x="77.2281%" y="463.50">OBR.exe`core..</text></g><g><title>OBR.exe`core::slice::iter::impl$181::position(core::slice::iter::Iter&lt;u8&gt;*, core::slice::iter::impl$16::next::closure_env$0 (38,555 samples, 6.49%)</title><rect x="78.8143%" y="437" width="6.4883%" height="15" fill="rgb(249,206,44)" fg:x="468334" fg:w="38555"/><text x="79.0643%" y="447.50">OBR.exe`..</text></g><g><title>OBR.exe`core::slice::iter::impl$181::next(core::slice::iter::Iter (5,818 samples, 0.98%)</title><rect x="84.3234%" y="421" width="0.9791%" height="15" fill="rgb(251,153,30)" fg:x="501071" fg:w="5818"/><text x="84.5734%" y="431.50"></text></g><g><title>OBR.exe`core::ptr::non_null::impl$12::eq(core::ptr::non_null::NonNull&lt;u8&gt;*, core::ptr::non_null::NonNull (4,183 samples, 0.70%)</title><rect x="84.5986%" y="405" width="0.7039%" height="15" fill="rgb(239,152,38)" fg:x="502706" fg:w="4183"/><text x="84.8486%" y="415.50"></text></g><g><title>OBR.exe`rayon::iter::plumbing::Producer::fold_with(rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;, rayon::iter::map::MapFolder&lt;rayon::iter::reduce::ReduceFolder&lt;OBR::main::closure_env$3,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault (243,736 samples, 41.02%)</title><rect x="44.2854%" y="565" width="41.0175%" height="15" fill="rgb(249,139,47)" fg:x="263155" fg:w="243736"/><text x="44.5354%" y="575.50">OBR.exe`rayon::iter::plumbing::Producer::fold_with(rayon::vec::Drai..</text></g><g><title>OBR.exe`rayon::iter::map::impl$8::consume_iter(rayon::iter::map::MapFolder&lt;rayon::iter::reduce::ReduceFolder&lt;OBR::main::closure_env$3,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; &gt;,OBR::main::closure_env$1&gt;, rayon::vec::SliceDrain&lt;tuple$ (243,736 samples, 41.02%)</title><rect x="44.2854%" y="549" width="41.0175%" height="15" fill="rgb(244,64,35)" fg:x="263155" fg:w="243736"/><text x="44.5354%" y="559.50">OBR.exe`rayon::iter::map::impl$8::consume_iter(rayon::iter::map::Ma..</text></g><g><title>OBR.exe`core::iter::adapters::map::impl$2::fold&lt;hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,rayon::vec::SliceDrain&lt;tuple$&lt;usize,usize&gt; &gt;,ref$&lt;OBR::main::closure_env$1&gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,ref$&lt;OBR::main::closure_env$3&gt; &gt;(core::iter::adapters::map::Map&lt;rayon::vec::SliceDrain&lt;tuple$&lt;usize,usize&gt; &gt;,ref$&lt;OBR::main::closure_env$1&gt; &gt;, hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault (243,736 samples, 41.02%)</title><rect x="44.2854%" y="533" width="41.0175%" height="15" fill="rgb(216,46,15)" fg:x="263155" fg:w="243736"/><text x="44.5354%" y="543.50">OBR.exe`core::iter::adapters::map::impl$2::fold&lt;hashbrown::map::Has..</text></g><g><title>OBR.exe`core::iter::traits::iterator::Iterator::fold(rayon::vec::SliceDrain&lt;tuple$&lt;usize,usize&gt; &gt;, hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;, core::iter::adapters::map::map_fold::closure_env$0&lt;tuple$&lt;usize,usize&gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,ref$&lt;OBR::main::closure_env$1&gt;,ref$ (243,736 samples, 41.02%)</title><rect x="44.2854%" y="517" width="41.0175%" height="15" fill="rgb(250,74,19)" fg:x="263155" fg:w="243736"/><text x="44.5354%" y="527.50">OBR.exe`core::iter::traits::iterator::Iterator::fold(rayon::vec::Sl..</text></g><g><title>OBR.exe`core::slice::index::impl$0::index(ref$&lt;slice2$&lt;u8&gt; &gt;, core::ops::range::RangeFrom (443 samples, 0.07%)</title><rect x="85.6872%" y="325" width="0.0746%" height="15" fill="rgb(249,42,33)" fg:x="509175" fg:w="443"/><text x="85.9372%" y="335.50"></text></g><g><title>OBR.exe`core::slice::index::impl$6::index(core::ops::range::RangeFrom&lt;usize&gt;, ref$&lt;slice2$ (443 samples, 0.07%)</title><rect x="85.6872%" y="309" width="0.0746%" height="15" fill="rgb(242,149,17)" fg:x="509175" fg:w="443"/><text x="85.9372%" y="319.50"></text></g><g><title>OBR.exe`core::slice::index::impl$6::get_unchecked(core::ops::range::RangeFrom&lt;usize&gt;, ptr_const$&lt;slice2$ (443 samples, 0.07%)</title><rect x="85.6872%" y="293" width="0.0746%" height="15" fill="rgb(244,29,21)" fg:x="509175" fg:w="443"/><text x="85.9372%" y="303.50"></text></g><g><title>OBR.exe`core::slice::index::impl$4::get_unchecked(core::ops::range::Range&lt;usize&gt;, ptr_const$&lt;slice2$ (443 samples, 0.07%)</title><rect x="85.6872%" y="277" width="0.0746%" height="15" fill="rgb(220,130,37)" fg:x="509175" fg:w="443"/><text x="85.9372%" y="287.50"></text></g><g><title>OBR.exe`core::ptr::const_ptr::impl$0::add (443 samples, 0.07%)</title><rect x="85.6872%" y="261" width="0.0746%" height="15" fill="rgb(211,67,2)" fg:x="509175" fg:w="443"/><text x="85.9372%" y="271.50"></text></g><g><title>OBR.exe`core::slice::iter::impl$16::next::closure$0(core::slice::iter::impl$16::next::closure_env$0 (466 samples, 0.08%)</title><rect x="86.8005%" y="309" width="0.0784%" height="15" fill="rgb(235,68,52)" fg:x="515790" fg:w="466"/><text x="87.0505%" y="319.50"></text></g><g><title>OBR.exe`OBR::main::closure$1::closure$1::closure$0 (466 samples, 0.08%)</title><rect x="86.8005%" y="293" width="0.0784%" height="15" fill="rgb(246,142,3)" fg:x="515790" fg:w="466"/><text x="87.0505%" y="303.50"></text></g><g><title>OBR.exe`core::slice::iter::impl$16::next(core::slice::iter::Split (8,528 samples, 1.44%)</title><rect x="85.6872%" y="341" width="1.4351%" height="15" fill="rgb(241,25,7)" fg:x="509175" fg:w="8528"/><text x="85.9372%" y="351.50"></text></g><g><title>OBR.exe`core::slice::iter::impl$181::position(core::slice::iter::Iter&lt;u8&gt;*, core::slice::iter::impl$16::next::closure_env$0 (8,085 samples, 1.36%)</title><rect x="85.7618%" y="325" width="1.3606%" height="15" fill="rgb(242,119,39)" fg:x="509618" fg:w="8085"/><text x="86.0118%" y="335.50"></text></g><g><title>OBR.exe`core::slice::iter::impl$181::next(core::slice::iter::Iter (1,447 samples, 0.24%)</title><rect x="86.8789%" y="309" width="0.2435%" height="15" fill="rgb(241,98,45)" fg:x="516256" fg:w="1447"/><text x="87.1289%" y="319.50"></text></g><g><title>OBR.exe`core::ptr::non_null::impl$12::eq(core::ptr::non_null::NonNull&lt;u8&gt;*, core::ptr::non_null::NonNull (1,117 samples, 0.19%)</title><rect x="86.9344%" y="293" width="0.1880%" height="15" fill="rgb(254,28,30)" fg:x="516586" fg:w="1117"/><text x="87.1844%" y="303.50"></text></g><g><title>OBR.exe`core::num::dec2flt::float::impl$1::from_u64 (991 samples, 0.17%)</title><rect x="87.6254%" y="277" width="0.1668%" height="15" fill="rgb(241,142,54)" fg:x="520692" fg:w="991"/><text x="87.8754%" y="287.50"></text></g><g><title>OBR.exe`core::num::dec2flt::number::Number::is_fast_path (169 samples, 0.03%)</title><rect x="87.7930%" y="277" width="0.0284%" height="15" fill="rgb(222,85,15)" fg:x="521688" fg:w="169"/><text x="88.0430%" y="287.50"></text></g><g><title>OBR.exe`core::num::dec2flt::number::Number::try_fast_path (4,565 samples, 0.77%)</title><rect x="87.5162%" y="293" width="0.7682%" height="15" fill="rgb(210,85,47)" fg:x="520043" fg:w="4565"/><text x="87.7662%" y="303.50"></text></g><g><title>OBR.exe`core::ops::arith::impl$217::div (2,751 samples, 0.46%)</title><rect x="87.8214%" y="277" width="0.4630%" height="15" fill="rgb(224,206,25)" fg:x="521857" fg:w="2751"/><text x="88.0714%" y="287.50"></text></g><g><title>OBR.exe`core::num::dec2flt::parse::try_parse_digits::closure$0 (306 samples, 0.05%)</title><rect x="89.2113%" y="229" width="0.0515%" height="15" fill="rgb(243,201,19)" fg:x="530116" fg:w="306"/><text x="89.4613%" y="239.50"></text></g><g><title>OBR.exe`core::num::impl$9::wrapping_mul (177 samples, 0.03%)</title><rect x="89.2330%" y="213" width="0.0298%" height="15" fill="rgb(236,59,4)" fg:x="530245" fg:w="177"/><text x="89.4830%" y="223.50"></text></g><g><title>OBR.exe`core::num::dec2flt::parse::try_parse_digits (3,158 samples, 0.53%)</title><rect x="88.7746%" y="261" width="0.5314%" height="15" fill="rgb(254,179,45)" fg:x="527521" fg:w="3158"/><text x="89.0246%" y="271.50"></text></g><g><title>OBR.exe`core::num::dec2flt::common::impl$0::parse_digits (2,821 samples, 0.47%)</title><rect x="88.8313%" y="245" width="0.4747%" height="15" fill="rgb(226,14,10)" fg:x="527858" fg:w="2821"/><text x="89.0813%" y="255.50"></text></g><g><title>OBR.exe`core::num::impl$6::wrapping_sub (257 samples, 0.04%)</title><rect x="89.2628%" y="229" width="0.0432%" height="15" fill="rgb(244,27,41)" fg:x="530422" fg:w="257"/><text x="89.5128%" y="239.50"></text></g><g><title>OBR.exe`core::num::dec2flt::parse::parse_number (6,175 samples, 1.04%)</title><rect x="88.2844%" y="293" width="1.0392%" height="15" fill="rgb(235,35,32)" fg:x="524608" fg:w="6175"/><text x="88.5344%" y="303.50"></text></g><g><title>OBR.exe`core::num::dec2flt::parse::parse_partial_number (4,193 samples, 0.71%)</title><rect x="88.6179%" y="277" width="0.7056%" height="15" fill="rgb(218,68,31)" fg:x="526590" fg:w="4193"/><text x="88.8679%" y="287.50"></text></g><g><title>OBR.exe`core::slice::impl$0::split_first (104 samples, 0.02%)</title><rect x="89.3061%" y="261" width="0.0175%" height="15" fill="rgb(207,120,37)" fg:x="530679" fg:w="104"/><text x="89.5561%" y="271.50"></text></g><g><title>OBR.exe`enum2$&lt;core::result::Result&lt;f64,core::num::dec2flt::ParseFloatError&gt; &gt;::unwrap(enum2$&lt;core::result::Result (13,040 samples, 2.19%)</title><rect x="87.1293%" y="341" width="2.1945%" height="15" fill="rgb(227,98,0)" fg:x="517744" fg:w="13040"/><text x="87.3793%" y="351.50">O..</text></g><g><title>OBR.exe`core::num::dec2flt::impl$3::from_str (12,851 samples, 2.16%)</title><rect x="87.1611%" y="325" width="2.1626%" height="15" fill="rgb(207,7,3)" fg:x="517933" fg:w="12851"/><text x="87.4111%" y="335.50">O..</text></g><g><title>OBR.exe`core::num::dec2flt::dec2flt (11,823 samples, 1.99%)</title><rect x="87.3341%" y="309" width="1.9897%" height="15" fill="rgb(206,98,19)" fg:x="518961" fg:w="11823"/><text x="87.5841%" y="319.50">O..</text></g><g><title>OBR.exe`OBR::main::closure$1::closure$1(OBR::main::closure$1::closure_env$1*, ref$&lt;slice2$ (28,774 samples, 4.84%)</title><rect x="85.6083%" y="357" width="4.8423%" height="15" fill="rgb(217,5,26)" fg:x="508706" fg:w="28774"/><text x="85.8583%" y="367.50">OBR.ex..</text></g><g><title>OBR.exe`enum2$&lt;core::result::Result&lt;ref$&lt;str$&gt;,core::str::error::Utf8Error&gt; &gt;::unwrap(enum2$&lt;core::result::Result&lt;ref$ (6,696 samples, 1.13%)</title><rect x="89.3237%" y="341" width="1.1268%" height="15" fill="rgb(235,190,38)" fg:x="530784" fg:w="6696"/><text x="89.5737%" y="351.50"></text></g><g><title>OBR.exe`core::str::converts::from_utf8 (6,038 samples, 1.02%)</title><rect x="89.4345%" y="325" width="1.0161%" height="15" fill="rgb(247,86,24)" fg:x="531442" fg:w="6038"/><text x="89.6845%" y="335.50"></text></g><g><title>OBR.exe`core::str::validations::run_utf8_validation (4,290 samples, 0.72%)</title><rect x="89.7286%" y="309" width="0.7219%" height="15" fill="rgb(205,101,16)" fg:x="533190" fg:w="4290"/><text x="89.9786%" y="319.50"></text></g><g><title>OBR.exe`core::num::impl$11::wrapping_sub (450 samples, 0.08%)</title><rect x="90.3749%" y="293" width="0.0757%" height="15" fill="rgb(246,168,33)" fg:x="537030" fg:w="450"/><text x="90.6249%" y="303.50"></text></g><g><title>OBR.exe`core::f64::impl$0::max (378 samples, 0.06%)</title><rect x="90.6194%" y="325" width="0.0636%" height="15" fill="rgb(231,114,1)" fg:x="538483" fg:w="378"/><text x="90.8694%" y="335.50"></text></g><g><title>OBR.exe`OBR::Station::upate (1,801 samples, 0.30%)</title><rect x="90.4967%" y="341" width="0.3031%" height="15" fill="rgb(207,184,53)" fg:x="537754" fg:w="1801"/><text x="90.7467%" y="351.50"></text></g><g><title>OBR.exe`core::f64::impl$0::min (694 samples, 0.12%)</title><rect x="90.6830%" y="325" width="0.1168%" height="15" fill="rgb(224,95,51)" fg:x="538861" fg:w="694"/><text x="90.9330%" y="335.50"></text></g><g><title>OBR.exe`ahash::fallback_hash::impl$1::finish (695 samples, 0.12%)</title><rect x="90.8649%" y="293" width="0.1170%" height="15" fill="rgb(212,188,45)" fg:x="539942" fg:w="695"/><text x="91.1149%" y="303.50"></text></g><g><title>OBR.exe`ahash::operations::folded_multiply (695 samples, 0.12%)</title><rect x="90.8649%" y="277" width="0.1170%" height="15" fill="rgb(223,154,38)" fg:x="539942" fg:w="695"/><text x="91.1149%" y="287.50"></text></g><g><title>OBR.exe`core::num::impl$10::wrapping_mul (614 samples, 0.10%)</title><rect x="90.8785%" y="261" width="0.1033%" height="15" fill="rgb(251,22,52)" fg:x="540023" fg:w="614"/><text x="91.1285%" y="271.50"></text></g><g><title>OBR.exe`ahash::operations::folded_multiply (189 samples, 0.03%)</title><rect x="91.0847%" y="229" width="0.0318%" height="15" fill="rgb(229,209,22)" fg:x="541248" fg:w="189"/><text x="91.3347%" y="239.50"></text></g><g><title>OBR.exe`ahash::fallback_hash::AHasher::large_update (802 samples, 0.13%)</title><rect x="91.0138%" y="245" width="0.1350%" height="15" fill="rgb(234,138,34)" fg:x="540827" fg:w="802"/><text x="91.2638%" y="255.50"></text></g><g><title>OBR.exe`core::num::impl$9::wrapping_add (192 samples, 0.03%)</title><rect x="91.1165%" y="229" width="0.0323%" height="15" fill="rgb(212,95,11)" fg:x="541437" fg:w="192"/><text x="91.3665%" y="239.50"></text></g><g><title>OBR.exe`ahash::convert::impl$0::read_last_u32(ref$&lt;slice2$ (85 samples, 0.01%)</title><rect x="91.1772%" y="229" width="0.0143%" height="15" fill="rgb(240,179,47)" fg:x="541798" fg:w="85"/><text x="91.4272%" y="239.50"></text></g><g><title>OBR.exe`hashbrown::map::make_hash(core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;*, ref$&lt;slice2$ (1,960 samples, 0.33%)</title><rect x="90.8649%" y="309" width="0.3298%" height="15" fill="rgb(240,163,11)" fg:x="539942" fg:w="1960"/><text x="91.1149%" y="319.50"></text></g><g><title>OBR.exe`core::hash::impls::impl$4::hash(ref$&lt;slice2$ (1,265 samples, 0.21%)</title><rect x="90.9819%" y="293" width="0.2129%" height="15" fill="rgb(236,37,12)" fg:x="540637" fg:w="1265"/><text x="91.2319%" y="303.50"></text></g><g><title>OBR.exe`core::hash::impls::impl$9::hash_slice(ref$&lt;slice2$ (1,265 samples, 0.21%)</title><rect x="90.9819%" y="277" width="0.2129%" height="15" fill="rgb(232,164,16)" fg:x="540637" fg:w="1265"/><text x="91.2319%" y="287.50"></text></g><g><title>OBR.exe`ahash::fallback_hash::impl$1::write(ahash::fallback_hash::AHasher*, ref$&lt;slice2$ (1,265 samples, 0.21%)</title><rect x="90.9819%" y="261" width="0.2129%" height="15" fill="rgb(244,205,15)" fg:x="540637" fg:w="1265"/><text x="91.2319%" y="271.50"></text></g><g><title>OBR.exe`ahash::operations::read_small(ref$&lt;slice2$ (273 samples, 0.05%)</title><rect x="91.1488%" y="245" width="0.0459%" height="15" fill="rgb(223,117,47)" fg:x="541629" fg:w="273"/><text x="91.3988%" y="255.50"></text></g><g><title>OBR.exe`hashbrown::raw::bitmask::impl$3::next (113 samples, 0.02%)</title><rect x="91.2718%" y="261" width="0.0190%" height="15" fill="rgb(244,107,35)" fg:x="542360" fg:w="113"/><text x="91.5218%" y="271.50"></text></g><g><title>OBR.exe`hashbrown::raw::bitmask::BitMask::remove_lowest_bit (60 samples, 0.01%)</title><rect x="91.2807%" y="245" width="0.0101%" height="15" fill="rgb(205,140,8)" fg:x="542413" fg:w="60"/><text x="91.5307%" y="255.50"></text></g><g><title>OBR.exe`hashbrown::raw::h2 (1,058 samples, 0.18%)</title><rect x="91.2908%" y="261" width="0.1780%" height="15" fill="rgb(228,84,46)" fg:x="542473" fg:w="1058"/><text x="91.5408%" y="271.50"></text></g><g><title>OBR.exe`memcmp (197 samples, 0.03%)</title><rect x="91.9968%" y="165" width="0.0332%" height="15" fill="rgb(254,188,9)" fg:x="546668" fg:w="197"/><text x="92.2468%" y="175.50"></text></g><g><title>`0x7FFE4E631220 (88 samples, 0.01%)</title><rect x="92.0370%" y="165" width="0.0148%" height="15" fill="rgb(206,112,54)" fg:x="546907" fg:w="88"/><text x="92.2870%" y="175.50"></text></g><g><title>`0x7FFE4E631227 (954 samples, 0.16%)</title><rect x="92.0602%" y="165" width="0.1605%" height="15" fill="rgb(216,84,49)" fg:x="547045" fg:w="954"/><text x="92.3102%" y="175.50"></text></g><g><title>`0x7FFE4E631240 (165 samples, 0.03%)</title><rect x="92.2576%" y="165" width="0.0278%" height="15" fill="rgb(214,194,35)" fg:x="548218" fg:w="165"/><text x="92.5076%" y="175.50"></text></g><g><title>`0x7FFE4E631242 (235 samples, 0.04%)</title><rect x="92.2854%" y="165" width="0.0395%" height="15" fill="rgb(249,28,3)" fg:x="548383" fg:w="235"/><text x="92.5354%" y="175.50"></text></g><g><title>`0x7FFE4E631247 (1,779 samples, 0.30%)</title><rect x="92.3251%" y="165" width="0.2994%" height="15" fill="rgb(222,56,52)" fg:x="548619" fg:w="1779"/><text x="92.5751%" y="175.50"></text></g><g><title>`0x7FFE4E63124A (77 samples, 0.01%)</title><rect x="92.6245%" y="165" width="0.0130%" height="15" fill="rgb(245,217,50)" fg:x="550398" fg:w="77"/><text x="92.8745%" y="175.50"></text></g><g><title>`0x7FFE4E63124F (81 samples, 0.01%)</title><rect x="92.6376%" y="165" width="0.0136%" height="15" fill="rgb(213,201,24)" fg:x="550476" fg:w="81"/><text x="92.8876%" y="175.50"></text></g><g><title>`0x7FFE4E6312A9 (147 samples, 0.02%)</title><rect x="92.6846%" y="165" width="0.0247%" height="15" fill="rgb(248,116,28)" fg:x="550755" fg:w="147"/><text x="92.9346%" y="175.50"></text></g><g><title>OBR.exe`hashbrown::map::equivalent_key::closure$0(hashbrown::map::equivalent_key::closure_env$0&lt;slice2$&lt;u8&gt;,ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station&gt;*, tuple$&lt;ref$&lt;slice2$ (4,656 samples, 0.78%)</title><rect x="91.9312%" y="245" width="0.7835%" height="15" fill="rgb(219,72,43)" fg:x="546278" fg:w="4656"/><text x="92.1812%" y="255.50"></text></g><g><title>OBR.exe`hashbrown::impl$0::equivalent(ref$&lt;slice2$&lt;u8&gt; &gt;, ref$&lt;slice2$ (4,656 samples, 0.78%)</title><rect x="91.9312%" y="229" width="0.7835%" height="15" fill="rgb(209,138,14)" fg:x="546278" fg:w="4656"/><text x="92.1812%" y="239.50"></text></g><g><title>OBR.exe`core::cmp::impls::impl$9::eq(ref$&lt;slice2$&lt;u8&gt; &gt;*, ref$&lt;slice2$ (4,616 samples, 0.78%)</title><rect x="91.9379%" y="213" width="0.7768%" height="15" fill="rgb(222,18,33)" fg:x="546318" fg:w="4616"/><text x="92.1879%" y="223.50"></text></g><g><title>OBR.exe`core::slice::cmp::impl$0::eq(ref$&lt;slice2$&lt;u8&gt; &gt;, ref$&lt;slice2$ (4,616 samples, 0.78%)</title><rect x="91.9379%" y="197" width="0.7768%" height="15" fill="rgb(213,199,7)" fg:x="546318" fg:w="4616"/><text x="92.1879%" y="207.50"></text></g><g><title>OBR.exe`core::slice::cmp::impl$5::equal(ref$&lt;slice2$&lt;u8&gt; &gt;, ref$&lt;slice2$ (4,616 samples, 0.78%)</title><rect x="91.9379%" y="181" width="0.7768%" height="15" fill="rgb(250,110,10)" fg:x="546318" fg:w="4616"/><text x="92.1879%" y="191.50"></text></g><g><title>OBR.exe`hashbrown::raw::Bucket&lt;tuple$&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station&gt; &gt;::as_ptr (519 samples, 0.09%)</title><rect x="92.7147%" y="229" width="0.0873%" height="15" fill="rgb(248,123,6)" fg:x="550934" fg:w="519"/><text x="92.9647%" y="239.50"></text></g><g><title>OBR.exe`core::ptr::mut_ptr::impl$0::sub(tuple$&lt;ref$&lt;slice2$ (519 samples, 0.09%)</title><rect x="92.7147%" y="213" width="0.0873%" height="15" fill="rgb(206,91,31)" fg:x="550934" fg:w="519"/><text x="92.9647%" y="223.50"></text></g><g><title>OBR.exe`core::ptr::mut_ptr::impl$0::offset(tuple$&lt;ref$&lt;slice2$ (519 samples, 0.09%)</title><rect x="92.7147%" y="197" width="0.0873%" height="15" fill="rgb(211,154,13)" fg:x="550934" fg:w="519"/><text x="92.9647%" y="207.50"></text></g><g><title>OBR.exe`hashbrown::raw::impl$8::find::closure$0(hashbrown::raw::impl$8::find::closure_env$0&lt;tuple$&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station&gt;,allocator_api2::stable::alloc::global::Global,hashbrown::map::equivalent_key::closure_env$0&lt;slice2$&lt;u8&gt;,ref$&lt;slice2$ (8,102 samples, 1.36%)</title><rect x="91.4689%" y="261" width="1.3635%" height="15" fill="rgb(225,148,7)" fg:x="543531" fg:w="8102"/><text x="91.7189%" y="271.50"></text></g><g><title>OBR.exe`hashbrown::raw::RawTable&lt;tuple$&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station&gt;,allocator_api2::stable::alloc::global::Global&gt;::bucket (699 samples, 0.12%)</title><rect x="92.7147%" y="245" width="0.1176%" height="15" fill="rgb(220,160,43)" fg:x="550934" fg:w="699"/><text x="92.9647%" y="255.50"></text></g><g><title>OBR.exe`hashbrown::raw::Bucket&lt;tuple$&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station&gt; &gt;::from_base_index(core::ptr::non_null::NonNull&lt;tuple$&lt;ref$&lt;slice2$ (180 samples, 0.03%)</title><rect x="92.8021%" y="229" width="0.0303%" height="15" fill="rgb(213,52,39)" fg:x="551453" fg:w="180"/><text x="93.0521%" y="239.50"></text></g><g><title>OBR.exe`core::ptr::mut_ptr::impl$0::sub(tuple$&lt;ref$&lt;slice2$ (180 samples, 0.03%)</title><rect x="92.8021%" y="213" width="0.0303%" height="15" fill="rgb(243,137,7)" fg:x="551453" fg:w="180"/><text x="93.0521%" y="223.50"></text></g><g><title>OBR.exe`hashbrown::raw::sse2::Group::load (120 samples, 0.02%)</title><rect x="92.8323%" y="261" width="0.0202%" height="15" fill="rgb(230,79,13)" fg:x="551633" fg:w="120"/><text x="93.0823%" y="271.50"></text></g><g><title>OBR.exe`core::core_arch::x86::sse2::_mm_loadu_si128 (120 samples, 0.02%)</title><rect x="92.8323%" y="245" width="0.0202%" height="15" fill="rgb(247,105,23)" fg:x="551633" fg:w="120"/><text x="93.0823%" y="255.50"></text></g><g><title>OBR.exe`core::intrinsics::copy_nonoverlapping (120 samples, 0.02%)</title><rect x="92.8323%" y="229" width="0.0202%" height="15" fill="rgb(223,179,41)" fg:x="551633" fg:w="120"/><text x="93.0823%" y="239.50"></text></g><g><title>OBR.exe`hashbrown::raw::sse2::Group::match_byte (813 samples, 0.14%)</title><rect x="92.8525%" y="261" width="0.1368%" height="15" fill="rgb(218,9,34)" fg:x="551753" fg:w="813"/><text x="93.1025%" y="271.50"></text></g><g><title>OBR.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (813 samples, 0.14%)</title><rect x="92.8525%" y="245" width="0.1368%" height="15" fill="rgb(222,106,8)" fg:x="551753" fg:w="813"/><text x="93.1025%" y="255.50"></text></g><g><title>OBR.exe`hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;::get_mut(ref$&lt;slice2$ (13,136 samples, 2.21%)</title><rect x="90.7998%" y="341" width="2.2106%" height="15" fill="rgb(211,220,0)" fg:x="539555" fg:w="13136"/><text x="91.0498%" y="351.50">O..</text></g><g><title>OBR.exe`hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;::get_inner_mut(ref$&lt;slice2$ (13,136 samples, 2.21%)</title><rect x="90.7998%" y="325" width="2.2106%" height="15" fill="rgb(229,52,16)" fg:x="539555" fg:w="13136"/><text x="91.0498%" y="335.50">O..</text></g><g><title>OBR.exe`hashbrown::raw::RawTable&lt;tuple$&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station&gt;,allocator_api2::stable::alloc::global::Global&gt;::get_mut(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;slice2$&lt;u8&gt;,ref$&lt;slice2$ (10,789 samples, 1.82%)</title><rect x="91.1947%" y="309" width="1.8156%" height="15" fill="rgb(212,155,18)" fg:x="541902" fg:w="10789"/><text x="91.4447%" y="319.50">O..</text></g><g><title>OBR.exe`hashbrown::raw::RawTable&lt;tuple$&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station&gt;,allocator_api2::stable::alloc::global::Global&gt;::find(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;slice2$&lt;u8&gt;,ref$&lt;slice2$ (10,789 samples, 1.82%)</title><rect x="91.1947%" y="293" width="1.8156%" height="15" fill="rgb(242,21,14)" fg:x="541902" fg:w="10789"/><text x="91.4447%" y="303.50">O..</text></g><g><title>OBR.exe`hashbrown::raw::RawTableInner::find_inner(unsigned long long, ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;usize&gt;,assoc$ (10,789 samples, 1.82%)</title><rect x="91.1947%" y="277" width="1.8156%" height="15" fill="rgb(222,19,48)" fg:x="541902" fg:w="10789"/><text x="91.4447%" y="287.50">O..</text></g><g><title>OBR.exe`hashbrown::raw::sse2::Group::match_empty (125 samples, 0.02%)</title><rect x="92.9894%" y="261" width="0.0210%" height="15" fill="rgb(232,45,27)" fg:x="552566" fg:w="125"/><text x="93.2394%" y="271.50"></text></g><g><title>OBR.exe`hashbrown::raw::sse2::Group::match_byte (125 samples, 0.02%)</title><rect x="92.9894%" y="245" width="0.0210%" height="15" fill="rgb(249,103,42)" fg:x="552566" fg:w="125"/><text x="93.2394%" y="255.50"></text></g><g><title>OBR.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (125 samples, 0.02%)</title><rect x="92.9894%" y="229" width="0.0210%" height="15" fill="rgb(246,81,33)" fg:x="552566" fg:w="125"/><text x="93.2394%" y="239.50"></text></g><g><title>OBR.exe`core::iter::adapters::map::map_fold::closure$0(core::iter::adapters::map::map_fold::closure_env$0&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,tuple$&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,f64&gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,OBR::main::closure$1::closure_env$1,OBR::main::closure$1::closure_env$2&gt;*, hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;, ref$&lt;slice2$ (45,005 samples, 7.57%)</title><rect x="85.4370%" y="373" width="7.5737%" height="15" fill="rgb(252,33,42)" fg:x="507688" fg:w="45005"/><text x="85.6870%" y="383.50">OBR.exe`co..</text></g><g><title>OBR.exe`OBR::main::closure$1::closure$2(OBR::main::closure$1::closure_env$2*, hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;, tuple$&lt;ref$&lt;slice2$ (15,213 samples, 2.56%)</title><rect x="90.4506%" y="357" width="2.5601%" height="15" fill="rgb(209,212,41)" fg:x="537480" fg:w="15213"/><text x="90.7006%" y="367.50">OB..</text></g><g><title>OBR.exe`core::slice::index::impl$0::index(ref$&lt;slice2$&lt;u8&gt; &gt;, core::ops::range::RangeFrom (2,045 samples, 0.34%)</title><rect x="93.0481%" y="357" width="0.3441%" height="15" fill="rgb(207,154,6)" fg:x="552915" fg:w="2045"/><text x="93.2981%" y="367.50"></text></g><g><title>OBR.exe`core::slice::index::impl$6::index(core::ops::range::RangeFrom&lt;usize&gt;, ref$&lt;slice2$ (2,045 samples, 0.34%)</title><rect x="93.0481%" y="341" width="0.3441%" height="15" fill="rgb(223,64,47)" fg:x="552915" fg:w="2045"/><text x="93.2981%" y="351.50"></text></g><g><title>OBR.exe`core::slice::index::impl$6::get_unchecked(core::ops::range::RangeFrom&lt;usize&gt;, ptr_const$&lt;slice2$ (2,045 samples, 0.34%)</title><rect x="93.0481%" y="325" width="0.3441%" height="15" fill="rgb(211,161,38)" fg:x="552915" fg:w="2045"/><text x="93.2981%" y="335.50"></text></g><g><title>OBR.exe`core::slice::index::impl$4::get_unchecked(core::ops::range::Range&lt;usize&gt;, ptr_const$&lt;slice2$ (2,045 samples, 0.34%)</title><rect x="93.0481%" y="309" width="0.3441%" height="15" fill="rgb(219,138,40)" fg:x="552915" fg:w="2045"/><text x="93.2981%" y="319.50"></text></g><g><title>OBR.exe`core::ptr::const_ptr::impl$0::add (2,045 samples, 0.34%)</title><rect x="93.0481%" y="293" width="0.3441%" height="15" fill="rgb(241,228,46)" fg:x="552915" fg:w="2045"/><text x="93.2981%" y="303.50"></text></g><g><title>OBR.exe`core::slice::iter::impl$16::next::closure$0(core::slice::iter::impl$16::next::closure_env$0 (4,509 samples, 0.76%)</title><rect x="94.1743%" y="341" width="0.7588%" height="15" fill="rgb(223,209,38)" fg:x="559607" fg:w="4509"/><text x="94.4243%" y="351.50"></text></g><g><title>OBR.exe`OBR::main::closure$1::closure$0 (4,509 samples, 0.76%)</title><rect x="94.1743%" y="325" width="0.7588%" height="15" fill="rgb(236,164,45)" fg:x="559607" fg:w="4509"/><text x="94.4243%" y="335.50"></text></g><g><title>OBR.exe`rayon::iter::plumbing::Producer::fold_with(rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;, rayon::iter::map::MapFolder&lt;rayon::iter::reduce::ReduceFolder&lt;OBR::main::closure_env$3,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault (58,507 samples, 9.85%)</title><rect x="85.3030%" y="485" width="9.8459%" height="15" fill="rgb(231,15,5)" fg:x="506892" fg:w="58507"/><text x="85.5530%" y="495.50">OBR.exe`rayon:..</text></g><g><title>OBR.exe`rayon::iter::map::impl$8::consume_iter(rayon::iter::map::MapFolder&lt;rayon::iter::reduce::ReduceFolder&lt;OBR::main::closure_env$3,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; &gt;,OBR::main::closure_env$1&gt;, rayon::vec::SliceDrain&lt;tuple$ (58,507 samples, 9.85%)</title><rect x="85.3030%" y="469" width="9.8459%" height="15" fill="rgb(252,35,15)" fg:x="506892" fg:w="58507"/><text x="85.5530%" y="479.50">OBR.exe`rayon:..</text></g><g><title>OBR.exe`core::iter::adapters::map::impl$2::fold&lt;hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,rayon::vec::SliceDrain&lt;tuple$&lt;usize,usize&gt; &gt;,ref$&lt;OBR::main::closure_env$1&gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,ref$&lt;OBR::main::closure_env$3&gt; &gt;(core::iter::adapters::map::Map&lt;rayon::vec::SliceDrain&lt;tuple$&lt;usize,usize&gt; &gt;,ref$&lt;OBR::main::closure_env$1&gt; &gt;, hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault (58,507 samples, 9.85%)</title><rect x="85.3030%" y="453" width="9.8459%" height="15" fill="rgb(248,181,18)" fg:x="506892" fg:w="58507"/><text x="85.5530%" y="463.50">OBR.exe`core::..</text></g><g><title>OBR.exe`core::iter::traits::iterator::Iterator::fold(rayon::vec::SliceDrain&lt;tuple$&lt;usize,usize&gt; &gt;, hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;, core::iter::adapters::map::map_fold::closure_env$0&lt;tuple$&lt;usize,usize&gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,ref$&lt;OBR::main::closure_env$1&gt;,ref$ (58,507 samples, 9.85%)</title><rect x="85.3030%" y="437" width="9.8459%" height="15" fill="rgb(233,39,42)" fg:x="506892" fg:w="58507"/><text x="85.5530%" y="447.50">OBR.exe`core::..</text></g><g><title>OBR.exe`core::iter::adapters::map::map_fold::closure$0(core::iter::adapters::map::map_fold::closure_env$0&lt;tuple$&lt;usize,usize&gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,ref$&lt;OBR::main::closure_env$1&gt;,ref$&lt;OBR::main::closure_env$3&gt; &gt;*, hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;, tuple$ (58,507 samples, 9.85%)</title><rect x="85.3030%" y="421" width="9.8459%" height="15" fill="rgb(238,110,33)" fg:x="506892" fg:w="58507"/><text x="85.5530%" y="431.50">OBR.exe`core::..</text></g><g><title>OBR.exe`core::iter::adapters::map::impl$2::fold&lt;tuple$&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,f64&gt;,core::slice::iter::Split&lt;u8,OBR::main::closure$1::closure_env$0&gt;,OBR::main::closure$1::closure_env$1,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,OBR::main::closure$1::closure_env$2&gt;(core::iter::adapters::map::Map&lt;core::slice::iter::Split&lt;u8,OBR::main::closure$1::closure_env$0&gt;,OBR::main::closure$1::closure_env$1&gt;, hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault (58,507 samples, 9.85%)</title><rect x="85.3030%" y="405" width="9.8459%" height="15" fill="rgb(233,195,10)" fg:x="506892" fg:w="58507"/><text x="85.5530%" y="415.50">OBR.exe`core::..</text></g><g><title>OBR.exe`core::iter::traits::iterator::Iterator::fold(core::slice::iter::Split&lt;u8,OBR::main::closure$1::closure_env$0&gt;, hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;, core::iter::adapters::map::map_fold::closure_env$0&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,tuple$&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,f64&gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault (58,507 samples, 9.85%)</title><rect x="85.3030%" y="389" width="9.8459%" height="15" fill="rgb(254,105,3)" fg:x="506892" fg:w="58507"/><text x="85.5530%" y="399.50">OBR.exe`core::..</text></g><g><title>OBR.exe`core::slice::iter::impl$16::next(core::slice::iter::Split (12,706 samples, 2.14%)</title><rect x="93.0107%" y="373" width="2.1382%" height="15" fill="rgb(221,225,9)" fg:x="552693" fg:w="12706"/><text x="93.2607%" y="383.50">O..</text></g><g><title>OBR.exe`core::slice::iter::impl$181::position(core::slice::iter::Iter&lt;u8&gt;*, core::slice::iter::impl$16::next::closure_env$0 (10,439 samples, 1.76%)</title><rect x="93.3922%" y="357" width="1.7567%" height="15" fill="rgb(224,227,45)" fg:x="554960" fg:w="10439"/><text x="93.6422%" y="367.50"></text></g><g><title>OBR.exe`core::slice::iter::impl$181::next(core::slice::iter::Iter (1,283 samples, 0.22%)</title><rect x="94.9331%" y="341" width="0.2159%" height="15" fill="rgb(229,198,43)" fg:x="564116" fg:w="1283"/><text x="95.1831%" y="351.50"></text></g><g><title>OBR.exe`core::ptr::non_null::impl$12::eq(core::ptr::non_null::NonNull&lt;u8&gt;*, core::ptr::non_null::NonNull (1,140 samples, 0.19%)</title><rect x="94.9571%" y="325" width="0.1918%" height="15" fill="rgb(206,209,35)" fg:x="564259" fg:w="1140"/><text x="95.2071%" y="335.50"></text></g><g><title>OBR.exe`core::slice::index::impl$0::index(ref$&lt;slice2$&lt;u8&gt; &gt;, core::ops::range::RangeFrom (212 samples, 0.04%)</title><rect x="95.3460%" y="245" width="0.0357%" height="15" fill="rgb(245,195,53)" fg:x="566570" fg:w="212"/><text x="95.5960%" y="255.50"></text></g><g><title>OBR.exe`core::slice::index::impl$6::index(core::ops::range::RangeFrom&lt;usize&gt;, ref$&lt;slice2$ (212 samples, 0.04%)</title><rect x="95.3460%" y="229" width="0.0357%" height="15" fill="rgb(240,92,26)" fg:x="566570" fg:w="212"/><text x="95.5960%" y="239.50"></text></g><g><title>OBR.exe`core::slice::index::impl$6::get_unchecked(core::ops::range::RangeFrom&lt;usize&gt;, ptr_const$&lt;slice2$ (212 samples, 0.04%)</title><rect x="95.3460%" y="213" width="0.0357%" height="15" fill="rgb(207,40,23)" fg:x="566570" fg:w="212"/><text x="95.5960%" y="223.50"></text></g><g><title>OBR.exe`core::slice::index::impl$4::get_unchecked(core::ops::range::Range&lt;usize&gt;, ptr_const$&lt;slice2$ (212 samples, 0.04%)</title><rect x="95.3460%" y="197" width="0.0357%" height="15" fill="rgb(223,111,35)" fg:x="566570" fg:w="212"/><text x="95.5960%" y="207.50"></text></g><g><title>OBR.exe`core::ptr::const_ptr::impl$0::add (212 samples, 0.04%)</title><rect x="95.3460%" y="181" width="0.0357%" height="15" fill="rgb(229,147,28)" fg:x="566570" fg:w="212"/><text x="95.5960%" y="191.50"></text></g><g><title>OBR.exe`core::slice::iter::impl$16::next::closure$0(core::slice::iter::impl$16::next::closure_env$0 (237 samples, 0.04%)</title><rect x="95.8910%" y="229" width="0.0399%" height="15" fill="rgb(211,29,28)" fg:x="569808" fg:w="237"/><text x="96.1410%" y="239.50"></text></g><g><title>OBR.exe`OBR::main::closure$1::closure$1::closure$0 (237 samples, 0.04%)</title><rect x="95.8910%" y="213" width="0.0399%" height="15" fill="rgb(228,72,33)" fg:x="569808" fg:w="237"/><text x="96.1410%" y="223.50"></text></g><g><title>OBR.exe`core::slice::iter::impl$16::next(core::slice::iter::Split (4,217 samples, 0.71%)</title><rect x="95.3460%" y="261" width="0.7097%" height="15" fill="rgb(205,214,31)" fg:x="566570" fg:w="4217"/><text x="95.5960%" y="271.50"></text></g><g><title>OBR.exe`core::slice::iter::impl$181::position(core::slice::iter::Iter&lt;u8&gt;*, core::slice::iter::impl$16::next::closure_env$0 (4,005 samples, 0.67%)</title><rect x="95.3817%" y="245" width="0.6740%" height="15" fill="rgb(224,111,15)" fg:x="566782" fg:w="4005"/><text x="95.6317%" y="255.50"></text></g><g><title>OBR.exe`core::slice::iter::impl$181::next(core::slice::iter::Iter (742 samples, 0.12%)</title><rect x="95.9308%" y="229" width="0.1249%" height="15" fill="rgb(253,21,26)" fg:x="570045" fg:w="742"/><text x="96.1808%" y="239.50"></text></g><g><title>OBR.exe`core::ptr::non_null::impl$12::eq(core::ptr::non_null::NonNull&lt;u8&gt;*, core::ptr::non_null::NonNull (563 samples, 0.09%)</title><rect x="95.9610%" y="213" width="0.0947%" height="15" fill="rgb(245,139,43)" fg:x="570224" fg:w="563"/><text x="96.2110%" y="223.50"></text></g><g><title>OBR.exe`core::num::dec2flt::float::impl$1::from_u64 (511 samples, 0.09%)</title><rect x="96.3076%" y="197" width="0.0860%" height="15" fill="rgb(252,170,7)" fg:x="572284" fg:w="511"/><text x="96.5576%" y="207.50"></text></g><g><title>OBR.exe`core::num::dec2flt::number::Number::is_fast_path (70 samples, 0.01%)</title><rect x="96.3938%" y="197" width="0.0118%" height="15" fill="rgb(231,118,14)" fg:x="572796" fg:w="70"/><text x="96.6438%" y="207.50"></text></g><g><title>OBR.exe`core::num::dec2flt::number::Number::try_fast_path (2,335 samples, 0.39%)</title><rect x="96.2555%" y="213" width="0.3929%" height="15" fill="rgb(238,83,0)" fg:x="571974" fg:w="2335"/><text x="96.5055%" y="223.50"></text></g><g><title>OBR.exe`core::ops::arith::impl$217::div (1,443 samples, 0.24%)</title><rect x="96.4056%" y="197" width="0.2428%" height="15" fill="rgb(221,39,39)" fg:x="572866" fg:w="1443"/><text x="96.6556%" y="207.50"></text></g><g><title>OBR.exe`core::num::dec2flt::parse::try_parse_digits::closure$0 (155 samples, 0.03%)</title><rect x="97.1041%" y="149" width="0.0261%" height="15" fill="rgb(222,119,46)" fg:x="577017" fg:w="155"/><text x="97.3541%" y="159.50"></text></g><g><title>OBR.exe`core::num::impl$9::wrapping_mul (86 samples, 0.01%)</title><rect x="97.1157%" y="133" width="0.0145%" height="15" fill="rgb(222,165,49)" fg:x="577086" fg:w="86"/><text x="97.3657%" y="143.50"></text></g><g><title>OBR.exe`core::num::dec2flt::parse::try_parse_digits (1,523 samples, 0.26%)</title><rect x="96.8946%" y="181" width="0.2563%" height="15" fill="rgb(219,113,52)" fg:x="575772" fg:w="1523"/><text x="97.1446%" y="191.50"></text></g><g><title>OBR.exe`core::num::dec2flt::common::impl$0::parse_digits (1,360 samples, 0.23%)</title><rect x="96.9220%" y="165" width="0.2289%" height="15" fill="rgb(214,7,15)" fg:x="575935" fg:w="1360"/><text x="97.1720%" y="175.50"></text></g><g><title>OBR.exe`core::num::impl$6::wrapping_sub (123 samples, 0.02%)</title><rect x="97.1302%" y="149" width="0.0207%" height="15" fill="rgb(235,32,4)" fg:x="577172" fg:w="123"/><text x="97.3802%" y="159.50"></text></g><g><title>OBR.exe`core::num::dec2flt::parse::parse_number (3,044 samples, 0.51%)</title><rect x="96.6484%" y="213" width="0.5123%" height="15" fill="rgb(238,90,54)" fg:x="574309" fg:w="3044"/><text x="96.8984%" y="223.50"></text></g><g><title>OBR.exe`core::num::dec2flt::parse::parse_partial_number (2,021 samples, 0.34%)</title><rect x="96.8206%" y="197" width="0.3401%" height="15" fill="rgb(213,208,19)" fg:x="575332" fg:w="2021"/><text x="97.0706%" y="207.50"></text></g><g><title>OBR.exe`enum2$&lt;core::result::Result&lt;f64,core::num::dec2flt::ParseFloatError&gt; &gt;::unwrap(enum2$&lt;core::result::Result (6,551 samples, 1.10%)</title><rect x="96.0584%" y="261" width="1.1024%" height="15" fill="rgb(233,156,4)" fg:x="570803" fg:w="6551"/><text x="96.3084%" y="271.50"></text></g><g><title>OBR.exe`core::num::dec2flt::impl$3::from_str (6,449 samples, 1.09%)</title><rect x="96.0756%" y="245" width="1.0853%" height="15" fill="rgb(207,194,5)" fg:x="570905" fg:w="6449"/><text x="96.3256%" y="255.50"></text></g><g><title>OBR.exe`core::num::dec2flt::dec2flt (5,929 samples, 1.00%)</title><rect x="96.1631%" y="229" width="0.9978%" height="15" fill="rgb(206,111,30)" fg:x="571425" fg:w="5929"/><text x="96.4131%" y="239.50"></text></g><g><title>OBR.exe`OBR::main::closure$1::closure$1(OBR::main::closure$1::closure_env$1*, ref$&lt;slice2$ (14,333 samples, 2.41%)</title><rect x="95.3013%" y="277" width="2.4120%" height="15" fill="rgb(243,70,54)" fg:x="566304" fg:w="14333"/><text x="95.5513%" y="287.50">OB..</text></g><g><title>OBR.exe`enum2$&lt;core::result::Result&lt;ref$&lt;str$&gt;,core::str::error::Utf8Error&gt; &gt;::unwrap(enum2$&lt;core::result::Result&lt;ref$ (3,283 samples, 0.55%)</title><rect x="97.1608%" y="261" width="0.5525%" height="15" fill="rgb(242,28,8)" fg:x="577354" fg:w="3283"/><text x="97.4108%" y="271.50"></text></g><g><title>OBR.exe`core::str::converts::from_utf8 (2,969 samples, 0.50%)</title><rect x="97.2137%" y="245" width="0.4996%" height="15" fill="rgb(219,106,18)" fg:x="577668" fg:w="2969"/><text x="97.4637%" y="255.50"></text></g><g><title>OBR.exe`core::str::validations::run_utf8_validation (2,115 samples, 0.36%)</title><rect x="97.3574%" y="229" width="0.3559%" height="15" fill="rgb(244,222,10)" fg:x="578522" fg:w="2115"/><text x="97.6074%" y="239.50"></text></g><g><title>OBR.exe`core::num::impl$11::wrapping_sub (234 samples, 0.04%)</title><rect x="97.6739%" y="213" width="0.0394%" height="15" fill="rgb(236,179,52)" fg:x="580403" fg:w="234"/><text x="97.9239%" y="223.50"></text></g><g><title>OBR.exe`core::f64::impl$0::max (186 samples, 0.03%)</title><rect x="97.7981%" y="245" width="0.0313%" height="15" fill="rgb(213,23,39)" fg:x="581141" fg:w="186"/><text x="98.0481%" y="255.50"></text></g><g><title>OBR.exe`OBR::Station::upate (942 samples, 0.16%)</title><rect x="97.7386%" y="261" width="0.1585%" height="15" fill="rgb(238,48,10)" fg:x="580787" fg:w="942"/><text x="97.9886%" y="271.50"></text></g><g><title>OBR.exe`core::f64::impl$0::min (402 samples, 0.07%)</title><rect x="97.8294%" y="245" width="0.0677%" height="15" fill="rgb(251,196,23)" fg:x="581327" fg:w="402"/><text x="98.0794%" y="255.50"></text></g><g><title>OBR.exe`ahash::fallback_hash::impl$1::finish (362 samples, 0.06%)</title><rect x="97.9287%" y="213" width="0.0609%" height="15" fill="rgb(250,152,24)" fg:x="581917" fg:w="362"/><text x="98.1787%" y="223.50"></text></g><g><title>OBR.exe`ahash::operations::folded_multiply (362 samples, 0.06%)</title><rect x="97.9287%" y="197" width="0.0609%" height="15" fill="rgb(209,150,17)" fg:x="581917" fg:w="362"/><text x="98.1787%" y="207.50"></text></g><g><title>OBR.exe`core::num::impl$10::wrapping_mul (312 samples, 0.05%)</title><rect x="97.9371%" y="181" width="0.0525%" height="15" fill="rgb(234,202,34)" fg:x="581967" fg:w="312"/><text x="98.1871%" y="191.50"></text></g><g><title>OBR.exe`ahash::operations::folded_multiply (104 samples, 0.02%)</title><rect x="98.0406%" y="149" width="0.0175%" height="15" fill="rgb(253,148,53)" fg:x="582582" fg:w="104"/><text x="98.2906%" y="159.50"></text></g><g><title>OBR.exe`ahash::fallback_hash::AHasher::large_update (386 samples, 0.06%)</title><rect x="98.0060%" y="165" width="0.0650%" height="15" fill="rgb(218,129,16)" fg:x="582376" fg:w="386"/><text x="98.2560%" y="175.50"></text></g><g><title>OBR.exe`core::num::impl$9::wrapping_add (76 samples, 0.01%)</title><rect x="98.0581%" y="149" width="0.0128%" height="15" fill="rgb(216,85,19)" fg:x="582686" fg:w="76"/><text x="98.3081%" y="159.50"></text></g><g><title>OBR.exe`hashbrown::map::make_hash(core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;*, ref$&lt;slice2$ (997 samples, 0.17%)</title><rect x="97.9287%" y="229" width="0.1678%" height="15" fill="rgb(235,228,7)" fg:x="581917" fg:w="997"/><text x="98.1787%" y="239.50"></text></g><g><title>OBR.exe`core::hash::impls::impl$4::hash(ref$&lt;slice2$ (635 samples, 0.11%)</title><rect x="97.9897%" y="213" width="0.1069%" height="15" fill="rgb(245,175,0)" fg:x="582279" fg:w="635"/><text x="98.2397%" y="223.50"></text></g><g><title>OBR.exe`core::hash::impls::impl$9::hash_slice(ref$&lt;slice2$ (635 samples, 0.11%)</title><rect x="97.9897%" y="197" width="0.1069%" height="15" fill="rgb(208,168,36)" fg:x="582279" fg:w="635"/><text x="98.2397%" y="207.50"></text></g><g><title>OBR.exe`ahash::fallback_hash::impl$1::write(ahash::fallback_hash::AHasher*, ref$&lt;slice2$ (635 samples, 0.11%)</title><rect x="97.9897%" y="181" width="0.1069%" height="15" fill="rgb(246,171,24)" fg:x="582279" fg:w="635"/><text x="98.2397%" y="191.50"></text></g><g><title>OBR.exe`ahash::operations::read_small(ref$&lt;slice2$ (152 samples, 0.03%)</title><rect x="98.0709%" y="165" width="0.0256%" height="15" fill="rgb(215,142,24)" fg:x="582762" fg:w="152"/><text x="98.3209%" y="175.50"></text></g><g><title>OBR.exe`hashbrown::raw::h2 (488 samples, 0.08%)</title><rect x="98.1371%" y="181" width="0.0821%" height="15" fill="rgb(250,187,7)" fg:x="583155" fg:w="488"/><text x="98.3871%" y="191.50"></text></g><g><title>OBR.exe`memcmp (94 samples, 0.02%)</title><rect x="98.4750%" y="85" width="0.0158%" height="15" fill="rgb(228,66,33)" fg:x="585163" fg:w="94"/><text x="98.7250%" y="95.50"></text></g><g><title>`0x7FFE4E631227 (458 samples, 0.08%)</title><rect x="98.5097%" y="85" width="0.0771%" height="15" fill="rgb(234,215,21)" fg:x="585369" fg:w="458"/><text x="98.7597%" y="95.50"></text></g><g><title>`0x7FFE4E631242 (93 samples, 0.02%)</title><rect x="98.6135%" y="85" width="0.0157%" height="15" fill="rgb(222,191,20)" fg:x="585986" fg:w="93"/><text x="98.8635%" y="95.50"></text></g><g><title>`0x7FFE4E631247 (866 samples, 0.15%)</title><rect x="98.6291%" y="85" width="0.1457%" height="15" fill="rgb(245,79,54)" fg:x="586079" fg:w="866"/><text x="98.8791%" y="95.50"></text></g><g><title>OBR.exe`hashbrown::map::equivalent_key::closure$0(hashbrown::map::equivalent_key::closure_env$0&lt;slice2$&lt;u8&gt;,ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station&gt;*, tuple$&lt;ref$&lt;slice2$ (2,203 samples, 0.37%)</title><rect x="98.4423%" y="165" width="0.3707%" height="15" fill="rgb(240,10,37)" fg:x="584969" fg:w="2203"/><text x="98.6923%" y="175.50"></text></g><g><title>OBR.exe`hashbrown::impl$0::equivalent(ref$&lt;slice2$&lt;u8&gt; &gt;, ref$&lt;slice2$ (2,203 samples, 0.37%)</title><rect x="98.4423%" y="149" width="0.3707%" height="15" fill="rgb(214,192,32)" fg:x="584969" fg:w="2203"/><text x="98.6923%" y="159.50"></text></g><g><title>OBR.exe`core::cmp::impls::impl$9::eq(ref$&lt;slice2$&lt;u8&gt; &gt;*, ref$&lt;slice2$ (2,178 samples, 0.37%)</title><rect x="98.4465%" y="133" width="0.3665%" height="15" fill="rgb(209,36,54)" fg:x="584994" fg:w="2178"/><text x="98.6965%" y="143.50"></text></g><g><title>OBR.exe`core::slice::cmp::impl$0::eq(ref$&lt;slice2$&lt;u8&gt; &gt;, ref$&lt;slice2$ (2,178 samples, 0.37%)</title><rect x="98.4465%" y="117" width="0.3665%" height="15" fill="rgb(220,10,11)" fg:x="584994" fg:w="2178"/><text x="98.6965%" y="127.50"></text></g><g><title>OBR.exe`core::slice::cmp::impl$5::equal(ref$&lt;slice2$&lt;u8&gt; &gt;, ref$&lt;slice2$ (2,178 samples, 0.37%)</title><rect x="98.4465%" y="101" width="0.3665%" height="15" fill="rgb(221,106,17)" fg:x="584994" fg:w="2178"/><text x="98.6965%" y="111.50"></text></g><g><title>OBR.exe`hashbrown::raw::Bucket&lt;tuple$&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station&gt; &gt;::as_ptr (263 samples, 0.04%)</title><rect x="98.8131%" y="149" width="0.0443%" height="15" fill="rgb(251,142,44)" fg:x="587172" fg:w="263"/><text x="99.0631%" y="159.50"></text></g><g><title>OBR.exe`core::ptr::mut_ptr::impl$0::sub(tuple$&lt;ref$&lt;slice2$ (263 samples, 0.04%)</title><rect x="98.8131%" y="133" width="0.0443%" height="15" fill="rgb(238,13,15)" fg:x="587172" fg:w="263"/><text x="99.0631%" y="143.50"></text></g><g><title>OBR.exe`core::ptr::mut_ptr::impl$0::offset(tuple$&lt;ref$&lt;slice2$ (263 samples, 0.04%)</title><rect x="98.8131%" y="117" width="0.0443%" height="15" fill="rgb(208,107,27)" fg:x="587172" fg:w="263"/><text x="99.0631%" y="127.50"></text></g><g><title>OBR.exe`hashbrown::raw::impl$8::find::closure$0(hashbrown::raw::impl$8::find::closure_env$0&lt;tuple$&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station&gt;,allocator_api2::stable::alloc::global::Global,hashbrown::map::equivalent_key::closure_env$0&lt;slice2$&lt;u8&gt;,ref$&lt;slice2$ (3,866 samples, 0.65%)</title><rect x="98.2192%" y="181" width="0.6506%" height="15" fill="rgb(205,136,37)" fg:x="583643" fg:w="3866"/><text x="98.4692%" y="191.50"></text></g><g><title>OBR.exe`hashbrown::raw::RawTable&lt;tuple$&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station&gt;,allocator_api2::stable::alloc::global::Global&gt;::bucket (337 samples, 0.06%)</title><rect x="98.8131%" y="165" width="0.0567%" height="15" fill="rgb(250,205,27)" fg:x="587172" fg:w="337"/><text x="99.0631%" y="175.50"></text></g><g><title>OBR.exe`hashbrown::raw::Bucket&lt;tuple$&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station&gt; &gt;::from_base_index(core::ptr::non_null::NonNull&lt;tuple$&lt;ref$&lt;slice2$ (74 samples, 0.01%)</title><rect x="98.8573%" y="149" width="0.0125%" height="15" fill="rgb(210,80,43)" fg:x="587435" fg:w="74"/><text x="99.1073%" y="159.50"></text></g><g><title>OBR.exe`core::ptr::mut_ptr::impl$0::sub(tuple$&lt;ref$&lt;slice2$ (74 samples, 0.01%)</title><rect x="98.8573%" y="133" width="0.0125%" height="15" fill="rgb(247,160,36)" fg:x="587435" fg:w="74"/><text x="99.1073%" y="143.50"></text></g><g><title>OBR.exe`hashbrown::raw::sse2::Group::match_byte (503 samples, 0.08%)</title><rect x="98.8775%" y="181" width="0.0846%" height="15" fill="rgb(234,13,49)" fg:x="587555" fg:w="503"/><text x="99.1275%" y="191.50"></text></g><g><title>OBR.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (503 samples, 0.08%)</title><rect x="98.8775%" y="165" width="0.0846%" height="15" fill="rgb(234,122,0)" fg:x="587555" fg:w="503"/><text x="99.1275%" y="175.50"></text></g><g><title>OBR.exe`hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;::get_mut(ref$&lt;slice2$ (6,369 samples, 1.07%)</title><rect x="97.8971%" y="261" width="1.0718%" height="15" fill="rgb(207,146,38)" fg:x="581729" fg:w="6369"/><text x="98.1471%" y="271.50"></text></g><g><title>OBR.exe`hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;::get_inner_mut(ref$&lt;slice2$ (6,369 samples, 1.07%)</title><rect x="97.8971%" y="245" width="1.0718%" height="15" fill="rgb(207,177,25)" fg:x="581729" fg:w="6369"/><text x="98.1471%" y="255.50"></text></g><g><title>OBR.exe`hashbrown::raw::RawTable&lt;tuple$&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station&gt;,allocator_api2::stable::alloc::global::Global&gt;::get_mut(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;slice2$&lt;u8&gt;,ref$&lt;slice2$ (5,184 samples, 0.87%)</title><rect x="98.0965%" y="229" width="0.8724%" height="15" fill="rgb(211,178,42)" fg:x="582914" fg:w="5184"/><text x="98.3465%" y="239.50"></text></g><g><title>OBR.exe`hashbrown::raw::RawTable&lt;tuple$&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station&gt;,allocator_api2::stable::alloc::global::Global&gt;::find(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;slice2$&lt;u8&gt;,ref$&lt;slice2$ (5,184 samples, 0.87%)</title><rect x="98.0965%" y="213" width="0.8724%" height="15" fill="rgb(230,69,54)" fg:x="582914" fg:w="5184"/><text x="98.3465%" y="223.50"></text></g><g><title>OBR.exe`hashbrown::raw::RawTableInner::find_inner(unsigned long long, ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;usize&gt;,assoc$ (5,184 samples, 0.87%)</title><rect x="98.0965%" y="197" width="0.8724%" height="15" fill="rgb(214,135,41)" fg:x="582914" fg:w="5184"/><text x="98.3465%" y="207.50"></text></g><g><title>OBR.exe`core::iter::adapters::map::map_fold::closure$0(core::iter::adapters::map::map_fold::closure_env$0&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,tuple$&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,f64&gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,OBR::main::closure$1::closure_env$1,OBR::main::closure$1::closure_env$2&gt;*, hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;, ref$&lt;slice2$ (22,293 samples, 3.75%)</title><rect x="95.2175%" y="293" width="3.7516%" height="15" fill="rgb(237,67,25)" fg:x="565806" fg:w="22293"/><text x="95.4675%" y="303.50">OBR...</text></g><g><title>OBR.exe`OBR::main::closure$1::closure$2(OBR::main::closure$1::closure_env$2*, hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;, tuple$&lt;ref$&lt;slice2$ (7,462 samples, 1.26%)</title><rect x="97.7133%" y="277" width="1.2558%" height="15" fill="rgb(222,189,50)" fg:x="580637" fg:w="7462"/><text x="97.9633%" y="287.50"></text></g><g><title>OBR.exe`core::slice::index::impl$0::index(ref$&lt;slice2$&lt;u8&gt; &gt;, core::ops::range::RangeFrom (965 samples, 0.16%)</title><rect x="98.9873%" y="277" width="0.1624%" height="15" fill="rgb(245,148,34)" fg:x="588207" fg:w="965"/><text x="99.2373%" y="287.50"></text></g><g><title>OBR.exe`core::slice::index::impl$6::index(core::ops::range::RangeFrom&lt;usize&gt;, ref$&lt;slice2$ (965 samples, 0.16%)</title><rect x="98.9873%" y="261" width="0.1624%" height="15" fill="rgb(222,29,6)" fg:x="588207" fg:w="965"/><text x="99.2373%" y="271.50"></text></g><g><title>OBR.exe`core::slice::index::impl$6::get_unchecked(core::ops::range::RangeFrom&lt;usize&gt;, ptr_const$&lt;slice2$ (965 samples, 0.16%)</title><rect x="98.9873%" y="245" width="0.1624%" height="15" fill="rgb(221,189,43)" fg:x="588207" fg:w="965"/><text x="99.2373%" y="255.50"></text></g><g><title>OBR.exe`core::slice::index::impl$4::get_unchecked(core::ops::range::Range&lt;usize&gt;, ptr_const$&lt;slice2$ (965 samples, 0.16%)</title><rect x="98.9873%" y="229" width="0.1624%" height="15" fill="rgb(207,36,27)" fg:x="588207" fg:w="965"/><text x="99.2373%" y="239.50"></text></g><g><title>OBR.exe`core::ptr::const_ptr::impl$0::add (965 samples, 0.16%)</title><rect x="98.9873%" y="213" width="0.1624%" height="15" fill="rgb(217,90,24)" fg:x="588207" fg:w="965"/><text x="99.2373%" y="223.50"></text></g><g><title>OBR.exe`core::slice::iter::impl$16::next::closure$0(core::slice::iter::impl$16::next::closure_env$0 (2,187 samples, 0.37%)</title><rect x="99.5226%" y="261" width="0.3680%" height="15" fill="rgb(224,66,35)" fg:x="591388" fg:w="2187"/><text x="99.7726%" y="271.50"></text></g><g><title>OBR.exe`OBR::main::closure$1::closure$0 (2,187 samples, 0.37%)</title><rect x="99.5226%" y="245" width="0.3680%" height="15" fill="rgb(221,13,50)" fg:x="591388" fg:w="2187"/><text x="99.7726%" y="255.50"></text></g><g><title>OBR.exe`enum2$&lt;rayon_core::job::JobResult&lt;hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; &gt; &gt;::call(rayon_core::join::join_context::call_b::closure_env$0&lt;hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer (565,432 samples, 95.15%)</title><rect x="4.8414%" y="709" width="95.1545%" height="15" fill="rgb(236,68,49)" fg:x="28769" fg:w="565432"/><text x="5.0914%" y="719.50">OBR.exe`enum2$&lt;rayon_core::job::JobResult&lt;hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;..</text></g><g><title>OBR.exe`std::panicking::try&lt;hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,rayon_core::join::join_context::call_b::closure_env$0&lt;hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;OBR::main::closure_env$3,OBR::main::closure_env$2&gt;,OBR::main::closure_env$1&gt; &gt; &gt; &gt; &gt; &gt;(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,rayon_core::join::join_context::call_b::closure_env$0&lt;hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer (565,432 samples, 95.15%)</title><rect x="4.8414%" y="693" width="95.1545%" height="15" fill="rgb(229,146,28)" fg:x="28769" fg:w="565432"/><text x="5.0914%" y="703.50">OBR.exe`std::panicking::try&lt;hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api..</text></g><g><title>OBR.exe`std::panicking::try::do_call (565,432 samples, 95.15%)</title><rect x="4.8414%" y="677" width="95.1545%" height="15" fill="rgb(225,31,38)" fg:x="28769" fg:w="565432"/><text x="5.0914%" y="687.50">OBR.exe`std::panicking::try::do_call</text></g><g><title>OBR.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;OBR::main::closure_env$3,OBR::main::closure_env$2&gt;,OBR::main::closure_env$1&gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer (565,432 samples, 95.15%)</title><rect x="4.8414%" y="661" width="95.1545%" height="15" fill="rgb(250,208,3)" fg:x="28769" fg:w="565432"/><text x="5.0914%" y="671.50">OBR.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::redu..</text></g><g><title>OBR.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;OBR::main::closure_env$3,OBR::main::closure_env$2&gt;,OBR::main::closure_env$1&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;OBR::main::closure_env$3,OBR::main::closure_env$2&gt;,OBR::main::closure_env$1&gt; &gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; &gt;,tuple$&lt;hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;OBR::main::closure_env$3,OBR::main::closure_env$2&gt;,OBR::main::closure_env$1&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;OBR::main::closure_env$3,OBR::main::closure_env$2&gt;,OBR::main::closure_env$1&gt; &gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault (331,050 samples, 55.71%)</title><rect x="44.2847%" y="645" width="55.7112%" height="15" fill="rgb(246,54,23)" fg:x="263151" fg:w="331050"/><text x="44.5347%" y="655.50">OBR.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon:..</text></g><g><title>OBR.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;OBR::main::closure_env$3,OBR::main::closure_env$2&gt;,OBR::main::closure_env$1&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;OBR::main::closure_env$3,OBR::main::closure_env$2&gt;,OBR::main::closure_env$1&gt; &gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;OBR::main::closure_env$3,OBR::main::closure_env$2&gt;,OBR::main::closure_env$1&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;OBR::main::closure_env$3,OBR::main::closure_env$2&gt;,OBR::main::closure_env$1&gt; &gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault (331,050 samples, 55.71%)</title><rect x="44.2847%" y="629" width="55.7112%" height="15" fill="rgb(243,76,11)" fg:x="263151" fg:w="331050"/><text x="44.5347%" y="639.50">OBR.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_producer_con..</text></g><g><title>OBR.exe`std::panicking::try&lt;hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;OBR::main::closure_env$3,OBR::main::closure_env$2&gt;,OBR::main::closure_env$1&gt; &gt; &gt; &gt; &gt;(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer (331,046 samples, 55.71%)</title><rect x="44.2854%" y="613" width="55.7105%" height="15" fill="rgb(245,21,50)" fg:x="263155" fg:w="331046"/><text x="44.5354%" y="623.50">OBR.exe`std::panicking::try&lt;hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::ha..</text></g><g><title>OBR.exe`std::panicking::try::do_call (331,046 samples, 55.71%)</title><rect x="44.2854%" y="597" width="55.7105%" height="15" fill="rgb(228,9,43)" fg:x="263155" fg:w="331046"/><text x="44.5354%" y="607.50">OBR.exe`std::panicking::try::do_call</text></g><g><title>OBR.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;OBR::main::closure_env$3,OBR::main::closure_env$2&gt;,OBR::main::closure_env$1&gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer (331,046 samples, 55.71%)</title><rect x="44.2854%" y="581" width="55.7105%" height="15" fill="rgb(208,100,47)" fg:x="263155" fg:w="331046"/><text x="44.5354%" y="591.50">OBR.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::vec::DrainProducer&lt;tu..</text></g><g><title>OBR.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;OBR::main::closure_env$3,OBR::main::closure_env$2&gt;,OBR::main::closure_env$1&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;OBR::main::closure_env$3,OBR::main::closure_env$2&gt;,OBR::main::closure_env$1&gt; &gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; &gt;,tuple$&lt;hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;OBR::main::closure_env$3,OBR::main::closure_env$2&gt;,OBR::main::closure_env$1&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;OBR::main::closure_env$3,OBR::main::closure_env$2&gt;,OBR::main::closure_env$1&gt; &gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault (87,310 samples, 14.69%)</title><rect x="85.3029%" y="565" width="14.6931%" height="15" fill="rgb(232,26,8)" fg:x="506891" fg:w="87310"/><text x="85.5529%" y="575.50">OBR.exe`rayon_core::re..</text></g><g><title>OBR.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;OBR::main::closure_env$3,OBR::main::closure_env$2&gt;,OBR::main::closure_env$1&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;OBR::main::closure_env$3,OBR::main::closure_env$2&gt;,OBR::main::closure_env$1&gt; &gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;OBR::main::closure_env$3,OBR::main::closure_env$2&gt;,OBR::main::closure_env$1&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;OBR::main::closure_env$3,OBR::main::closure_env$2&gt;,OBR::main::closure_env$1&gt; &gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault (87,310 samples, 14.69%)</title><rect x="85.3029%" y="549" width="14.6931%" height="15" fill="rgb(216,166,38)" fg:x="506891" fg:w="87310"/><text x="85.5529%" y="559.50">OBR.exe`rayon_core::jo..</text></g><g><title>OBR.exe`std::panicking::try&lt;hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;OBR::main::closure_env$3,OBR::main::closure_env$2&gt;,OBR::main::closure_env$1&gt; &gt; &gt; &gt; &gt;(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer (87,309 samples, 14.69%)</title><rect x="85.3030%" y="533" width="14.6929%" height="15" fill="rgb(251,202,51)" fg:x="506892" fg:w="87309"/><text x="85.5530%" y="543.50">OBR.exe`std::panicking..</text></g><g><title>OBR.exe`std::panicking::try::do_call (87,309 samples, 14.69%)</title><rect x="85.3030%" y="517" width="14.6929%" height="15" fill="rgb(254,216,34)" fg:x="506892" fg:w="87309"/><text x="85.5530%" y="527.50">OBR.exe`std::panicking..</text></g><g><title>OBR.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;OBR::main::closure_env$3,OBR::main::closure_env$2&gt;,OBR::main::closure_env$1&gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer (87,309 samples, 14.69%)</title><rect x="85.3030%" y="501" width="14.6929%" height="15" fill="rgb(251,32,27)" fg:x="506892" fg:w="87309"/><text x="85.5530%" y="511.50">OBR.exe`rayon::iter::p..</text></g><g><title>OBR.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;OBR::main::closure_env$3,OBR::main::closure_env$2&gt;,OBR::main::closure_env$1&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;OBR::main::closure_env$3,OBR::main::closure_env$2&gt;,OBR::main::closure_env$1&gt; &gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; &gt;,tuple$&lt;hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;OBR::main::closure_env$3,OBR::main::closure_env$2&gt;,OBR::main::closure_env$1&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;OBR::main::closure_env$3,OBR::main::closure_env$2&gt;,OBR::main::closure_env$1&gt; &gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault (28,802 samples, 4.85%)</title><rect x="95.1490%" y="485" width="4.8470%" height="15" fill="rgb(208,127,28)" fg:x="565399" fg:w="28802"/><text x="95.3990%" y="495.50">OBR.ex..</text></g><g><title>OBR.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;OBR::main::closure_env$3,OBR::main::closure_env$2&gt;,OBR::main::closure_env$1&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;OBR::main::closure_env$3,OBR::main::closure_env$2&gt;,OBR::main::closure_env$1&gt; &gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;OBR::main::closure_env$3,OBR::main::closure_env$2&gt;,OBR::main::closure_env$1&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;OBR::main::closure_env$3,OBR::main::closure_env$2&gt;,OBR::main::closure_env$1&gt; &gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault (28,802 samples, 4.85%)</title><rect x="95.1490%" y="469" width="4.8470%" height="15" fill="rgb(224,137,22)" fg:x="565399" fg:w="28802"/><text x="95.3990%" y="479.50">OBR.ex..</text></g><g><title>OBR.exe`std::panicking::try&lt;hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;OBR::main::closure_env$3,OBR::main::closure_env$2&gt;,OBR::main::closure_env$1&gt; &gt; &gt; &gt; &gt;(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer (28,802 samples, 4.85%)</title><rect x="95.1490%" y="453" width="4.8470%" height="15" fill="rgb(254,70,32)" fg:x="565399" fg:w="28802"/><text x="95.3990%" y="463.50">OBR.ex..</text></g><g><title>OBR.exe`std::panicking::try::do_call (28,802 samples, 4.85%)</title><rect x="95.1490%" y="437" width="4.8470%" height="15" fill="rgb(229,75,37)" fg:x="565399" fg:w="28802"/><text x="95.3990%" y="447.50">OBR.ex..</text></g><g><title>OBR.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;OBR::main::closure_env$3,OBR::main::closure_env$2&gt;,OBR::main::closure_env$1&gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer (28,802 samples, 4.85%)</title><rect x="95.1490%" y="421" width="4.8470%" height="15" fill="rgb(252,64,23)" fg:x="565399" fg:w="28802"/><text x="95.3990%" y="431.50">OBR.ex..</text></g><g><title>OBR.exe`rayon::iter::plumbing::Producer::fold_with(rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;, rayon::iter::map::MapFolder&lt;rayon::iter::reduce::ReduceFolder&lt;OBR::main::closure_env$3,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault (28,802 samples, 4.85%)</title><rect x="95.1490%" y="405" width="4.8470%" height="15" fill="rgb(232,162,48)" fg:x="565399" fg:w="28802"/><text x="95.3990%" y="415.50">OBR.ex..</text></g><g><title>OBR.exe`rayon::iter::map::impl$8::consume_iter(rayon::iter::map::MapFolder&lt;rayon::iter::reduce::ReduceFolder&lt;OBR::main::closure_env$3,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; &gt;,OBR::main::closure_env$1&gt;, rayon::vec::SliceDrain&lt;tuple$ (28,802 samples, 4.85%)</title><rect x="95.1490%" y="389" width="4.8470%" height="15" fill="rgb(246,160,12)" fg:x="565399" fg:w="28802"/><text x="95.3990%" y="399.50">OBR.ex..</text></g><g><title>OBR.exe`core::iter::adapters::map::impl$2::fold&lt;hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,rayon::vec::SliceDrain&lt;tuple$&lt;usize,usize&gt; &gt;,ref$&lt;OBR::main::closure_env$1&gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,ref$&lt;OBR::main::closure_env$3&gt; &gt;(core::iter::adapters::map::Map&lt;rayon::vec::SliceDrain&lt;tuple$&lt;usize,usize&gt; &gt;,ref$&lt;OBR::main::closure_env$1&gt; &gt;, hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault (28,802 samples, 4.85%)</title><rect x="95.1490%" y="373" width="4.8470%" height="15" fill="rgb(247,166,0)" fg:x="565399" fg:w="28802"/><text x="95.3990%" y="383.50">OBR.ex..</text></g><g><title>OBR.exe`core::iter::traits::iterator::Iterator::fold(rayon::vec::SliceDrain&lt;tuple$&lt;usize,usize&gt; &gt;, hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;, core::iter::adapters::map::map_fold::closure_env$0&lt;tuple$&lt;usize,usize&gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,ref$&lt;OBR::main::closure_env$1&gt;,ref$ (28,802 samples, 4.85%)</title><rect x="95.1490%" y="357" width="4.8470%" height="15" fill="rgb(249,219,21)" fg:x="565399" fg:w="28802"/><text x="95.3990%" y="367.50">OBR.ex..</text></g><g><title>OBR.exe`core::iter::adapters::map::map_fold::closure$0(core::iter::adapters::map::map_fold::closure_env$0&lt;tuple$&lt;usize,usize&gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,ref$&lt;OBR::main::closure_env$1&gt;,ref$&lt;OBR::main::closure_env$3&gt; &gt;*, hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;, tuple$ (28,802 samples, 4.85%)</title><rect x="95.1490%" y="341" width="4.8470%" height="15" fill="rgb(205,209,3)" fg:x="565399" fg:w="28802"/><text x="95.3990%" y="351.50">OBR.ex..</text></g><g><title>OBR.exe`core::iter::adapters::map::impl$2::fold&lt;tuple$&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,f64&gt;,core::slice::iter::Split&lt;u8,OBR::main::closure$1::closure_env$0&gt;,OBR::main::closure$1::closure_env$1,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,OBR::main::closure$1::closure_env$2&gt;(core::iter::adapters::map::Map&lt;core::slice::iter::Split&lt;u8,OBR::main::closure$1::closure_env$0&gt;,OBR::main::closure$1::closure_env$1&gt;, hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault (28,802 samples, 4.85%)</title><rect x="95.1490%" y="325" width="4.8470%" height="15" fill="rgb(243,44,1)" fg:x="565399" fg:w="28802"/><text x="95.3990%" y="335.50">OBR.ex..</text></g><g><title>OBR.exe`core::iter::traits::iterator::Iterator::fold(core::slice::iter::Split&lt;u8,OBR::main::closure$1::closure_env$0&gt;, hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;, core::iter::adapters::map::map_fold::closure_env$0&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,tuple$&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,f64&gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault (28,802 samples, 4.85%)</title><rect x="95.1490%" y="309" width="4.8470%" height="15" fill="rgb(206,159,16)" fg:x="565399" fg:w="28802"/><text x="95.3990%" y="319.50">OBR.ex..</text></g><g><title>OBR.exe`core::slice::iter::impl$16::next(core::slice::iter::Split (6,102 samples, 1.03%)</title><rect x="98.9691%" y="293" width="1.0269%" height="15" fill="rgb(244,77,30)" fg:x="588099" fg:w="6102"/><text x="99.2191%" y="303.50"></text></g><g><title>OBR.exe`core::slice::iter::impl$181::position(core::slice::iter::Iter&lt;u8&gt;*, core::slice::iter::impl$16::next::closure_env$0 (5,029 samples, 0.85%)</title><rect x="99.1496%" y="277" width="0.8463%" height="15" fill="rgb(218,69,12)" fg:x="589172" fg:w="5029"/><text x="99.3996%" y="287.50"></text></g><g><title>OBR.exe`core::slice::iter::impl$181::next(core::slice::iter::Iter (626 samples, 0.11%)</title><rect x="99.8906%" y="261" width="0.1053%" height="15" fill="rgb(212,87,7)" fg:x="593575" fg:w="626"/><text x="100.1406%" y="271.50"></text></g><g><title>OBR.exe`core::ptr::non_null::impl$12::eq(core::ptr::non_null::NonNull&lt;u8&gt;*, core::ptr::non_null::NonNull (559 samples, 0.09%)</title><rect x="99.9019%" y="245" width="0.0941%" height="15" fill="rgb(245,114,25)" fg:x="593642" fg:w="559"/><text x="100.1519%" y="255.50"></text></g><g><title>OBR.exe`rayon_core::registry::WorkerThread::execute (594,182 samples, 99.99%)</title><rect x="0.0034%" y="757" width="99.9928%" height="15" fill="rgb(210,61,42)" fg:x="20" fg:w="594182"/><text x="0.2534%" y="767.50">OBR.exe`rayon_core::registry::WorkerThread::execute</text></g><g><title>OBR.exe`rayon_core::job::JobRef::execute (594,182 samples, 99.99%)</title><rect x="0.0034%" y="741" width="99.9928%" height="15" fill="rgb(211,52,33)" fg:x="20" fg:w="594182"/><text x="0.2534%" y="751.50">OBR.exe`rayon_core::job::JobRef::execute</text></g><g><title>OBR.exe`rayon_core::job::impl$4::execute&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;tuple$&lt;usize,usize&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;OBR::main::closure_env$3,OBR::main::closure_env$2&gt;,OBR::main::closure_env$1&gt; &gt; &gt;,hashbrown::map::HashMap&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,OBR::Station,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; &gt;(tuple$ (565,433 samples, 95.15%)</title><rect x="4.8414%" y="725" width="95.1547%" height="15" fill="rgb(234,58,33)" fg:x="28769" fg:w="565433"/><text x="5.0914%" y="735.50">OBR.exe`rayon_core::job::impl$4::execute&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;hashbrown::map::HashMap&lt;ref$&lt;slice2..</text></g><g><title>OBR.exe`alloc::sync::impl$29::deref(alloc::sync::Arc&lt;std::thread::Packet&lt;tuple$ (594,188 samples, 99.99%)</title><rect x="0.0032%" y="885" width="99.9938%" height="15" fill="rgb(220,115,36)" fg:x="19" fg:w="594188"/><text x="0.2532%" y="895.50">OBR.exe`alloc::sync::impl$29::deref(alloc::sync::Arc&lt;std::thread::Packet&lt;tuple$</text></g><g><title>OBR.exe`alloc::sync::Arc&lt;std::thread::Packet&lt;tuple$&lt;&gt; &gt;,alloc::alloc::Global&gt;::inner (594,188 samples, 99.99%)</title><rect x="0.0032%" y="869" width="99.9938%" height="15" fill="rgb(243,153,54)" fg:x="19" fg:w="594188"/><text x="0.2532%" y="879.50">OBR.exe`alloc::sync::Arc&lt;std::thread::Packet&lt;tuple$&lt;&gt; &gt;,alloc::alloc::Global&gt;::inner</text></g><g><title>OBR.exe`core::ptr::non_null::NonNull&lt;alloc::sync::ArcInner&lt;std::thread::Packet&lt;tuple$&lt;&gt; &gt; &gt; &gt;::as_ref (594,188 samples, 99.99%)</title><rect x="0.0032%" y="853" width="99.9938%" height="15" fill="rgb(251,47,18)" fg:x="19" fg:w="594188"/><text x="0.2532%" y="863.50">OBR.exe`core::ptr::non_null::NonNull&lt;alloc::sync::ArcInner&lt;std::thread::Packet&lt;tuple$&lt;&gt; &gt; &gt; &gt;::as_ref</text></g><g><title>OBR.exe`std::sys_common::backtrace::__rust_begin_short_backtrace&lt;rayon_core::registry::impl$2::spawn::closure_env$0,tuple$&lt;&gt; &gt; (594,188 samples, 99.99%)</title><rect x="0.0032%" y="837" width="99.9938%" height="15" fill="rgb(242,102,42)" fg:x="19" fg:w="594188"/><text x="0.2532%" y="847.50">OBR.exe`std::sys_common::backtrace::__rust_begin_short_backtrace&lt;rayon_core::registry::impl$2::spawn::closure_env$0,tuple$&lt;&gt; &gt;</text></g><g><title>OBR.exe`rayon_core::registry::ThreadBuilder::run (594,188 samples, 99.99%)</title><rect x="0.0032%" y="821" width="99.9938%" height="15" fill="rgb(234,31,38)" fg:x="19" fg:w="594188"/><text x="0.2532%" y="831.50">OBR.exe`rayon_core::registry::ThreadBuilder::run</text></g><g><title>OBR.exe`rayon_core::registry::main_loop (594,188 samples, 99.99%)</title><rect x="0.0032%" y="805" width="99.9938%" height="15" fill="rgb(221,117,51)" fg:x="19" fg:w="594188"/><text x="0.2532%" y="815.50">OBR.exe`rayon_core::registry::main_loop</text></g><g><title>OBR.exe`rayon_core::registry::WorkerThread::wait_until_out_of_work (594,188 samples, 99.99%)</title><rect x="0.0032%" y="789" width="99.9938%" height="15" fill="rgb(212,20,18)" fg:x="19" fg:w="594188"/><text x="0.2532%" y="799.50">OBR.exe`rayon_core::registry::WorkerThread::wait_until_out_of_work</text></g><g><title>OBR.exe`rayon_core::registry::WorkerThread::wait_until_cold (594,188 samples, 99.99%)</title><rect x="0.0032%" y="773" width="99.9938%" height="15" fill="rgb(245,133,36)" fg:x="19" fg:w="594188"/><text x="0.2532%" y="783.50">OBR.exe`rayon_core::registry::WorkerThread::wait_until_cold</text></g><g><title>OBR.exe`alloc::boxed::impl$47::call_once (594,189 samples, 99.99%)</title><rect x="0.0032%" y="997" width="99.9939%" height="15" fill="rgb(212,6,19)" fg:x="19" fg:w="594189"/><text x="0.2532%" y="1007.50">OBR.exe`alloc::boxed::impl$47::call_once</text></g><g><title>OBR.exe`alloc::boxed::impl$47::call_once (594,189 samples, 99.99%)</title><rect x="0.0032%" y="981" width="99.9939%" height="15" fill="rgb(218,1,36)" fg:x="19" fg:w="594189"/><text x="0.2532%" y="991.50">OBR.exe`alloc::boxed::impl$47::call_once</text></g><g><title>OBR.exe`alloc::boxed::impl$8::drop (594,189 samples, 99.99%)</title><rect x="0.0032%" y="965" width="99.9939%" height="15" fill="rgb(246,84,54)" fg:x="19" fg:w="594189"/><text x="0.2532%" y="975.50">OBR.exe`alloc::boxed::impl$8::drop</text></g><g><title>OBR.exe`core::alloc::layout::Layout::for_value_raw (594,189 samples, 99.99%)</title><rect x="0.0032%" y="949" width="99.9939%" height="15" fill="rgb(242,110,6)" fg:x="19" fg:w="594189"/><text x="0.2532%" y="959.50">OBR.exe`core::alloc::layout::Layout::for_value_raw</text></g><g><title>OBR.exe`core::mem::size_of_val_raw (594,189 samples, 99.99%)</title><rect x="0.0032%" y="933" width="99.9939%" height="15" fill="rgb(214,47,5)" fg:x="19" fg:w="594189"/><text x="0.2532%" y="943.50">OBR.exe`core::mem::size_of_val_raw</text></g><g><title>OBR.exe`core::ops::function::FnOnce::call_once&lt;std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;rayon_core::registry::impl$2::spawn::closure_env$0,tuple$&lt;&gt; &gt;,tuple$&lt;&gt; &gt;(std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;rayon_core::registry::impl$2::spawn::closure_env$0,tuple$ (594,189 samples, 99.99%)</title><rect x="0.0032%" y="917" width="99.9939%" height="15" fill="rgb(218,159,25)" fg:x="19" fg:w="594189"/><text x="0.2532%" y="927.50">OBR.exe`core::ops::function::FnOnce::call_once&lt;std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;rayon_core::registry::impl$2::spawn::closure_env$0,tuple$&lt;&gt; &gt;,tuple..</text></g><g><title>OBR.exe`std::thread::impl$0::spawn_unchecked_::closure$1(std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;rayon_core::registry::impl$2::spawn::closure_env$0,tuple$ (594,189 samples, 99.99%)</title><rect x="0.0032%" y="901" width="99.9939%" height="15" fill="rgb(215,211,28)" fg:x="19" fg:w="594189"/><text x="0.2532%" y="911.50">OBR.exe`std::thread::impl$0::spawn_unchecked_::closure$1(std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;rayon_core::registry::impl$2::spawn::closure_env$0,tuple$</text></g><g><title>OBR.exe`std::sys::windows::thread::impl$0::new::thread_start (594,190 samples, 99.99%)</title><rect x="0.0032%" y="1013" width="99.9941%" height="15" fill="rgb(238,59,32)" fg:x="19" fg:w="594190"/><text x="0.2532%" y="1023.50">OBR.exe`std::sys::windows::thread::impl$0::new::thread_start</text></g><g><title>`0x7FFE67A4AA58 (594,207 samples, 100.00%)</title><rect x="0.0008%" y="1045" width="99.9970%" height="15" fill="rgb(226,82,3)" fg:x="5" fg:w="594207"/><text x="0.2508%" y="1055.50">`0x7FFE67A4AA58</text></g><g><title>`0x7FFE6688257D (594,207 samples, 100.00%)</title><rect x="0.0008%" y="1029" width="99.9970%" height="15" fill="rgb(240,164,32)" fg:x="5" fg:w="594207"/><text x="0.2508%" y="1039.50">`0x7FFE6688257D</text></g><g><title>all (594,225 samples, 100%)</title><rect x="0.0000%" y="1061" width="100.0000%" height="15" fill="rgb(232,46,7)" fg:x="0" fg:w="594225"/><text x="0.2500%" y="1071.50"></text></g></svg></svg>